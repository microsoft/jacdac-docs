{"version":3,"file":"5913-95258463640b71d9a0fc.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Remove.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/RotateLeft.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/RotateRight.js","webpack://jacdac-docs/./src/components/dashboard/DashboardLEDStrip.tsx","webpack://jacdac-docs/./src/components/ui/SelectWithLabel.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.11 8.53 5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z\"\n}), 'RotateLeft');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.55 5.55 11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42 1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z\"\n}), 'RotateRight');\nexports.default = _default;","import {\n    Grid,\n    MenuItem,\n    SelectChangeEvent,\n    TextField,\n    Typography,\n} from \"@mui/material\"\nimport React, {\n    ChangeEvent,\n    lazy,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { lightEncode } from \"../../../jacdac-ts/src/jdom/light\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport RemoveIcon from \"@mui/icons-material/Remove\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport AddIcon from \"@mui/icons-material/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { LedStripServer } from \"../../../jacdac-ts/src/servers/ledstripserver\"\nimport LightWidget from \"../widgets/LightWidget\"\nimport {\n    LedStripCmd,\n    LedStripReg,\n    LedStripVariant,\n    REFRESH,\n    RENDER,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport ColorButtons, { DEFAULT_COLORS } from \"../widgets/ColorButtons\"\nimport Suspense from \"../ui/Suspense\"\nimport RotateLeftIcon from \"@mui/icons-material/RotateLeft\"\nimport RotateRightIcon from \"@mui/icons-material/RotateRight\"\nimport bus from \"../../jacdac/providerbus\"\nimport useRegister from \"../hooks/useRegister\"\nimport SettingsIcon from \"@mui/icons-material/Settings\"\nimport RegisterInput from \"../RegisterInput\"\nconst ColorInput = lazy(() => import(\"../ui/ColorInput\"))\n\n/*\n0xD6: range P=0 N=length W=1 S=0- range from pixel P, Npixels long (currently unsupported: every Wpixels skip Spixels)\n*/\n\ninterface LightCommand {\n    name: string\n    args: \"C+\" | \"K\" | \"M\"\n    description: string\n}\n\nconst lightCommands = [\n    {\n        name: \"setall\",\n        args: \"C+\",\n        description: \"set all pixels in current range to given color pattern\",\n    },\n    {\n        name: \"fade\",\n        args: \"C+\",\n        description:\n            \"set pixels in current range to colors between colors in sequence\",\n    },\n    {\n        name: \"rotfwd\",\n        args: \"K\",\n        description: \"rotate (shift) pixels away from the connector\",\n        valueDescription: \"pixel positions to rotate\",\n    },\n    {\n        name: \"rotback\",\n        args: \"K\",\n        description: \"rotate (shift) pixels towards the connector\",\n        valueDescription: \"pixel positions to rotate\",\n    },\n]\n\nfunction LightCommand(props: { service: JDService; expanded: boolean }) {\n    const { service } = props\n    const [sending, setSending] = useState(false)\n\n    const [command, setCommand] = useState(lightCommands[1])\n    const [offset, setOffset] = useState(\"1\")\n    const [duration, setDuration] = useState(\"100\")\n    const [colors, setColors] = useState([\"#0000ff\", \"#ff0000\"])\n    const [mode, setMode] = useState(0)\n\n    const { name, args, description, valueDescription } = command\n    const dcolors = args == \"PC\" ? colors.slice(0, 1) : colors\n\n    const encoded = useMemo(() => {\n        let sargs = \"\"\n        let vargs = []\n        switch (args) {\n            case \"C+\":\n                sargs = Array(colors.length).fill(\"#\").join(\" \")\n                vargs = colors.map(c => parseInt(c.slice(1), 16))\n                break\n            case \"K\": {\n                sargs = \"%\"\n                vargs = [parseInt(offset)]\n                break\n            }\n            case \"PC\": {\n                sargs = \"% #\"\n                vargs = [parseInt(offset), parseInt(colors[0].slice(1), 16)]\n                break\n            }\n        }\n\n        if (mode) vargs.unshift(mode)\n\n        if (vargs.some(v => v === undefined || isNaN(v))) return undefined\n\n        let ms = parseInt(duration)\n        if (isNaN(ms)) ms = 100\n        const src = [mode && `tmpmode %`, `${name} ${sargs}`, `show %`]\n            .filter(l => !!l)\n            .join(\"\\n\")\n        const largs = [...vargs, ms]\n        const r = lightEncode(src, largs)\n        return r\n    }, [command, colors, duration, offset, mode])\n\n    const sendCommand = async () => {\n        if (!encoded) return\n        try {\n            setSending(true)\n            await service.sendCmdAsync(LedStripCmd.Run, encoded)\n        } finally {\n            setSending(false)\n        }\n    }\n    const handleCommandChange = (ev: SelectChangeEvent<string>) => {\n        const newName = ev.target.value\n        setCommand(lightCommands.find(cmd => cmd.name === newName))\n    }\n    const handleOffsetChange = (ev: ChangeEvent<{ value: string }>) => {\n        setOffset(ev.target.value)\n    }\n    const handleModeChange = (ev: SelectChangeEvent<string>) => {\n        const v = parseInt(ev.target.value)\n        if (!isNaN(v)) setMode(v)\n    }\n    const handleDurationChange = (ev: ChangeEvent<{ value: string }>) => {\n        setDuration(ev.target.value)\n    }\n    const handleColorChange = (index: number) => async (color: string) => {\n        const cs = colors.slice(0)\n        cs[index] = color\n        setColors(cs)\n    }\n    const handleRemoveColor = () => {\n        const cs = colors.slice(0)\n        cs.pop()\n        setColors(cs)\n    }\n    const handleAddColor = () => {\n        const cs = colors.slice(0)\n        cs.push(\"#ff0000\")\n        setColors(cs)\n    }\n\n    return (\n        <>\n            <Grid item>\n                <Grid\n                    container\n                    spacing={1}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    justifyContent=\"flex-start\"\n                >\n                    <Grid item key=\"descr\" xs={12}>\n                        <Typography variant=\"caption\">{description}</Typography>\n                    </Grid>\n                    <Grid item key=\"select\" xs={12}>\n                        <SelectWithLabel\n                            disabled={sending}\n                            fullWidth={true}\n                            label=\"command\"\n                            value={name}\n                            onChange={handleCommandChange}\n                        >\n                            {lightCommands.map(cmd => (\n                                <MenuItem key={cmd.name} value={cmd.name}>\n                                    {cmd.name}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item key=\"time\" xs={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            label={\"duration (milliseconds)\"}\n                            type=\"number\"\n                            value={duration}\n                            onChange={handleDurationChange}\n                        />\n                    </Grid>\n                    <Grid item key=\"mode\" xs={6}>\n                        <SelectWithLabel\n                            fullWidth={true}\n                            label=\"update mode\"\n                            value={mode + \"\"}\n                            onChange={handleModeChange}\n                        >\n                            <MenuItem value={0}>replace</MenuItem>\n                            <MenuItem value={1}>add</MenuItem>\n                            <MenuItem value={2}>substract</MenuItem>\n                            <MenuItem value={3}>multiply</MenuItem>\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid\n                    container\n                    spacing={1}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    alignContent=\"flex-start\"\n                    justifyContent=\"flex-start\"\n                >\n                    {(args === \"K\" || args === \"PC\") && (\n                        <Grid item key=\"K\">\n                            <TextField\n                                variant=\"outlined\"\n                                type=\"number\"\n                                helperText={valueDescription}\n                                value={offset}\n                                onChange={handleOffsetChange}\n                            />\n                        </Grid>\n                    )}\n                    {(args === \"C+\" || args === \"PC\") &&\n                        dcolors.map((c, i) => (\n                            <Grid item xs key={i}>\n                                <Suspense>\n                                    <ColorInput\n                                        value={c}\n                                        onChange={handleColorChange(i)}\n                                    />\n                                </Suspense>\n                            </Grid>\n                        ))}\n                    {args === \"C+\" && (\n                        <Grid item xs key=\"minuscolor\">\n                            <IconButtonWithTooltip\n                                disabled={colors.length < 2}\n                                title={\"Remove color\"}\n                                onClick={handleRemoveColor}\n                            >\n                                <RemoveIcon />\n                            </IconButtonWithTooltip>\n                            <IconButtonWithTooltip\n                                disabled={colors.length > 4}\n                                title={\"Add color\"}\n                                onClick={handleAddColor}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                        </Grid>\n                    )}\n                    <Grid item xs key=\"run\">\n                        <IconButtonWithTooltip\n                            disabled={!encoded}\n                            title={\"Run command\"}\n                            onClick={sendCommand}\n                        >\n                            <PlayArrowIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nconst MAX_ROT = 6\n\nfunction EffectButtons(props: {\n    setEffect: (value: string) => void\n    configure: boolean\n    toggleConfigure: () => void\n    addGradientColor: () => void\n}) {\n    const { setEffect, configure, toggleConfigure, addGradientColor } = props\n    const [rot, setRot] = useState(0)\n\n    const handleRotChanged = () =>\n        setRot(value => (value < 0 ? 2 : value >= MAX_ROT ? 0 : value + 1))\n    const handleCounterRotChanged = () =>\n        setRot(value => (value > 0 ? -2 : value <= -MAX_ROT ? 0 : value - 1))\n\n    useEffect(() => {\n        const effect: string[] = []\n        if (rot)\n            effect.push(`${rot > 0 ? \"rotfwd\" : \"rotback\"} ${Math.abs(rot)}`)\n        setEffect(effect.join(\"\\n\"))\n    }, [rot])\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <IconButtonWithTooltip\n                    selected={rot < 0}\n                    title={\n                        rot < 0\n                            ? `rotate counter clockwise, ${rot} per frame`\n                            : `rotate counter clockwise`\n                    }\n                    onClick={handleCounterRotChanged}\n                >\n                    <RotateLeftIcon />\n                </IconButtonWithTooltip>\n            </Grid>\n            <Grid item>\n                <IconButtonWithTooltip\n                    selected={rot > 0}\n                    title={\n                        rot > 0\n                            ? `rotate clockwise, ${rot} per frame`\n                            : `rotate clockwise`\n                    }\n                    onClick={handleRotChanged}\n                >\n                    <RotateRightIcon />\n                </IconButtonWithTooltip>\n            </Grid>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={\"Add gradient color\"}\n                    onClick={addGradientColor}\n                >\n                    <AddIcon />\n                </IconButtonWithTooltip>\n            </Grid>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={\n                        configure ? \"Hide configuration\" : \"Show configuration\"\n                    }\n                    onClick={toggleConfigure}\n                >\n                    <SettingsIcon />\n                </IconButtonWithTooltip>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst configureRegisters = [\n    LedStripReg.Brightness,\n    LedStripReg.ActualBrightness,\n    LedStripReg.NumPixels,\n    LedStripReg.MaxPixels,\n    LedStripReg.LightType,\n    LedStripReg.MaxPower,\n]\n\nfunction RegisterInputItem(props: {\n    service: JDService\n    registerCode: number\n    visible: boolean\n}) {\n    const { service, registerCode, visible } = props\n    const register = useRegister(service, registerCode)\n    return (\n        <RegisterInput\n            register={register}\n            visible={visible}\n            showRegisterName={true}\n        />\n    )\n}\n\nexport default function DashboardLEDStrip(props: DashboardServiceProps) {\n    const { service, services, expanded, visible, controlled } = props\n    const [configure, setConfigure] = useState(false)\n    const animationCounter = useRef(0)\n    const [penColor, setPenColor] = useState<number>(undefined)\n    const [gradientColors, setGradientColors] = useState<number[]>([])\n    const [effect, setEffect] = useState(\"\")\n    const canLedClick = !isNaN(penColor) && expanded && !controlled\n    const server = useServiceServer<LedStripServer>(\n        service,\n        () => new LedStripServer({ variant: LedStripVariant.Strip })\n    )\n    const handleColorChange = (newColor: number) =>\n        setPenColor(current => (newColor === current ? undefined : newColor))\n    const handleGradientColorChange = (index: number) => (newColor: number) =>\n        setGradientColors(current =>\n            newColor === current[index]\n                ? [...current.slice(0, index), ...current.slice(index + 1)]\n                : [\n                      ...current.slice(0, index),\n                      newColor,\n                      ...current.slice(index + 1),\n                  ]\n        )\n    const handleLedClick: (index: number) => void = async (index: number) => {\n        const encoded = lightEncode(\n            `setone % #\nshow 20`,\n            [index, penColor]\n        )\n        await service?.sendCmdAsync(LedStripCmd.Run, encoded)\n    }\n    const toggleConfigure = () => setConfigure(c => !c)\n    const handleAddGradientColor = () =>\n        setGradientColors(current => [...current, DEFAULT_COLORS[0].value])\n\n    // rotation animation\n    const animationSkip = 1\n    useEffect(\n        () =>\n            effect\n                ? bus.subscribe(REFRESH, () => {\n                      const a = (animationCounter.current =\n                          animationCounter.current + 1)\n                      if (a % animationSkip === 0) {\n                          const command: string[] = []\n                          const args: number[] = []\n                          if (!isNaN(penColor) && !gradientColors.length) {\n                              command.push(`setone 0 #`)\n                              args.push(penColor)\n                          }\n                          command.push(effect)\n                          command.push(`show 0`)\n                          const encoded = lightEncode(command.join(\"\\n\"), args)\n                          service?.sendCmdAsync(LedStripCmd.Run, encoded)\n                      }\n                  })\n                : undefined,\n        [service, effect, penColor]\n    )\n\n    // set gradient\n    useEffect(() => {\n        if (gradientColors.length) {\n            const command = [\n                `fade ${Array(gradientColors.length + 1)\n                    .fill(0)\n                    .map(() => \"#\")\n                    .join(\" \")}`,\n                `show 0`,\n            ]\n            const args = [penColor, ...gradientColors].map(c => c || 0)\n            const encoded = lightEncode(command.join(\"\\n\"), args)\n            service?.sendCmdAsync(LedStripCmd.Run, encoded)\n        }\n    }, [service, penColor, gradientColors])\n    const colors = useCallback(() => server?.colors, [server])\n    const registers = useMemo(\n        () => ({\n            numPixels: LedStripReg.NumPixels,\n            variant: LedStripReg.Variant,\n            actualBrightness: LedStripReg.ActualBrightness,\n            numColumns: LedStripReg.NumColumns,\n        }),\n        []\n    )\n    const subscribeColors = useCallback(\n        handler => server?.subscribe(RENDER, handler),\n        [server]\n    )\n    return (\n        <>\n            {server && (\n                <LightWidget\n                    colors={colors}\n                    subscribeColors={subscribeColors}\n                    registers={registers}\n                    widgetCount={services?.length}\n                    onLedClick={canLedClick ? handleLedClick : undefined}\n                    {...props}\n                />\n            )}\n            {expanded && (\n                <Grid container direction=\"column\" spacing={1}>\n                    <Grid item>\n                        <EffectButtons\n                            setEffect={setEffect}\n                            configure={configure}\n                            toggleConfigure={toggleConfigure}\n                            addGradientColor={handleAddGradientColor}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ColorButtons\n                            color={penColor}\n                            onColorChange={handleColorChange}\n                        />\n                    </Grid>\n                    {gradientColors.map((gradientColor, index) => (\n                        <Grid item key={`gradient${index}`}>\n                            <ColorButtons\n                                color={gradientColor}\n                                onColorChange={handleGradientColorChange(index)}\n                            />\n                        </Grid>\n                    ))}\n                    {configure && (\n                        <Grid item>\n                            <LightCommand\n                                service={service}\n                                expanded={expanded}\n                            />\n                        </Grid>\n                    )}\n                    {configure &&\n                        configureRegisters.map(code => (\n                            <Grid item key={code}>\n                                <RegisterInputItem\n                                    service={service}\n                                    registerCode={code}\n                                    visible={visible}\n                                />\n                            </Grid>\n                        ))}\n                </Grid>\n            )}\n        </>\n    )\n}\n","import {\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    MenuItem,\n    Select,\n    SelectChangeEvent,\n    SxProps,\n    Theme,\n} from \"@mui/material\"\nimport React, { ChangeEvent, ReactNode } from \"react\"\nimport { useId } from \"react\"\n\nexport default function SelectWithLabel(props: {\n    sx?: SxProps<Theme>\n    required?: boolean\n    label?: string\n    disabled?: boolean\n    error?: string\n    value?: string\n    placeholder?: string\n    type?: string\n    fullWidth?: boolean\n    onChange?: (ev: SelectChangeEvent<unknown>) => void\n    onClose?: (ev: ChangeEvent<unknown>) => void\n    helperText?: string\n    children?: ReactNode\n    none?: ReactNode\n    size?: \"small\" | \"medium\"\n}) {\n    const {\n        sx,\n        label,\n        fullWidth,\n        required,\n        disabled,\n        value,\n        error,\n        placeholder,\n        onChange,\n        onClose,\n        children,\n        helperText,\n        type,\n        none,\n        size,\n    } = props\n    const id = useId()\n    const labelId = id + \"-label\"\n    const descrId = id + \"-descr\"\n    const hasDescr = !!helperText || !!error\n\n    return (\n        <FormControl fullWidth={fullWidth} variant=\"outlined\">\n            <InputLabel id={labelId} key=\"label\">\n                {required ? `${label} *` : label}\n            </InputLabel>\n            <Select\n                id={id}\n                sx={sx}\n                disabled={disabled}\n                label={label}\n                value={value}\n                error={!!error}\n                fullWidth={true}\n                placeholder={placeholder}\n                type={type}\n                labelId={labelId}\n                aria-describedby={hasDescr ? descrId : undefined}\n                onChange={onChange}\n                onClose={onClose}\n                size={size}\n            >\n                {none !== undefined && (\n                    <MenuItem key={\"none\"} value={\"\"}>\n                        {none}\n                    </MenuItem>\n                )}\n                {children}\n            </Select>\n            {hasDescr && (\n                <FormHelperText id={descrId}>\n                    {error || helperText}\n                </FormHelperText>\n            )}\n        </FormControl>\n    )\n}\n"],"names":["ColorInput","lazy","lightCommands","name","args","description","valueDescription","useState","dcolors","colors","encoded","useMemo","sargs","vargs","Array","c","parseInt","v","isNaN","ms","src","mode","l","largs","r","lightEncode","sendCommand","setSending","service","LedStripCmd","handleCommandChange","ev","newName","setCommand","cmd","handleOffsetChange","setOffset","handleModeChange","setMode","handleDurationChange","setDuration","handleColorChange","index","cs","setColors","handleRemoveColor","handleAddColor","MAX_ROT","handleRotChanged","setRot","value","handleCounterRotChanged","useEffect","effect","rot","Math","setEffect","configure","configureRegisters","LedStripReg","register","useRegister","animationCounter","useRef","canLedClick","server","useServiceServer","variant","LedStripVariant","newColor","setPenColor","current","handleGradientColorChange","setGradientColors","handleLedClick","toggleConfigure","setConfigure","handleAddGradientColor","DEFAULT_COLORS","animationSkip","bus","a","command","gradientColors","useCallback","registers","numPixels","actualBrightness","numColumns","subscribeColors","handler","services","expanded","code","id","useId","labelId","descrId","hasDescr","required","label","none","error"],"sourceRoot":""}