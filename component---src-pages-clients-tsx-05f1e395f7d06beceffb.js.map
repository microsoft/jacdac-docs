{"version":3,"file":"component---src-pages-clients-tsx-05f1e395f7d06beceffb.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIe,0BAA+C,CAC1D,GAAM,WAAeA,oBAAU,CAA/B,+BAA+B,CAA/B,CACA,GAAM,OAAN,MACA,SACI,GAAIC,QAAQ,GAAZ,OACI,mBACI,8CACI,KAAK,CADT,GAEI,GAAG,CAFP,oBAGI,GAAG,CAHP,wFAFR,KAEQ,GADJ,CADJ,IASI,oBACI,8CACI,KAAK,CADT,GAEI,GAAG,CAFP,mBAGI,GAAG,CAHP,wFAXZ,IAWY,GADJ,CAVR,KAiBK,IAAIA,QAAQ,GAAZ,OACD,mBACI,8CACI,GAAG,CADP,oBAEI,GAAG,CAFP,wFAFH,KAEG,GADJ,CADC,IAQD,oBACI,8CACI,GAAG,CADP,mBAEI,GAAG,CAFP,wFADJ,KACI,GADJ,CAMP;;;;AC/Bc,kBAAmB,CAC9B,mBACI,0CACI,SAAS,CADb,KAEI,OAAO,CAFX,GAGI,SAAS,CAHb,SAII,YAAY,CAJhB,SAKI,UAAU,CALd,uBAOI,+CACI,KAAK,CADT,qBAEI,SAAS,CAAC,+BACV;AACA;AAJJ,EAPJ,cAcI,8CACI,KAAK,CADT,MAEI,QAAQ,CAFZ,WAGI,WAAW,CAHf,2DAII,UAAU,CAJd,4BAKI,aAAa,CALjB,OAMI,SAAS,CANb,oBAOI,KAAK,cACD,8CACI,GAAG,CADP,iBAEI,GAAG,CAFP,8DAtBZ,KAsBY,GARR,EAdJ,cA6BI,8CACI,KAAK,CADT,KAEI,QAAQ,CAFZ,4BAGI,WAAW,CAHf,oKAII,UAAU,CAJd,yCAKI,aAAa,CALjB,OAMI,SAAS,CANb,sBAOI,YAAY,CAPhB,EAQI,KAAK,cAAE,+BArCf,IAqCe,CARX,EA7BJ,cAwCI,8CACI,KAAK,CADT,MAEI,QAAQ,CAFZ,QAGI,YAAY,CAHhB,EAII,WAAW,CAJf,4BAKI,UAAU,CALd,oBAMI,aAAa,CANjB,OAOI,SAAS,CAPb,2BAQI,KAAK,cACD,8CACI,GAAG,CADP,aAEI,GAAG,CAFP,mFAjDZ,KAiDY,GATR,EAxCJ,cAwDI,8CACI,KAAK,CADT,KAEI,QAAQ,CAFZ,eAGI,YAAY,CAHhB,EAII,WAAW,CAJf,uEAKI,UAAU,CALd,gCAMI,aAAa,CANjB,OAOI,SAAS,CAPb,wBAQI,KAAK,cACD,8CACI,GAAG,CADP,qBAEI,GAAG,CAFP,gFAjEZ,IAiEY,GATR,EAxDJ,cAwEI,8CACI,KAAK,CADT,KAEI,QAAQ,CAFZ,YAGI,YAAY,CAHhB,EAII,WAAW,CAJf,6DAKI,UAAU,CALd,gBAMI,aAAa,CANjB,OAOI,SAAS,CAPb,qBAQI,KAAK,cACD,8CACI,GAAG,CADP,kBAEI,GAAG,CAFP,uDAjFZ,KAiFY,GATR,EAxEJ,cAwFI,+CACI,SAAS,CADb,2BAEI,SAAS,CAFb,kBAGI,UAAU,CAHd,YAII,aAAa,CAJjB,OAKI,SAAS,CA9FrB,eAyFQ,EAxFJ,CADJ,CAmGH;;AC3GD;AACO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EADkB;AAEvBC,EAAAA,eAAe,EAAE;AAFM,CAApB;AAIP;AACO,IAAMC,YAAI,GAAGC,KAAK,iBAAI,kEAAtB,WAAsB,EAAtB;AAEP;AACA","sources":["webpack://jacdac-docs/./src/components/home/HTML5Image.tsx","webpack://jacdac-docs/./src/components/home/Clients.tsx","webpack://jacdac-docs/./src/pages/clients.tsx"],"sourcesContent":["import { StaticImage } from \"gatsby-plugin-image\"\nimport React, { useContext } from \"react\"\nimport DarkModeContext from \"../ui/DarkModeContext\"\n\nexport default function HTML5Image(props: { icon?: boolean }) {\n    const { darkMode } = useContext(DarkModeContext)\n    const { icon } = props\n    if (icon)\n        if (darkMode === \"dark\")\n            return (\n                <StaticImage\n                    width={64}\n                    src=\"./html5-white.png\"\n                    alt=\"A Jacdac humidity module plugging into a Jacdac cable\"\n                />\n            )\n        else\n            return (\n                <StaticImage\n                    width={64}\n                    src=\"./html5-dark.png\"\n                    alt=\"A Jacdac humidity module plugging into a Jacdac cable\"\n                />\n            )\n    else if (darkMode === \"dark\")\n        return (\n            <StaticImage\n                src=\"./html5-white.png\"\n                alt=\"A Jacdac humidity module plugging into a Jacdac cable\"\n            />\n        )\n    else\n        return (\n            <StaticImage\n                src=\"./html5-dark.png\"\n                alt=\"A Jacdac humidity module plugging into a Jacdac cable\"\n            />\n        )\n}\n","import { Grid } from \"@mui/material\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\nimport CenterGrid from \"./CenterGrid\"\nimport HTML5Image from \"./HTML5Image\"\nimport SplitGrid from \"./SplitGrid\"\n\nexport default function Clients() {\n    return (\n        <Grid\n            container\n            spacing={10}\n            direction=\"column\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n        >\n            <CenterGrid\n                title=\"Client Programming\"\n                subtitle3=\"via MakeCode, JavaScript, ...\"\n                // imageColumns={6}\n                // image={<StaticImage src=\"./dashboard.png\" alt=\"Dashboard\" />}\n            />\n\n            <SplitGrid\n                right={false}\n                subtitle=\"MakeCode\"\n                description=\"Code Jacdac using a micro:bit V2, Arcade or Maker board.\"\n                buttonText=\"Get started with MakeCode\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/clients/makecode\"\n                image={\n                    <StaticImage\n                        src=\"./makecode.png\"\n                        alt=\"Block code to swipe a servo\"\n                    />\n                }\n            />\n\n            <SplitGrid\n                right={true}\n                subtitle=\"JavaScript and TypeScript\"\n                description=\"From the browser or Node.JS, use our JavaScript/TypeScript library to interact with physical Jacdac devices. If you can build a web page, you can program Jacdac.\"\n                buttonText=\"Get started with JavaScript/TypeScript\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/clients/javascript\"\n                imageColumns={4}\n                image={<HTML5Image />}\n            />\n\n            <SplitGrid\n                right={false}\n                subtitle=\"p5*js\"\n                imageColumns={8}\n                description=\"Physical Creative Coding.\"\n                buttonText=\"p5.jacdac library\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/clients/javascript/p5js\"\n                image={\n                    <StaticImage\n                        src=\"./p5js.jpg\"\n                        alt=\"A p5js program that controls color with sliders.\"\n                    />\n                }\n            />\n\n            <SplitGrid\n                right={true}\n                subtitle=\"DeviceScript\"\n                imageColumns={8}\n                description=\"TypeScript for microcontrollers with Visual Studio Code integration.\"\n                buttonText=\"Get started with DeviceScript\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/clients/devicescript\"\n                image={\n                    <StaticImage\n                        src=\"./devicescript.png\"\n                        alt=\"A DeviceScript program in Visual Studio Code.\"\n                    />\n                }\n            />\n\n            <SplitGrid\n                right={true}\n                subtitle=\"MicroCode\"\n                imageColumns={8}\n                description=\"Physical computing for young learners on the micro:bit V2.\"\n                buttonText=\"Try MicroCode\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/clients/microcode\"\n                image={\n                    <StaticImage\n                        src=\"./microcode.png\"\n                        alt=\"A microcode program.\"\n                    />\n                }\n            />\n\n            <CenterGrid\n                subtitle2=\"More programming options\"\n                subtitle3=\"React, CLI, ...\"\n                buttonText= \"Read more\"                \n                buttonVariant=\"link\"\n                buttonUrl= \"/clients/more\"\n            />\n\n        </Grid>\n    )\n}\n","import React from \"react\"\nexport const frontmatter = {\n    title: \"Application Programming\",\n    hideBreadcrumbs: true,\n}\nimport CoreHead from \"../components/shell/Head\"\nexport const Head = props => <CoreHead {...props} {...frontmatter} />\n\nimport Clients from \"../components/home/Clients\"\nexport default Clients\n"],"names":["useContext","darkMode","frontmatter","title","hideBreadcrumbs","Head","props"],"sourceRoot":""}