{"componentChunkName":"component---src-templates-service-tsx","path":"/services/wssk/","result":{"pageContext":{"classIdentifier":330775038,"source":"# WSSK\n\n    identifier: 0x13b739fe\n    group: iot\n    tags: infrastructure, devicescript\n    camel: wssk\n\nDefines a binary protocol for IoT devices to talk to DeviceScript gateway over encrypted websockets.\nThis is not used as a regular Jacdac service.\n\n## Commands\n\n    report error @ 0xff {\n        message: string\n    }\n\nIssued when a command fails.\n\n    enum StreamingType : u16 {\n        Jacdac = 0x0001\n        Dmesg = 0x0002\n        Exceptions = 0x0100\n        TemporaryMask = 0x00ff\n        PermamentMask = 0xff00\n        DefaultMask = 0x0100\n    }\n\n    command set_streaming @ 0x90 {\n        status: StreamingType\n    }\n\nEnable/disable forwarding of all Jacdac frames, exception reporting, and `dmesg` streaming.\n\n    command ping_device @ 0x91 {\n        payload: bytes\n    }\n    report {\n        payload: bytes // currently not supported\n    }\n\nSend from gateway when it wants to see if the device is alive.\nThe device currently only support 0-length payload.\n\n    command ping_cloud @ 0x92 {\n        payload: bytes\n    }\n    report {\n        payload: bytes\n    }\n\nSend from device to gateway to test connection.\n\n    command get_hash @ 0x93 {}\n    report {\n        sha256: u8[32]\n    }\n\nGet SHA256 of the currently deployed program.\n\n    command deploy_start @ 0x94 {\n        size: u32 B\n    }\n    report {}\n\nStart deployment of a new program.\n\n    command deploy_write @ 0x95 {\n        payload: bytes\n    }\n    report {}\n\nPayload length must be multiple of 32 bytes.\n\n    command deploy_finish @ 0x96 {}\n    report {}\n\nFinish deployment.\n\n    enum DataType : u8 {\n        Binary = 1\n        JSON = 2\n    }\n    command c2d @ 0x97 {\n        datatype: DataType\n        topic: string0\n        payload: bytes\n    }\n\nUpload a labelled tuple of values to the cloud.\nThe tuple will be automatically tagged with timestamp and originating device.\n\n    report d2c @ 0x98 {\n        datatype: DataType\n        topic: string0\n        payload: bytes\n    }\n\nUpload a binary message to the cloud.\n\n    command jacdac_packet @ 0x99 {\n        frame: bytes\n    }\n    report {\n        frame: bytes\n    }\n\nSent both ways.\n\n    report dmesg @ 0x9a {\n        logs: bytes\n    }\n\nThe `logs` field is string in UTF-8 encoding, however it can be split in the middle of UTF-8 code point.\nControlled via `dmesg_en`.\n\n    report exception_report @ 0x9b {\n        logs: bytes\n    }\n\nThe format is the same as `dmesg` but this is sent on exceptions only and is controlled separately via `exception_en`.\n","title":"WSSK"}},"staticQueryHashes":["1089213825","2744294623","3360859391","3610498499","3868184074","4022945823","413816803","63159454"]}