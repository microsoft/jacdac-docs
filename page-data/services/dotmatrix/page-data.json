{"componentChunkName":"component---src-templates-service-tsx","path":"/services/dotmatrix/","result":{"pageContext":{"classIdentifier":286070091,"source":"# Dot Matrix\n\n    identifier: 0x110d154b\n    group: display\n    status: rc\n\nA rectangular dot matrix display, made of monochrome LEDs or Braille pins.\n\n## Registers\n\n    rw dots : bytes @ value\n\nThe state of the screen where dot on/off state is\nstored as a bit, column by column. The column should be byte aligned.\n\nFor example, if the display has no more than 8 rows in each column, then each byte contains bits corresponding\nto a single column. Least-significant bit is on top.\nIf display has 10 rows, then each column is represented by two bytes.\nThe top-most 8 rows sit in the first byte (with the least significant bit being on top),\nand the remainign 2 row sit in the second byte.\n\nThe following C expression can be used to check if a given `column, row` coordinate is set:\n`dots[column * column_size + (row >> 3)] & (1 << (row & 7))`, where\n`column_size` is `(number_of_rows + 7) >> 3` (note that if number of rows is 8 or less then `column_size` is `1`),\nand `dots` is of `uint8_t*` type.\n\nThe size of this register is `number_of_columns * column_size` bytes.\n\n    rw brightness?: u0.8 / @ intensity\n\nReads the general brightness of the display, brightness for LEDs. `0` when the screen is off.\n\n    const rows: u16 # @ 0x181\n\nNumber of rows on the screen\n\n    const columns: u16 # @ 0x182\n\nNumber of columns on the screen\n\n    enum Variant: u8 {\n        LED = 1,\n        Braille = 2,\n    }\n    const variant?: Variant @ variant\n\nDescribes the type of matrix used.\n","makecodeSlug":"/clients/makecode/extensions/dotmatrix/","title":"Dot Matrix"}},"staticQueryHashes":["1089213825","2744294623","3360859391","3610498499","3868184074","4022945823","413816803","63159454"]}