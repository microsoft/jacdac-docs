{"componentChunkName":"component---src-templates-service-tsx","path":"/services/devicescriptmanager/","result":{"pageContext":{"classIdentifier":288680491,"source":"# DeviceScript Manager\n\n    identifier: 0x1134ea2b\n    tags: management, devicescript\n    restricted: true\n\nAllows for deployment and control over DeviceScript virtual machine.\n\nPrograms start automatically after device restart or uploading of new program.\nYou can stop programs until next reset by setting the `running` and `autostart` registers to `false`.\n\n## Commands\n\n    unique command deploy_bytecode @ 0x80 {\n        bytecode_size: u32 B\n    }\n    report {\n        bytecode_port: pipe_port\n    }\n\nOpen pipe for streaming in the bytecode of the program. The size of the bytecode has to be declared upfront.\nTo clear the program, use `bytecode_size == 0`.\nThe bytecode is streamed over regular pipe data packets.\nThe bytecode shall be fully written into flash upon closing the pipe.\nIf `autostart` is true, the program will start after being deployed.\nThe data payloads, including the last one, should have a size that is a multiple of 32 bytes.\nThus, the initial bytecode_size also needs to be a multiple of 32.\n\n    command read_bytecode @ 0x81 {\n        bytecode: pipe\n    }\n    pipe report bytecode {\n        data: bytes\n    }\n\nGet the current bytecode deployed on device.\n\n\n## Registers\n\n    rw running: bool @ 0x80\n\nIndicates if the program is currently running.\nTo restart the program, stop it (write `0`), read back the register to make sure it's stopped,\nstart it, and read back.\n\n    rw autostart: bool @ 0x81\n\nIndicates wheather the program should be re-started upon `reboot()` or `panic()`.\nDefaults to `true`.\n\n    ro program_size: u32 @ 0x180\n\nThe size of current program.\n\n    ro program_hash: u32 @ 0x181\n\nReturn FNV1A hash of the current bytecode.\n\n    ro program_sha256: bytes { max_bytes = 32 } @ 0x182\n\nReturn 32-byte long SHA-256 hash of the current bytecode.\n\n    const runtime_version? @ 0x183 {\n        patch: u16\n        minor: u8\n        major: u8\n    }\n\nReturns the runtime version number compatible with [Semver](https://semver.org/).\nWhen read as 32-bit little endian integer a version `7.15.500` would be `0x07_0F_01F4`.\n\n    ro program_name: string @ 0x184\n\nThe name of currently running program. The compiler takes is from `package.json`.\n\n    ro program_version: string @ 0x185\n\nThe version number of currently running program. The compiler takes is from `package.json`\nand `git`.\n\n\n## Events\n\nWhen program is running, `status_code == Ready`.\nWhen there is a valid program, but it is not running, `status_code == Sleeping`.\nWhen there is no valid program, `status_code == WaitingForInput`.\n\n    event program_panic @ 0x80 {\n        panic_code: u32\n        program_counter: u32\n    }\n\nEmitted when the program calls `panic(panic_code)` or `reboot()` (`panic_code == 0` in that case).\nThe byte offset in byte code of the call is given in `program_counter`.\nThe program will restart immediately when `panic_code == 0` or in a few seconds otherwise.\n\n    event program_change @ change\n\nEmitted after bytecode of the program has changed.\n","title":"DeviceScript Manager"}},"staticQueryHashes":["1089213825","2744294623","3360859391","3610498499","3868184074","4022945823","413816803","63159454"]}