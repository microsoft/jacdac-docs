{"componentChunkName":"component---src-templates-service-tsx","path":"/services/gamepad/","result":{"pageContext":{"classIdentifier":277836886,"source":"# Gamepad\n\n    identifier: 0x108f7456\n    extends: _sensor\n    group: button\n    tags: 8bit, padauk\n    status: rc\n\nA two axis directional gamepad with optional buttons.\n\n## Registers\n\n    flags Buttons : u32 {\n        Left      = 0x0000_0001\n        Up        = 0x0000_0002\n        Right     = 0x0000_0004\n        Down      = 0x0000_0008\n        A         = 0x0000_0010\n        B         = 0x0000_0020\n        Menu      = 0x0000_0040\n        Select    = 0x0000_0080\n        Reset     = 0x0000_0100\n        Exit      = 0x0000_0200\n        X         = 0x0000_0400\n        Y         = 0x0000_0800\n    }\n    ro direction @ reading {\n        buttons: Buttons\n        x: i1.15 /\n        y: i1.15 /\n    }\n\nIf the gamepad is analog, the directional buttons should be \"simulated\", based on gamepad position\n(`Left` is `{ x = -1, y = 0 }`, `Up` is `{ x = 0, y = -1}`).\nIf the gamepad is digital, then each direction will read as either `-1`, `0`, or `1` (in fixed representation).\nThe primary button on the gamepad is `A`.\n\n    enum Variant : u8 {\n        Thumb = 1\n        ArcadeBall = 2\n        ArcadeStick = 3\n        Gamepad = 4\n    }\n    const variant?: Variant @ variant\n\nThe type of physical gamepad.\n\n    const buttons_available: Buttons @ 0x180\n\nIndicates a bitmask of the buttons that are mounted on the gamepad.\nIf the `Left`/`Up`/`Right`/`Down` buttons are marked as available here, the gamepad is digital.\nEven when marked as not available, they will still be simulated based on the analog gamepad.\n\n## Events\n\n    event buttons_changed @ change {\n        buttons: Buttons\n    }\n\nEmitted whenever the state of buttons changes.\n","makecodeSlug":"/clients/makecode/extensions/gamepad/","title":"Gamepad"}},"staticQueryHashes":["1089213825","2744294623","3360859391","3610498499","3868184074","4022945823","413816803","63159454"]}