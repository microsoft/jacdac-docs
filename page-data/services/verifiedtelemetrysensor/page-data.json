{"componentChunkName":"component---src-templates-service-tsx","path":"/services/verifiedtelemetrysensor/","result":{"pageContext":{"classIdentifier":563381279,"source":"# Verified Telemetry\n\n    identifier: 0x2194841f\n    status: deprecated\n\nA mixin service that exposes verified telemetry information for a sensor (see https://github.com/Azure/Verified-Telemetry/tree/main/PnPModel).\n\n## Registers\n\n    enum Status : u8 {\n        Unknown = 0\n        Working = 1\n        Faulty = 2        \n    }\n    ro telemetry_status: Status @ 0x180\n    \nReads the telemetry working status, where ``true`` is working and ``false`` is faulty.\n\n    rw telemetry_status_interval?: u32 ms @ 0x080\n\nSpecifies the interval between computing the fingerprint information.\n\n    enum FingerprintType: u8 {\n        FallCurve = 1\n        CurrentSense = 2\n        Custom = 3\n    }\n    const fingerprint_type: FingerprintType @ 0x181\n\nType of the fingerprint.\n\n    ro fingerprint_template @ 0x182 {\n        confidence: u16 %\n        template: bytes\n    }\n\nTemplate Fingerprint information of a working sensor.\n\n## Commands\n\n    command reset_fingerprint_template @ 0x080 {}\n\nThis command will clear the template fingerprint of a sensor and collect a new template fingerprint of the attached sensor.\n\n    unique command retrain_fingerprint_template @ 0x081 {}\n\nThis command will append a new template fingerprint to the `fingerprintTemplate`. Appending more fingerprints will increase the accuracy in detecting the telemetry status.\n\n## Events\n\n    event telemetry_status_change @ change { \n        telemetry_status: Status\n    }\n    \nThe telemetry status of the device was updated.\n\n    event fingerprint_template_change @ 0x80 { }\n    \nThe fingerprint template was updated\n","title":"Verified Telemetry"}},"staticQueryHashes":["1089213825","2744294623","3360859391","3610498499","3868184074","4022945823","413816803","63159454"]}