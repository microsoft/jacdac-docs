{"version":3,"file":"component---src-pages-tools-collector-tsx-f63400d4f972cc2ce431.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Delete.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Edit.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/FiberManualRecord.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/HourglassEmpty.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/OpenInBrowser.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/PlayArrow.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/SaveAlt.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Stop.js","webpack://jacdac-docs/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/CardContent/CardContent.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogActions/dialogActionsClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogActions/DialogActions.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogContentText/DialogContentText.js","webpack://jacdac-docs/./node_modules/@mui/material/Divider/dividerClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/InputAdornment/InputAdornment.js","webpack://jacdac-docs/./node_modules/@mui/material/ListItemText/listItemTextClasses.js","webpack://jacdac-docs/./jacdac-ts/src/clients/sensoraggregatorclient.ts","webpack://jacdac-docs/./src/components/alert/DeviceLostAlert.tsx","webpack://jacdac-docs/./src/components/services/StatusCodeAlert.tsx","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItemHeader.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/hooks/useArrowKeys.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigation.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigationProps.ts","webpack://jacdac-docs/./src/components/services/useInstanceName.ts","webpack://jacdac-docs/./src/components/services/useRoleManagerClient.ts","webpack://jacdac-docs/./src/components/services/useStatusCode.ts","webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/SelectWithLabel.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/select/SelectEvent.tsx","webpack://jacdac-docs/./src/components/DataSetGrid.tsx","webpack://jacdac-docs/./src/components/ReadingFieldGrid.tsx","webpack://jacdac-docs/./src/components/hooks/useEvents.ts","webpack://jacdac-docs/./src/components/fs/FileSystemChip.tsx","webpack://jacdac-docs/./src/components/fs/FileNewFileChip.tsx","webpack://jacdac-docs/./src/components/fs/FileSystemNodeChip.tsx","webpack://jacdac-docs/./src/components/fs/FileTabs.tsx","webpack://jacdac-docs/./src/pages/tools/collector.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5-4-4V4h8v3.5l-4 4z\"\n}), 'HourglassEmpty');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67 2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n  const {\n      className,\n      disableSpacing = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import {\n    SensorAggregatorReg,\n    SensorAggregatorSampleType,\n    SRV_SENSOR_AGGREGATOR,\n} from \"../../jacdac-spec/dist/specconstants\"\nimport { bufferToArray, NumberFormat } from \"../jdom/buffer\"\nimport { JD_SERIAL_MAX_PAYLOAD_SIZE, REPORT_RECEIVE } from \"../jdom/constants\"\nimport { jdpack } from \"../jdom/pack\"\nimport { JDRegister } from \"../jdom/register\"\nimport { JDService } from \"../jdom/service\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport {\n    isReading,\n    serviceSpecificationFromClassIdentifier,\n} from \"../jdom/spec\"\nimport { assert, bufferConcat, bufferConcatMany, fromHex } from \"../jdom/utils\"\n\nexport interface SensorAggregatorInputConfig {\n    serviceClass: number\n    // if specified, also specify serviceIndex\n    deviceId?: string\n    serviceIndex?: number\n}\n\nexport interface SensorAggregatorConfig {\n    samplingInterval: number // ms\n    samplesInWindow: number\n    inputs: SensorAggregatorInputConfig[]\n}\n\nexport interface SensorAggregatorStats {\n    numSamples: number\n    sampleSize: number\n}\n\n/**\n * A client for the sensor aggregator service\n * @category Clients\n */\nexport class SensorAggregatorClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        assert(service.serviceClass === SRV_SENSOR_AGGREGATOR)\n        this.service.registersUseAcks = true\n    }\n\n    async setInputs(cfg: SensorAggregatorConfig) {\n        function error(msg: string) {\n            throw new Error(\"Aggregator inputs: \" + msg)\n        }\n        function mapType(tp: number) {\n            switch (tp) {\n                case 1:\n                    return SensorAggregatorSampleType.U8\n                case 2:\n                    return SensorAggregatorSampleType.U16\n                case 4:\n                    return SensorAggregatorSampleType.U32\n                case -1:\n                    return SensorAggregatorSampleType.I8\n                case -2:\n                    return SensorAggregatorSampleType.I16\n                case -4:\n                    return SensorAggregatorSampleType.I32\n                default:\n                    error(\"unknown storage type\")\n            }\n        }\n\n        if (!cfg || !cfg.inputs) error(\"invalid input format\")\n\n        let totalSampleSize = 0\n        const inputs = cfg.inputs?.map(input => {\n            const { deviceId, serviceIndex, serviceClass } = input\n            if (!!deviceId !== !!serviceIndex)\n                error(`deviceId and serviceIndex must be specified together`)\n            const specification =\n                serviceSpecificationFromClassIdentifier(serviceClass)\n            if (!specification)\n                error(\n                    `missing specification from service 0x${serviceClass.toString(\n                        16,\n                    )}`,\n                )\n            const freeze = !!deviceId\n            const readingReg = specification.packets.find(isReading)\n            if (!readingReg)\n                error(\n                    `service 0x${serviceClass.toString(\n                        16,\n                    )} does not have a reading register`,\n                )\n            let sampleType: SensorAggregatorSampleType = undefined\n            let sampleSize = 0\n            let sampleShift = 0\n            for (const field of readingReg.fields) {\n                sampleSize += Math.abs(field.storage)\n                if (sampleType === undefined) {\n                    sampleType = mapType(field.storage)\n                    sampleShift = field.shift || 0\n                }\n                if (\n                    sampleType != mapType(field.storage) ||\n                    sampleShift != (field.shift || 0)\n                )\n                    error(\"heterogenous field types\")\n            }\n            totalSampleSize += sampleSize\n            return bufferConcat(\n                freeze ? fromHex(deviceId) : new Uint8Array(8),\n                jdpack(\"u32 u8 u8 u8 i8\", [\n                    serviceClass,\n                    freeze ? serviceIndex : 0,\n                    sampleSize,\n                    sampleType,\n                    sampleShift,\n                ]),\n            )\n        })\n\n        if (totalSampleSize > JD_SERIAL_MAX_PAYLOAD_SIZE)\n            error(\"samples won't fit in packet\")\n\n        // u32 is x[4]\n        inputs.unshift(\n            jdpack(\"u16 u16 u32\", [\n                cfg.samplingInterval,\n                cfg.samplesInWindow,\n                0,\n            ]),\n        )\n        await this.service\n            .register(SensorAggregatorReg.Inputs)\n            .sendSetAsync(bufferConcatMany(inputs))\n    }\n\n    async collect(numSamples: number) {\n        await this.service\n            .register(SensorAggregatorReg.StreamingSamples)\n            .sendSetPackedAsync([numSamples])\n    }\n\n    subscribeSample(handler: (sample: number[]) => void): () => void {\n        const reg = this.service.register(SensorAggregatorReg.CurrentSample)\n        return this.mount(\n            reg.subscribe(REPORT_RECEIVE, () =>\n                handler(bufferToArray(reg.data, NumberFormat.Float32LE)),\n            ),\n        )\n    }\n\n    private async getReg(id: SensorAggregatorReg, f: (v: JDRegister) => any) {\n        const reg = this.service.register(id)\n        await reg.refresh()\n        return f(reg)\n    }\n\n    async stats(): Promise<SensorAggregatorStats> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const info: any = {\n            numSamples: this.getReg(\n                SensorAggregatorReg.NumSamples,\n                r => r.intValue,\n            ),\n            sampleSize: this.getReg(\n                SensorAggregatorReg.SampleSize,\n                r => r.intValue,\n            ),\n        }\n        for (const id of Object.keys(info)) {\n            info[id] = await info[id]\n        }\n        return info\n    }\n}\n","import React from \"react\"\nimport { LOST, FOUND } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\nimport Alert from \"../ui/Alert\"\n\nexport function DeviceLostAlert(props: { device: JDDevice }) {\n    const { device } = props\n    const lost = useEventRaised([LOST, FOUND], device, dev => !!dev?.lost)\n    const flashing = useChange(\n        device,\n        _ => _?.bootloader || !!_?.firmwareUpdater\n    )\n    if (!lost || flashing) return null\n    return <Alert severity=\"info\">Device lost...</Alert>\n}\n","import React from \"react\"\nimport { Typography } from \"@mui/material\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { RegisterOptions } from \"../../jacdac/useRegisterValue\"\nimport useStatusCode from \"./useStatusCode\"\nimport {\n    SRV_WIFI,\n    SystemStatusCodes,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport Alert from \"../ui/Alert\"\n\nconst codes: Record<number, Record<number, (srv: JDService) => string>> = {\n    [SRV_WIFI]: {\n        [SystemStatusCodes.WaitingForInput]: () =>\n            \"Waiting for WiFi credentials.\",\n    },\n}\nconst severities: Record<number, \"error\" | \"warning\" | \"info\"> = {\n    [SystemStatusCodes.Sleeping]: \"info\",\n    [SystemStatusCodes.Initializing]: \"info\",\n    [SystemStatusCodes.Calibrating]: \"info\",\n}\n\nexport default function StatusCodeAlert(\n    props: {\n        service: JDService\n    } & RegisterOptions\n) {\n    const { service, ...rest } = props\n    const { serviceClass } = service\n    const { code, vendorCode } = useStatusCode(service, rest)\n    if (\n        (code === SystemStatusCodes.Ready ||\n            code === SystemStatusCodes.Sleeping ||\n            code === SystemStatusCodes.Initializing) &&\n        vendorCode === 0\n    )\n        return null\n    const severity = severities[code] || \"warning\"\n    return (\n        <Alert severity={severity}>\n            {!!code && (\n                <Typography variant=\"caption\">\n                    {humanify(\n                        codes[serviceClass]?.[code]?.(service) ||\n                            SystemStatusCodes[code] ||\n                            \"?\"\n                    )}\n                </Typography>\n            )}\n            {!!vendorCode && (\n                <Typography variant=\"caption\">\n                    vendor error: 0x{vendorCode.toString(16)}\n                </Typography>\n            )}\n        </Alert>\n    )\n}\n","import { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\n\nexport default function useServiceRole(service: JDService): string {\n    return useEventRaised(ROLE_CHANGE, service, _ => _?.role)\n}\n","import { Button, styled } from \"@mui/material\"\nimport React, { lazy, useState } from \"react\"\nimport { isDeviceId, shortDeviceId } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { ellipse } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useChange from \"../../jacdac/useChange\"\nimport Suspense from \"../ui/Suspense\"\nimport useRoleManagerClient from \"./useRoleManagerClient\"\nimport useServiceRole from \"./useServiceRole\"\nimport { escapeRoleName } from \"../../../jacdac-ts/src/jdom/rolemanager\"\nconst SelectRoleDialog = lazy(() => import(\"../dialogs/SelectRoleDialog\"))\n\nconst MAX_NAME_LENGTH = 20\n\nconst RoleButton = styled(Button)({\n    textTransform: \"none\",\n})\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n\n    const [showSelectRoleDialog, setShowSelectRoleDialog] = useState(false)\n    const roleManager = useRoleManagerClient()\n    const role = useServiceRole(service)\n    const handleOpen = () => setShowSelectRoleDialog(true)\n    const handleClose = () => setShowSelectRoleDialog(false)\n\n    const hasRoleForService = useChange(\n        roleManager,\n        _ => _?.hasRoleForService(service),\n        [service]\n    )\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService) return null\n\n    const name = isDeviceId(role)\n        ? shortDeviceId(role)\n        : ellipse(escapeRoleName(role), MAX_NAME_LENGTH) || \"...\"\n    return (\n        <>\n            <RoleButton\n                title={role || \"Choose role for service\"}\n                size=\"small\"\n                onClick={handleOpen}\n            >\n                {name}\n            </RoleButton>\n            {showSelectRoleDialog && (\n                <Suspense>\n                    <SelectRoleDialog service={service} onClose={handleClose} />\n                </Suspense>\n            )}\n        </>\n    )\n}\n","import { Grid, SvgIconProps, Tooltip, Typography } from \"@mui/material\"\nimport React, { createElement, Suspense } from \"react\"\nimport {\n    dashboardServiceIcon,\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport useInstanceName from \"../services/useInstanceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport EditIcon from \"@mui/icons-material/Edit\"\nimport { serviceName } from \"../../../jacdac-ts/src/jdom/pretty\"\n\nexport default function DashboardServiceWidgetItemHeader(\n    props: {\n        toggleExpanded: () => void\n    } & React.Attributes &\n        DashboardServiceProps\n): JSX.Element {\n    const { service, expanded, toggleExpanded, ...rest } = props\n    const { serviceClass } = service\n    const instanceName = useInstanceName(service, rest)\n    const icon = dashboardServiceIcon(serviceClass)\n    const iconProps: SvgIconProps = {\n        titleAccess: serviceName(serviceClass),\n        color: \"disabled\",\n    }\n    return (\n        <Grid container spacing={1} alignItems=\"center\">\n            {icon && (\n                <Grid item>\n                    <Tooltip title={serviceName(serviceClass)}>\n                        <Suspense fallback={null}>\n                            {createElement(icon, iconProps)}\n                        </Suspense>\n                    </Tooltip>\n                </Grid>\n            )}\n            <Grid item xs>\n                <ServiceRole service={service} />\n            </Grid>\n            {instanceName && (\n                <Grid item>\n                    <Typography\n                        className=\"no-pointer-events\"\n                        variant=\"caption\"\n                        component=\"span\"\n                        style={{ float: \"right\" }}\n                    >\n                        {instanceName}\n                    </Typography>\n                </Grid>\n            )}\n            {expanded !== undefined && (\n                <Grid item>\n                    <Grid item>\n                        <IconButtonWithTooltip\n                            size=\"small\"\n                            title={\n                                expanded\n                                    ? \"Hide configuration\"\n                                    : \"Show configuration\"\n                            }\n                            onClick={toggleExpanded}\n                        >\n                            <EditIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useEffect, useState } from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n    isExpandableView,\n} from \"./DashboardServiceWidget\"\nimport StatusCodeAlert from \"../services/StatusCodeAlert\"\nimport DashboardServiceWidgetItemHeader from \"./DashboardServiceWidgetItemHeader\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service, controlled, ...rest } = props\n    const { serviceClass } = service\n    const expandable = props.expandable || isExpandableView(serviceClass)\n    const [expanded, setExpanded] = useState<boolean>(\n        !controlled && expandable ? false : undefined\n    )\n    const statusCodeAlert = <StatusCodeAlert service={service} {...rest} />\n    const toggleExpanded = () => setExpanded(e => !e)\n    useEffect(() => {\n        setExpanded(!controlled && expandable ? false : undefined)\n    }, [controlled, expandable])\n\n    return (\n        <Grid item>\n            <DashboardServiceWidgetItemHeader\n                {...props}\n                expanded={expanded}\n                toggleExpanded={toggleExpanded}\n            />\n            {statusCodeAlert}\n            <DashboardServiceWidget {...props} expanded={expanded} />\n        </Grid>\n    )\n}\n","import { useEffect, useState, RefObject } from \"react\"\n\nexport interface Args extends IntersectionObserverInit {\n    freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n    elementRef: RefObject<Element>,\n    options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n    const [entry, setEntry] = useState<IntersectionObserverEntry>()\n    const {\n        threshold = 0,\n        root = null,\n        rootMargin = \"0%\",\n        freezeOnceVisible,\n    } = options || {}\n\n    const frozen = entry?.isIntersecting && freezeOnceVisible\n\n    const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n        setEntry(entry)\n    }\n\n    useEffect(() => {\n        const node = elementRef?.current // DOM Ref\n        const hasIOSupport = !!window.IntersectionObserver\n\n        if (!hasIOSupport || frozen || !node) return\n\n        const observerParams = { threshold, root, rootMargin }\n        const observer = new IntersectionObserver(updateEntry, observerParams)\n\n        //console.log(`observe`, { node })\n        observer.observe(node)\n\n        return () => observer.disconnect()\n    }, [elementRef, threshold, root, rootMargin, frozen])\n\n    return entry\n}\n","import { CardHeader, Typography } from \"@mui/material\"\nimport React from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport DeviceName from \"../devices/DeviceName\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DeviceActions from \"../devices/DeviceActions\"\nimport useDeviceDescription from \"../../jacdac/useDeviceDescription\"\n\nexport default function DashboardDeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showReset?: boolean\n}) {\n    const { device, showAvatar, showReset } = props\n    const description = useDeviceDescription(device)\n\n    return (\n        <CardHeader\n            style={{ paddingBottom: 0 }}\n            avatar={showAvatar && <DeviceAvatar device={device} />}\n            action={\n                <DeviceActions\n                    device={device}\n                    showStop={true}\n                    hideIdentity={true}\n                    showReset={showReset}\n                    showSettings={false}\n                />\n            }\n            title={<DeviceName showShortId={false} device={device} />}\n            subheader={\n                <>\n                    {description && (\n                        <Typography variant=\"caption\" gutterBottom>\n                            {description}\n                        </Typography>\n                    )}\n                </>\n            }\n        />\n    )\n}\n","import { Card, CardContent, Grid, Paper } from \"@mui/material\"\nimport React, { useCallback, useRef, lazy } from \"react\"\nimport {\n    SRV_CONTROL,\n    SRV_INFRASTRUCTURE,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_PROXY,\n    SRV_SETTINGS,\n    SRV_UNIQUE_BRAIN,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/eventsource\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport Suspense from \"../ui/Suspense\"\nimport DashboardDeviceCardHeader from \"./DashboardDeviceCardHeader\"\nconst DeviceProxyAlert = lazy(() => import(\"../alert/DeviceProxyAlert\"))\nconst DeviceBootloaderAlert = lazy(\n    () => import(\"../alert/DeviceBootloaderAlert\")\n)\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_SETTINGS,\n    SRV_PROTO_TEST,\n    SRV_PROXY,\n    SRV_INFRASTRUCTURE,\n    SRV_UNIQUE_BRAIN,\n]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        serviceFilter,\n        variant,\n        showAvatar,\n        showHeader,\n        showReset,\n        showDeviceProxyAlert,\n        alwaysVisible,\n        controlled,\n    } = props\n\n    const name = useDeviceName(device)\n    const services = useChange(device, _ =>\n        _?.services({ specification: true }).filter(\n            service =>\n                ignoredServices.indexOf(service.serviceClass) < 0 &&\n                !service.isMixin &&\n                (!serviceFilter || serviceFilter(service))\n        )\n    )\n\n    // refresh when visible\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible =\n        alwaysVisible || !intersection || !!intersection.isIntersecting\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justifyContent=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services?.map(service => (\n                    <DashboardServiceWidgetItem\n                        key={service.nodeId}\n                        service={service}\n                        services={services}\n                        variant={variant}\n                        visible={visible}\n                        controlled={controlled}\n                    />\n                ))}\n            </Grid>\n        ),\n        [dependencyId(services), variant, visible, controlled]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <DashboardDeviceCardHeader\n                device={device}\n                showAvatar={showAvatar}\n                showReset={showReset}\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <DeviceLostAlert device={device} />\n                <Suspense fallback={null}>\n                    <DeviceBootloaderAlert device={device} />\n                </Suspense>\n                {showDeviceProxyAlert && (\n                    <Suspense>\n                        <DeviceProxyAlert device={device} />\n                    </Suspense>\n                )}\n                <ServiceWidgets />\n            </CardContent>\n        </Card>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport DashboardDevice from \"./DashboardDevice\"\nimport { GridBreakpoints } from \"../useGridBreakpoints\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useChange from \"../../jacdac/useChange\"\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\"\nimport AppContext, { DrawerType } from \"../AppContext\"\n\nexport default function DashboardDeviceItem(\n    props: {\n        device: JDDevice\n        alwaysVisible?: boolean\n    } & DashboardDeviceProps\n) {\n    const { device, ...other } = props\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(\n        device,\n        () => {\n            const breakpointWeight = device\n                .services()\n                .map(srv => {\n                    return (\n                        dashboardServiceWeight(srv) ||\n                        (srv.readingRegister ||\n                        srv.valueRegister ||\n                        srv.intensityRegister\n                            ? 1\n                            : 0)\n                    )\n                })\n                .reduce((c: number, v) => c + v, 0)\n\n            if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n                return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 }\n            else if (breakpointWeight == 3)\n                return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 }\n            else if (breakpointWeight == 2)\n                return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 }\n            else\n                return {\n                    xs: 6,\n                    sm: 4,\n                    md: 3,\n                    lg: 2,\n                    xl: \"auto\",\n                }\n        },\n        [drawerType],\n        (a, b) =>\n            a.xs == b.xs &&\n            a.sm == b.sm &&\n            a.md == b.md &&\n            a.sm == b.sm &&\n            a.lg == b.lg &&\n            a.xl == b.xl\n    )\n\n    // based on size, expanded or reduce widget size\n    return (\n        <Grid item {...breakpoints}>\n            <DashboardDevice device={device} {...other} />\n        </Grid>\n    )\n}\n","import { KeyboardEvent } from \"react\"\nimport { keyCodeFromEvent } from \"./useFireKey\"\n\nconst PAGE_DOWN = 34\nconst PAGE_UP = 33\nconst HOME = 36\nconst END = 35\nconst LEFT_KEY = 37\nconst UP_KEY = 38\nconst RIGHT_KEY = 39\nconst DOWN_KEY = 40\n\nexport default function useArrowKeys(options: {\n    onLeft?: (offset: number) => void\n    onRight?: (offset: number) => void\n    onUp?: (offset: number) => void\n    onDown?: (offset: number) => void\n    symmetric?: boolean\n}) {\n    const { onLeft, onUp, onRight, onDown, symmetric } = options\n\n    if (!onLeft && !onUp && !onRight && !onDown) return undefined\n\n    const handlers = {\n        [LEFT_KEY]: onLeft,\n        [RIGHT_KEY]: onRight,\n        [UP_KEY]: onUp || (symmetric && onRight),\n        [DOWN_KEY]: onDown || (symmetric && onLeft),\n    }\n\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e)\n        const handler = handlers[charCode]\n        if (handler) {\n            e.preventDefault()\n            handler()\n        }\n    }\n}\n","export default function useKeyboardNavigation(\n    parentRef: Element,\n    wrap = false\n) {\n    const query = '[tabindex=\"0\"]'\n    const onMove = (offset: number) => () => {\n        const focusable = Array.from<SVGElement>(\n            parentRef?.querySelectorAll(query) || []\n        )\n        if (focusable.length) {\n            const me = focusable.findIndex(f => f === document.activeElement)\n            // don't wrap\n            if (\n                !wrap &&\n                ((me === 0 && offset < 0) ||\n                    (me === focusable.length - 1 && offset > 0))\n            )\n                return\n            const next = (me + offset + focusable.length) % focusable.length\n            focusable[next].focus()\n        }\n    }\n    return onMove\n}\n","import useArrowKeys from \"./useArrowKeys\"\nimport useKeyboardNavigation from \"./useKeyboardNavigation\"\n\nexport default function useKeyboardNavigationProps(\n    parentRef: Element,\n    vertical?: boolean\n) {\n    const onMove = useKeyboardNavigation(parentRef)\n\n    const onKeyDown = useArrowKeys({\n        onLeft: !vertical && onMove(-1),\n        onRight: !vertical && onMove(1),\n        onDown: vertical && onMove(1),\n        onUp: vertical && onMove(-1),\n    })\n\n    return {\n        onKeyDown: parentRef && onKeyDown,\n    }\n}\n","import { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    RegisterOptions,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function useInstanceName(\n    service: JDService,\n    options?: RegisterOptions\n) {\n    const instanceNameRegister = useRegister(service, SystemReg.InstanceName)\n    const [instanceName] = useRegisterUnpackedValue<[string]>(\n        instanceNameRegister,\n        options\n    )\n    return instanceName\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/clients/rolemanagerclient\"\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useBus from \"../../jacdac/useBus\"\n\nexport default function useRoleManagerClient(): RoleManagerClient {\n    const bus = useBus()\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(\n        () => bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager)),\n        [bus]\n    )\n    return mgr\n}\n","import { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    RegisterOptions,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function useStatusCode(\n    service: JDService,\n    options?: RegisterOptions\n) {\n    const register = useRegister(service, SystemReg.StatusCode)\n    const [code = 0, vendorCode = 0] = useRegisterUnpackedValue<[number, number]>(\n        register,\n        options\n    )\n    return { code, vendorCode }\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React, { ReactNode } from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}hr`,\n    start: `${PREFIX}start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: ReactNode\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n","import {\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    MenuItem,\n    Select,\n    SelectChangeEvent,\n    SxProps,\n    Theme,\n} from \"@mui/material\"\nimport React, { ChangeEvent, ReactNode } from \"react\"\nimport { useId } from \"react\"\n\nexport default function SelectWithLabel(props: {\n    sx?: SxProps<Theme>\n    required?: boolean\n    label?: string\n    disabled?: boolean\n    error?: string\n    value?: string\n    placeholder?: string\n    type?: string\n    fullWidth?: boolean\n    onChange?: (ev: SelectChangeEvent<unknown>) => void\n    onClose?: (ev: ChangeEvent<unknown>) => void\n    helperText?: string\n    children?: ReactNode\n    none?: ReactNode\n    size?: \"small\" | \"medium\"\n}) {\n    const {\n        sx,\n        label,\n        fullWidth,\n        required,\n        disabled,\n        value,\n        error,\n        placeholder,\n        onChange,\n        onClose,\n        children,\n        helperText,\n        type,\n        none,\n        size,\n    } = props\n    const id = useId()\n    const labelId = id + \"-label\"\n    const descrId = id + \"-descr\"\n    const hasDescr = !!helperText || !!error\n\n    return (\n        <FormControl fullWidth={fullWidth} variant=\"outlined\">\n            <InputLabel id={labelId} key=\"label\">\n                {required ? `${label} *` : label}\n            </InputLabel>\n            <Select\n                id={id}\n                sx={sx}\n                disabled={disabled}\n                label={label}\n                value={value}\n                error={!!error}\n                fullWidth={true}\n                placeholder={placeholder}\n                type={type}\n                labelId={labelId}\n                aria-describedby={hasDescr ? descrId : undefined}\n                onChange={onChange}\n                onClose={onClose}\n                size={size}\n            >\n                {none !== undefined && (\n                    <MenuItem key={\"none\"} value={\"\"}>\n                        {none}\n                    </MenuItem>\n                )}\n                {children}\n            </Select>\n            {hasDescr && (\n                <FormHelperText id={descrId}>\n                    {error || helperText}\n                </FormHelperText>\n            )}\n        </FormControl>\n    )\n}\n","import { GridSize } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize\n    md?: GridSize\n    sm?: GridSize\n    lg?: GridSize\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(\n    itemCount?: number\n): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n    const hasDrawer = drawerType !== DrawerType.None\n\n    if (!drawerType && itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2:\n            case 3:\n                return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (hasDrawer) return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else\n        return {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 4,\n            xl: 3,\n        }\n}\n","import React from \"react\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport { JDEvent } from \"../../../jacdac-ts/src/jdom/event\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport { SelectChangeEvent } from \"@mui/material\"\n\nexport default function SelectEvent(props: {\n    events: JDEvent[]\n    eventId: string\n    onChange: (eventId: string) => void\n    friendlyName?: boolean\n    label?: string\n}) {\n    const { events, eventId, onChange, friendlyName, label } = props\n\n    const handleChange = (ev: SelectChangeEvent<string>) => {\n        onChange(ev.target.value)\n    }\n\n    return (\n        <SelectWithLabel\n            helperText={label || \"choose an event\"}\n            value={eventId}\n            onChange={handleChange}\n            disabled={!events?.length}\n            none={\"None\"}\n        >\n            {events?.map(ev => (\n                <MenuItem key={ev.id} value={ev.id}>\n                    {friendlyName ? ev.friendlyName : ev.name}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import { Card, CardActions, CardContent, CardHeader, Grid } from \"@mui/material\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React, { useContext } from \"react\"\nimport { prettyDuration } from \"../../jacdac-ts/src/jdom/pretty\"\nimport ServiceManagerContext from \"./ServiceManagerContext\"\nimport Trend from \"./Trend\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport FieldDataSet from \"./FieldDataSet\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\n\nexport default function DataSetGrid(props: {\n    tables: FieldDataSet[]\n    handleDeleteTable?: (table: FieldDataSet) => void\n}) {\n    const { tables, handleDeleteTable } = props\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const gridBreakpoints = useGridBreakpoints(tables?.length)\n\n    const handleDownload = (table: FieldDataSet) => () => {\n        const sep = \",\"\n        const csv = table.toCSV(sep)\n        fileStorage.saveText(`${table.name}.csv`, csv)\n    }\n    const handelDelete = (table: FieldDataSet) => () => handleDeleteTable(table)\n    return (\n        <Grid container spacing={1}>\n            {tables.map(table => (\n                <Grid item {...gridBreakpoints} key={`result` + table.id}>\n                    <Card>\n                        <CardHeader\n                            subheader={`${\n                                table.rows.length\n                            } rows, ${prettyDuration(table.duration)}`}\n                        />\n                        <CardContent>\n                            <div>{table.headers.join(\", \")}</div>\n                            <Trend dataSet={table} height={8} mini={true} />\n                        </CardContent>\n                        <CardActions>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                startIcon={<SaveAltIcon />}\n                                onClick={handleDownload(table)}\n                            >\n                                Save\n                            </Button>\n                            {handleDeleteTable && (\n                                <IconButtonWithTooltip\n                                    title=\"delete\"\n                                    onClick={handelDelete(table)}\n                                >\n                                    <DeleteIcon />\n                                </IconButtonWithTooltip>\n                            )}\n                        </CardActions>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Card, CardActions, CardContent, CardHeader, Grid } from \"@mui/material\"\nimport React from \"react\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\"\nimport FieldDataSet from \"./FieldDataSet\"\nimport useDeviceName from \"./devices/useDeviceName\"\nimport SwitchWithLabel from \"./ui/SwitchWithLabel\"\n\nfunction ReadingFieldGridItem(props: {\n    register: JDRegister\n    handleRegisterCheck: (register: JDRegister) => void\n    recording: boolean\n    registerChecked: boolean\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        register,\n        handleRegisterCheck,\n        recording,\n        registerChecked,\n        liveDataSet,\n    } = props\n    const { service } = register\n    const { device } = service\n    const gridBreakpoints = useGridBreakpoints()\n    const deviceName = useDeviceName(device)\n    const handleCheck = () => handleRegisterCheck(register)\n\n    return (\n        <Grid item {...gridBreakpoints} key={\"source\" + register.id}>\n            <Card>\n                <CardHeader\n                    subheader={register.service.name}\n                    title={`${deviceName}/${register.name}`}\n                />\n                <CardContent>\n                    {register.fields.map(field => (\n                        <span key={field.id}>\n                            <FiberManualRecordIcon\n                                fontSize=\"large\"\n                                style={{\n                                    verticalAlign: \"middle\",\n                                    color:\n                                        (registerChecked &&\n                                            liveDataSet?.colorOf(field)?.[0]) ||\n                                        \"#ccc\",\n                                }}\n                            />\n                            {field.name}\n                        </span>\n                    ))}\n                </CardContent>\n                <CardActions>\n                    <SwitchWithLabel\n                        disabled={recording}\n                        onChange={handleCheck}\n                        checked={registerChecked}\n                        label={`record ${deviceName}/${register.name}`}\n                    />\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default function ReadingFieldGrid(props: {\n    readingRegisters: JDRegister[]\n    registerIdsChecked: string[]\n    recording?: boolean\n    handleRegisterCheck: (register: JDRegister) => void\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        readingRegisters,\n        registerIdsChecked,\n        recording,\n        handleRegisterCheck,\n        liveDataSet,\n    } = props\n\n    return (\n        <Grid container spacing={2}>\n            {readingRegisters.map(register => {\n                const registerChecked =\n                    registerIdsChecked.indexOf(register.id) > -1\n                return (\n                    <ReadingFieldGridItem\n                        key={register.id}\n                        register={register}\n                        registerChecked={registerChecked}\n                        recording={recording}\n                        handleRegisterCheck={handleRegisterCheck}\n                        liveDataSet={liveDataSet}\n                    />\n                )\n            })}\n        </Grid>\n    )\n}\n","import { SystemEvent } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useServices from \"./useServices\"\n\nexport default function useEvents(options?: {\n    serviceName?: string\n    serviceClass?: number\n    specification?: boolean\n    ignoreChange?: boolean\n}) {\n    const { ignoreChange } = options || {}\n    const services = useServices(options)\n    let events = arrayConcatMany(services.map(srv => srv.events))\n    if (ignoreChange)\n        events = events.filter(\n            ev =>\n                ev.code !== SystemEvent.StatusCodeChanged &&\n                ev.code !== SystemEvent.Change\n        )\n    return events\n}\n","import { Chip } from \"@mui/material\"\nimport React from \"react\"\nimport OpenInBrowserIcon from \"@mui/icons-material/OpenInBrowser\"\nimport useFileSystem from \"../FileSystemContext\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FileSystemChip() {\n    const { fileSystem, showDirectoryPicker } = useFileSystem()\n    const root = useChange(fileSystem, _ => _?.root)\n    const handleOpenDirectory = () => showDirectoryPicker({ mode: \"readwrite\" })\n    const handleCloseDirectory = () => (fileSystem.root = undefined)\n\n    if (!fileSystem) return null\n\n    return (\n        <Chip\n            clickable\n            avatar={<OpenInBrowserIcon />}\n            label={root?.name || \"open directory\"}\n            onClick={handleOpenDirectory}\n            onDelete={root ? handleCloseDirectory : undefined}\n        />\n    )\n}\n","import {\n    Chip,\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    TextField,\n    DialogActions,\n    Button,\n} from \"@mui/material\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\nimport AddIcon from \"@mui/icons-material/Add\"\nimport { useId } from \"react\"\nimport useFileSystem from \"../FileSystemContext\"\n\nexport default function FileNewFileChip(props: {\n    name?: string\n    content: string\n    label?: string\n    extension?: string\n}) {\n    const {\n        name: newFileName,\n        content: newFileContent,\n        label,\n        extension,\n    } = props\n    const { fileSystem } = useFileSystem()\n    const [open, setOpen] = useState(false)\n    const [value, setValue] = useState(\"\")\n    const valueId = useId()\n\n    const handleOpen = () => {\n        setValue(\"\")\n        setOpen(true)\n    }\n    const handleOk = async () => {\n        setOpen(false)\n        let name = value.toLocaleLowerCase().replace(/\\s+/g, \"\")\n        if (newFileName)\n            await fileSystem.createWorkingDirectory(\n                name,\n                newFileName,\n                newFileContent\n            )\n        else {\n            if (extension) name += `.${extension}`\n            const d = fileSystem.workingDirectory || fileSystem.root\n            const f = await d.fileAsync(name, { create: true })\n            await f.write(newFileContent)\n            fileSystem.workingFile = f\n        }\n    }\n    const handleCancel = () => setOpen(false)\n    const handleValueChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n    }\n\n    return (\n        <>\n            <Chip\n                clickable\n                label={label || \"new...\"}\n                icon={<AddIcon />}\n                onClick={handleOpen}\n            />\n            <Dialog open={open} fullWidth={true}>\n                <DialogContent>\n                    <DialogContentText>Choose a project name</DialogContentText>\n                    <TextField\n                        id={valueId}\n                        value={value}\n                        label=\"Value\"\n                        fullWidth={true}\n                        onChange={handleValueChange}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" onClick={handleCancel}>\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!value}\n                        onClick={handleOk}\n                    >\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n","import { Chip } from \"@mui/material\"\nimport React from \"react\"\nimport { FileSystemNode } from \"./fsdom\"\n\nexport default function FileSystemNodeChip(props: {\n    node: FileSystemNode\n    selected?: boolean\n    onClick: () => void\n}) {\n    const { node, selected, onClick } = props\n    const { name } = node\n    return (\n        <Chip\n            clickable\n            label={name.replace(/\\.json$/i, \"\")}\n            color={selected ? \"primary\" : undefined}\n            onClick={onClick}\n        />\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useRef } from \"react\"\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\"\nimport useFileSystem from \"../FileSystemContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport FileSystemChip from \"./FileSystemChip\"\nimport FileNewFileChip from \"./FileNewFileChip\"\nimport FileSystemNodeChip from \"./FileSystemNodeChip\"\n\nexport default function FileTabs(props: {\n    newFileName?: string\n    newFileExtension?: string\n    newFileContent?: string\n    newFileLabel?: string\n    hideDirectories?: boolean\n    hideFiles?: boolean\n    directoryFilter?: (directory: string) => boolean\n    fileFilter?: (file: string) => boolean\n}) {\n    const {\n        newFileName,\n        newFileContent,\n        hideDirectories,\n        hideFiles,\n        directoryFilter,\n        fileFilter,\n        newFileLabel,\n        newFileExtension,\n    } = props\n    const { fileSystem } = useFileSystem()\n    const root = useChange(fileSystem, _ => _?.root)\n    const workingDirectory = useChange(fileSystem, _ => _?.workingDirectory)\n    const workingFile = useChange(fileSystem, _ => _?.workingFile)\n    const directories = useChange(root, _ =>\n        _?.directories?.filter(d => !directoryFilter || directoryFilter(d.name))\n    )\n    const files = useChange(root, _ =>\n        _?.files?.filter(d => !fileFilter || fileFilter(d.name))\n    )\n    const gridRef = useRef()\n    const keyboardProps = useKeyboardNavigationProps(gridRef.current)\n    const handleDirectorySelected = handle => () =>\n        (fileSystem.workingDirectory = handle)\n    const handleFileSelected = handle => () => (fileSystem.workingFile = handle)\n\n    if (!fileSystem) return null\n\n    return (\n        <Grid ref={gridRef} container spacing={1} {...keyboardProps}>\n            <Grid item>\n                <FileSystemChip />\n            </Grid>\n            {root && newFileContent && (\n                <Grid item>\n                    <FileNewFileChip\n                        name={newFileName}\n                        content={newFileContent}\n                        label={newFileLabel}\n                        extension={newFileExtension}\n                    />\n                </Grid>\n            )}\n            {!hideDirectories &&\n                directories?.map(node => (\n                    <Grid item key={node.name}>\n                        <FileSystemNodeChip\n                            node={node}\n                            selected={node === workingDirectory}\n                            onClick={handleDirectorySelected(node)}\n                        />\n                    </Grid>\n                ))}\n            {!hideFiles &&\n                files?.map(node => (\n                    <Grid item key={node.name}>\n                        <FileSystemNodeChip\n                            node={node}\n                            selected={node === workingFile}\n                            onClick={handleFileSelected(node)}\n                        />\n                    </Grid>\n                ))}\n        </Grid>\n    )\n}\n","import React, { useState, useContext, useEffect } from \"react\"\nimport {\n    Grid,\n    Button,\n    TextField,\n    InputAdornment,\n    Switch,\n    Card,\n    CardActions,\n} from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from \"@mui/icons-material/Stop\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveIcon from \"@mui/icons-material/Save\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport HourglassEmptyIcon from \"@mui/icons-material/HourglassEmpty\"\nimport { JDBus } from \"../../../jacdac-ts/src/jdom/bus\"\nimport FieldDataSet from \"../../components/FieldDataSet\"\nimport Trend from \"../../components/Trend\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../../components/ui/Alert\"\nimport SelectEvent from \"../../components/select/SelectEvent\"\nimport { JDEvent } from \"../../../jacdac-ts/src/jdom/event\"\nimport {\n    EVENT,\n    SRV_SENSOR_AGGREGATOR,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport {\n    arrayConcatMany,\n    throttle,\n    uniqueMap,\n} from \"../../../jacdac-ts/src/jdom/utils\"\nimport DataSetGrid from \"../../components/DataSetGrid\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport ReadingFieldGrid from \"../../components/ReadingFieldGrid\"\nimport DeviceCardHeader from \"../../components/devices/DeviceCardHeader\"\nimport { SensorAggregatorClient } from \"../../../jacdac-ts/src/clients/sensoraggregatorclient\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport ServiceManagerContext from \"../../components/ServiceManagerContext\"\nimport useChartPalette from \"../../components/useChartPalette\"\nimport { isSensor } from \"../../../jacdac-ts/src/jdom/spec\"\nimport useEvents from \"../../components/hooks/useEvents\"\nimport useDevices from \"../../components/hooks/useDevices\"\nimport { useId } from \"react\"\nimport DashboardDeviceItem from \"../../components/dashboard/DashboardDeviceItem\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport AddIcon from \"@mui/icons-material/Add\"\nimport useServices from \"../../components/hooks/useServices\"\nimport { delay } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useLocalStorage from \"../../components/hooks/useLocalStorage\"\nimport FileTabs from \"../../components/fs/FileTabs\"\nimport useFileSystem from \"../../components/FileSystemContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport GridHeader from \"../../components/ui/GridHeader\"\nimport useSnackbar from \"../../components/hooks/useSnackbar\"\nimport SimulatorDialogsContext from \"../../components/SimulatorsDialogContext\"\nimport useBus from \"../../jacdac/useBus\"\n\nexport const frontmatter = {\n    title: \"Data Collector\",\n    description: \"Record data from one or many services into files.\",\n}\nimport CoreHead from \"../../components/shell/Head\"\nexport const Head = (props) => <CoreHead {...props} {...frontmatter} />\n\nconst LIVE_HORIZON = 24\nfunction createDataSet(\n    bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    live: boolean,\n    palette: string[]\n) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    if (live) set.maxRows = LIVE_HORIZON + 4\n\n    return set\n}\n\nconst COLLECTOR_PREFIX = \"jacdac:collector:prefix\"\nconst COLLECTOR_SAMPLING_INTERVAL = \"jacdac:collector:samplinginterval\"\nconst COLLECTOR_SAMPLING_DURATION = \"jacdac:collector:samplingduration\"\nconst COLLECTOR_START_DELAY = \"jacdac:collector:startdelay\"\n\nexport default function Collector() {\n    const bus = useBus()\n    const { toggleShowDeviceHostsDialog } = useContext(SimulatorDialogsContext)\n    const { enqueueSnackbar } = useSnackbar()\n    const handleShowStartSimulator = () =>\n        toggleShowDeviceHostsDialog({ sensor: true })\n    const { fileSystem } = useFileSystem()\n    const root = useChange(fileSystem, _ => _?.root)\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [aggregatorId, setAggregatorId] = useState<string>(\"\")\n    const [recording, setRecording] = useState(false)\n    const [tables, setTables] = useState<FieldDataSet[]>([])\n    const [, setRecordingLength] = useState(0)\n\n    const [prefix, setPrefix] = useLocalStorage(COLLECTOR_PREFIX, \"data\")\n    const [samplingIntervalDelay, setSamplingIntervalDelay] = useLocalStorage(\n        COLLECTOR_SAMPLING_INTERVAL,\n        100\n    )\n    const [samplingDuration, setSamplingDuration] = useLocalStorage(\n        COLLECTOR_SAMPLING_DURATION,\n        10\n    )\n    const [startDelay, setStartDelay] = useLocalStorage(\n        COLLECTOR_START_DELAY,\n        0\n    )\n\n    const [liveDataSet, setLiveDataSet] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n    const [triggerEventId, setTriggerEventId] = useState<string>(\"\")\n    const [countdown, setCountdown] = useState(-1)\n    const starting = countdown > 0\n    const chartPalette = useChartPalette()\n    const devices = useDevices({ ignoreInfrastructure: true, announced: true })\n    const readingRegisters = arrayConcatMany(\n        devices.map(device =>\n            device\n                .services()\n                .filter(srv => isSensor(srv.specification))\n                .map(srv => srv.readingRegister)\n        )\n    )\n    const recordingRegisters = readingRegisters.filter(\n        reg => registerIdsChecked.indexOf(reg.id) > -1\n    )\n    const recordingDevices = uniqueMap(\n        recordingRegisters,\n        reg => reg.service.device.deviceId,\n        reg => reg.service.device\n    )\n    const aggregators: JDService[] = useServices({\n        serviceClass: SRV_SENSOR_AGGREGATOR,\n    })\n    const aggregator: JDService = aggregators.find(\n        srv => srv.id == aggregatorId\n    )\n    const samplingCount = Math.ceil(\n        (samplingDuration * 1000) / samplingIntervalDelay\n    )\n    const triggerEvent = bus.node(triggerEventId) as JDEvent\n    const startEnabled = !starting && !!recordingRegisters?.length\n    const events = useEvents({ ignoreChange: true })\n    const id = useId()\n    const samplingIntervalId = id + \"-samplinginterval\"\n    const samplingDurationId = id + \"-samplingduration\"\n    const startDelayId = id + \"-startdelay\"\n    const prefixId = id + \"-prefix\"\n\n    useEffect(() => {\n        //console.log(`trigger event`, triggerEventId, triggerEvent)\n        const un = triggerEvent?.subscribe(EVENT, () => {\n            //console.log(`trigger toggle recoring`, recording)\n            toggleRecording()\n        })\n        //console.log(`mounted`, triggerEvent)\n        return () => {\n            //console.log(`unmount trigger`)\n            if (un) un()\n        }\n    }, [triggerEvent, recording, registerIdsChecked, liveDataSet])\n\n    const createSensorConfig = () => ({\n        samplingInterval: samplingIntervalDelay,\n        samplesInWindow: 10,\n        inputs: recordingRegisters.map(reg => ({\n            serviceClass: reg.service.serviceClass,\n        })),\n    })\n    const saveConfig = () => {\n        const sensorConfig = JSON.stringify(createSensorConfig(), null, 2)\n        fileStorage.saveText(\n            `${prefix || \"jacdac\"}-sensor-config.json`,\n            sensorConfig\n        )\n    }\n    const newDataSet = (registerIds: string[], live: boolean) =>\n        registerIds.length\n            ? createDataSet(\n                  bus,\n                  readingRegisters.filter(\n                      reg => registerIds.indexOf(reg.id) > -1\n                  ),\n                  `${prefix || \"data\"}${tables.length}`,\n                  live,\n                  chartPalette\n              )\n            : undefined\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1) registerIdsChecked.splice(i, 1)\n        else registerIdsChecked.push(reg.id)\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveDataSet(newDataSet(registerIdsChecked, true))\n    }\n    const stopRecording = () => {\n        if (recording) {\n            if (root) {\n                const csv = liveDataSet.toCSV()\n                // write async\n                const now = new Date()\n                const name = `data-${now.getFullYear()}-${\n                    now.getMonth() + 1\n                }-${now.getDate()}-${now.getHours()}-${now.getMinutes()}-${now.getSeconds()}.csv`\n                root.fileAsync(name, { create: true }).then(f => f.write(csv))\n            }\n            setTables([liveDataSet, ...tables])\n            setLiveDataSet(newDataSet(registerIdsChecked, true))\n            setRecording(false)\n\n            enqueueSnackbar(`recording stopped`)\n        }\n    }\n    const startRecording = async () => {\n        if (!starting && !recording && recordingRegisters.length) {\n            // do countdown\n            if (startDelay > 0) {\n                let countdown = Math.ceil(startDelay)\n                while (countdown > 0) {\n                    setCountdown(countdown)\n                    await delay(1000)\n                    countdown--\n                }\n            }\n            setCountdown(-1)\n            setLiveDataSet(newDataSet(registerIdsChecked, false))\n            setRecording(true)\n            if (aggregator) {\n                const client = new SensorAggregatorClient(aggregator)\n                await client.setInputs(createSensorConfig())\n                client.collect(samplingCount)\n            }\n            enqueueSnackbar(`recording started`)\n        }\n    }\n    const toggleRecording = () => {\n        if (recording) stopRecording()\n        else startRecording()\n    }\n    const handleSamplingIntervalChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const v = parseInt(event.target.value)\n        if (!isNaN(v)) setSamplingIntervalDelay(v)\n    }\n    const handleSamplingDurationChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const v = parseInt(event.target.value)\n        if (!isNaN(v)) setSamplingDuration(v)\n    }\n    const handleStartDelayChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const v = parseInt(event.target.value)\n        if (!isNaN(v)) setStartDelay(v)\n    }\n    const handlePrefixChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPrefix(event.target.value.trim())\n    }\n    const handleTriggerChange = (eventId: string) => setTriggerEventId(eventId)\n    const handleDeleteTable = (table: FieldDataSet) => {\n        const i = tables.indexOf(table)\n        if (i > -1) {\n            tables.splice(i, 1)\n            setTables([...tables])\n        }\n    }\n    const handleAggregatorChecked = (srv: JDService) => () => {\n        const id = srv?.id == aggregatorId ? \"\" : srv?.id\n        setAggregatorId(id)\n    }\n    const updateLiveData = () => {\n        setLiveDataSet(liveDataSet)\n        setRecordingLength(liveDataSet.rows.length)\n        setLiveDataTimestamp(bus.timestamp)\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // data collection\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (!liveDataSet) return\n        //console.log(values)\n        liveDataSet.addRow(values)\n        if (recording && liveDataSet.length >= samplingCount) {\n            // stop recording\n            updateLiveData()\n            stopRecording()\n        } else {\n            throttleUpdate()\n        }\n    }\n    // stream data\n    useEffect(() => {\n        bus.streaming = true\n        return () => {\n            bus.streaming = false\n        }\n    }, [])\n    // collecting\n    useEffect(() => {\n        if (aggregator && recording) return undefined\n        const interval = setInterval(() => addRow(), samplingIntervalDelay)\n        return () => {\n            clearInterval(interval)\n        }\n    }, [\n        recording,\n        samplingIntervalDelay,\n        samplingCount,\n        registerIdsChecked,\n        aggregator,\n    ])\n    useEffect(() => {\n        if (aggregator) {\n            const client = new SensorAggregatorClient(aggregator)\n            return client.subscribeSample(values => addRow(values))\n        }\n        return () => {}\n    }, [recording, liveDataSet, registerIdsChecked, aggregator])\n\n    return (\n        <>\n            <h1>Data Collector</h1>\n            <p>\n                Use this page to collect streaming data from Jacdac devices into\n                various output formats.\n            </p>\n            <Grid container spacing={1}>\n                {!!aggregators.length && (\n                    <>\n                        <GridHeader title=\"(Optional) Choose a data aggregator\" />\n                        {aggregators.map(aggregator => (\n                            <Grid key={aggregator.id} item xs={4}>\n                                <Card>\n                                    <DeviceCardHeader\n                                        device={aggregator.device}\n                                        showAvatar={true}\n                                    />\n                                    <CardActions>\n                                        <Switch\n                                            checked={\n                                                aggregatorId == aggregator.id\n                                            }\n                                            disabled={recording}\n                                            onChange={handleAggregatorChecked(\n                                                aggregator\n                                            )}\n                                        />\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </>\n                )}\n                <GridHeader\n                    title=\"Sensors\"\n                    action={\n                        <IconButtonWithTooltip\n                            title=\"start simulator\"\n                            onClick={handleShowStartSimulator}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                    }\n                />\n                {!readingRegisters.length && (\n                    <Grid item xs={12}>\n                        <Alert severity=\"info\">Waiting for sensor...</Alert>\n                    </Grid>\n                )}\n                {!!readingRegisters.length && (\n                    <Grid item xs={12}>\n                        <ReadingFieldGrid\n                            readingRegisters={readingRegisters}\n                            registerIdsChecked={registerIdsChecked}\n                            recording={recording}\n                            liveDataSet={liveDataSet}\n                            handleRegisterCheck={handleRegisterCheck}\n                        />\n                    </Grid>\n                )}\n                <GridHeader title=\"Recorder\" />\n                {aggregator && (\n                    <Grid item xs={12}>\n                        <Alert severity=\"info\">\n                            Record the sensor input configuration in order to up\n                            your ML model later on.\n                        </Alert>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Button\n                        size=\"large\"\n                        variant=\"contained\"\n                        color={recording ? \"secondary\" : \"primary\"}\n                        title={\n                            starting\n                                ? `starting in ${countdown}`\n                                : recording\n                                ? \"stop recording\"\n                                : \"start recording\"\n                        }\n                        onClick={toggleRecording}\n                        startIcon={\n                            starting ? (\n                                <HourglassEmptyIcon />\n                            ) : recording ? (\n                                <StopIcon />\n                            ) : (\n                                <PlayArrowIcon />\n                            )\n                        }\n                        disabled={!startEnabled}\n                    >\n                        {starting\n                            ? countdown + \"\"\n                            : recording\n                            ? \"Stop\"\n                            : \"Start\"}\n                    </Button>\n                </Grid>\n                <Grid item xs={12} mt={1}>\n                    <Grid container direction=\"row\" spacing={1}>\n                        {aggregator && (\n                            <Grid item>\n                                <Button\n                                    variant=\"contained\"\n                                    title=\"save sensor input configuration\"\n                                    onClick={saveConfig}\n                                    startIcon={<SaveIcon />}\n                                    disabled={recording}\n                                >\n                                    Save configuration\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <TextField\n                                id={samplingIntervalId}\n                                disabled={recording}\n                                type=\"number\"\n                                label=\"Sampling interval\"\n                                value={samplingIntervalDelay}\n                                variant=\"outlined\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            ms\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={handleSamplingIntervalChange}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                id={samplingDurationId}\n                                type=\"number\"\n                                disabled={recording}\n                                label=\"Sampling duration\"\n                                value={samplingDuration}\n                                variant=\"outlined\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            s\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={handleSamplingDurationChange}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                id={startDelayId}\n                                type=\"number\"\n                                disabled={recording}\n                                label=\"Start delay\"\n                                value={startDelay}\n                                variant=\"outlined\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            s\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={handleStartDelayChange}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                id={prefixId}\n                                disabled={recording}\n                                label=\"File name prefix\"\n                                value={prefix}\n                                variant=\"outlined\"\n                                onChange={handlePrefixChange}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <SelectEvent\n                                events={events}\n                                eventId={triggerEventId}\n                                onChange={handleTriggerChange}\n                                label={\"Start Event\"}\n                                friendlyName={true}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {recordingDevices?.map(device => (\n                    <DashboardDeviceItem\n                        key={device.id}\n                        device={device}\n                        showAvatar={true}\n                        showHeader={true}\n                    />\n                ))}\n                {liveDataSet && (\n                    <Grid item xs={12}>\n                        <Trend\n                            key=\"trends\"\n                            height={12}\n                            dataSet={liveDataSet}\n                            horizon={LIVE_HORIZON}\n                            dot={true}\n                            gradient={true}\n                            yAxis={false}\n                        />\n                    </Grid>\n                )}\n                <GridHeader title=\"Recordings\" />\n                <Grid item xs={12}>\n                    <FileTabs hideFiles={true} hideDirectories={true} />\n                </Grid>\n                {!!tables.length && (\n                    <Grid item xs={12}>\n                        <DataSetGrid\n                            tables={tables}\n                            handleDeleteTable={handleDeleteTable}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </>\n    )\n}\n"],"names":["SensorAggregatorClient","assert","service","SensorAggregatorSampleType","error","cfg","totalSampleSize","inputs","input","specification","serviceSpecificationFromClassIdentifier","serviceClass","freeze","readingReg","sampleType","sampleSize","sampleShift","Math","field","mapType","bufferConcat","fromHex","jdpack","SensorAggregatorReg","bufferConcatMany","subscribeSample","reg","handler","bufferToArray","NumberFormat","f","info","numSamples","r","Object","lost","useEventRaised","dev","flashing","useChange","_","codes","SystemStatusCodes","severities","rest","useStatusCode","code","vendorCode","severity","humanify","SelectRoleDialog","lazy","MAX_NAME_LENGTH","RoleButton","styled","textTransform","useState","roleManager","useRoleManagerClient","role","useServiceRole","handleOpen","setShowSelectRoleDialog","handleClose","hasRoleForService","name","isDeviceId","shortDeviceId","ellipse","escapeRoleName","showSelectRoleDialog","instanceName","useInstanceName","icon","dashboardServiceIcon","iconProps","titleAccess","serviceName","color","createElement","float","expanded","expandable","props","isExpandableView","statusCodeAlert","toggleExpanded","setExpanded","e","useEffect","threshold","root","rootMargin","options","frozen","updateEntry","setEntry","node","elementRef","hasIOSupport","window","observerParams","observer","description","useDeviceDescription","paddingBottom","showAvatar","DeviceProxyAlert","DeviceBootloaderAlert","ignoredServices","useDeviceName","services","serviceFilter","serviceGridRef","useRef","intersection","useIntersectionObserver","visible","alwaysVisible","ServiceWidgets","useCallback","dependencyId","padding","paddingTop","showDeviceProxyAlert","other","useContext","breakpoints","breakpointWeight","device","srv","dashboardServiceWeight","c","drawerType","DrawerType","xs","sm","md","lg","xl","a","b","PAGE_DOWN","PAGE_UP","HOME","END","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","handlers","onUp","symmetric","onDown","charCode","keyCodeFromEvent","wrap","query","onMove","offset","focusable","Array","me","document","next","useKeyboardNavigation","onKeyDown","useArrowKeys","onLeft","onRight","vertical","parentRef","instanceNameRegister","useRegister","SystemReg","useRegisterUnpackedValue","bus","useBus","setMgr","register","meta","useStaticQuery","metaTitle","title","pageContext","site","metaDescription","data","content","PREFIX","classes","hr","start","StyledGrid","background","theme","marginBottom","width","clsx","action","variant","count","id","useId","labelId","descrId","hasDescr","required","label","none","hasDrawer","itemCount","handleChange","ev","onChange","events","friendlyName","gridBreakpoints","useGridBreakpoints","tables","handleDownload","table","sep","csv","fileStorage","handelDelete","handleDeleteTable","prettyDuration","deviceName","handleCheck","handleRegisterCheck","verticalAlign","registerChecked","liveDataSet","readingRegisters","registerIdsChecked","useServices","arrayConcatMany","SystemEvent","useFileSystem","handleOpenDirectory","showDirectoryPicker","mode","handleCloseDirectory","fileSystem","valueId","setValue","setOpen","handleOk","value","d","create","handleCancel","handleValueChange","event","selected","workingDirectory","workingFile","directories","directoryFilter","files","fileFilter","gridRef","keyboardProps","useKeyboardNavigationProps","handleDirectorySelected","handle","handleFileSelected","frontmatter","Head","LIVE_HORIZON","fields","registers","colors","palette","i","set","COLLECTOR_PREFIX","COLLECTOR_SAMPLING_INTERVAL","COLLECTOR_SAMPLING_DURATION","COLLECTOR_START_DELAY","toggleShowDeviceHostsDialog","enqueueSnackbar","useSnackbar","handleShowStartSimulator","sensor","setRegisterIdsChecked","setAggregatorId","setRecording","setTables","setRecordingLength","useLocalStorage","setLiveDataSet","setLiveDataTimestamp","setTriggerEventId","setCountdown","starting","countdown","chartPalette","useChartPalette","devices","useDevices","ignoreInfrastructure","announced","isSensor","recordingRegisters","recordingDevices","uniqueMap","aggregators","SRV_SENSOR_AGGREGATOR","aggregator","samplingCount","samplingDuration","triggerEvent","startEnabled","useEvents","ignoreChange","samplingIntervalId","samplingDurationId","startDelayId","prefixId","un","toggleRecording","createSensorConfig","samplingInterval","samplesInWindow","saveConfig","sensorConfig","JSON","prefix","newDataSet","registerIds","createDataSet","stopRecording","now","startRecording","startDelay","delay","client","handleSamplingIntervalChange","v","parseInt","isNaN","setSamplingIntervalDelay","handleSamplingDurationChange","setSamplingDuration","handleStartDelayChange","setStartDelay","handlePrefixChange","setPrefix","handleTriggerChange","eventId","handleAggregatorChecked","updateLiveData","throttleUpdate","throttle","addRow","values","recording","interval","setInterval","clearInterval","aggregatorId","startAdornment"],"sourceRoot":""}