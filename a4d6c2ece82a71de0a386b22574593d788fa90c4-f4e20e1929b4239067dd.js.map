{"version":3,"file":"a4d6c2ece82a71de0a386b22574593d788fa90c4-f4e20e1929b4239067dd.js","mappings":"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AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,kBAAkB,eAAe;AACjC,wDAAwD,+BAA+B;AACvF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH,6GAA6G;AACtO;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,IAAI,YAAY;AACvE;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,gDAAgD,gBAAgB,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,IAAI;AAClC,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,yBAAyB;AACzB,gCAAgC;AAChC,oBAAoB,UAAU,KAAK,MAAM;AACzC,+CAA+C;AAC/C;AACA;AACA,GAAG;AACH;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,GAAG;AACH;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,4JAA4J;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;;;AAGF;AACA,yBAAyB;AACzB;AACA;AACA,iCAAiC,KAAK,SAAS,kBAAkB;AACjE;AACA;AACA,iCAAiC,KAAK,SAAS,kBAAkB;;AAEjE;AACA;AACA;AACA,0BAA0B,OAAO,EAAE;AACnC;AACA;AACA;AACA,uBAAuB,QAAQ,qBAAqB;AACpD;AACA;AACA;AACA;AACA,MAAM;AACN,wBAAwB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,EAAE,YAAY;AACrE;AACA;AACA;AACA,IAAI;AACJ;AACA,uCAAuC,EAAE,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA,CAAC","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/GetApp.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Launch.js","webpack://jacdac-docs/./src/components/makecode/makecodesnippetparser.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./src/components/icons/MakeCodeIcon.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeOpenSnippetButton.tsx","webpack://jacdac-docs/./src/components/makecode/usePxtJson.ts","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./node_modules/prismjs/components/prism-csharp.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\nexports.default = _default;","/* eslint-disable @typescript-eslint/no-extra-semi */\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { makeCodeServices } from \"./services\"\n\nexport interface MakeCodeSnippetSource {\n    code: string\n    meta: {\n        editor?: string\n        snippet?: boolean\n        dependencies: string[]\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string\n    width?: number\n    height?: number\n    error?: string\n}\n\nexport default function parseMakeCodeSnippet(\n    source: string\n): MakeCodeSnippetSource {\n    let code = \"\"\n    const meta: {\n        editor?: string\n        snippet?: boolean\n        dependencies: string[]\n    } = {\n        dependencies: [],\n    }\n\n    if (/^-----\\n/.test(source)) {\n        let front: string\n        const parts = source.replace(/^-----\\n/, \"\").split(/-----\\n/gm)\n        switch (parts.length) {\n            case 1:\n                front = undefined\n                code = source\n                break\n            default:\n                ;[front, code] = parts\n                break\n        }\n\n        // parse front matter\n        front?.replace(/([a-z0-9]+):\\s*(.+)\\s*\\n/gi, (m, name, value) => {\n            switch (name) {\n                case \"dep\":\n                    meta.dependencies.push(value)\n                    break\n                case \"snippet\":\n                    meta.snippet = !!value\n                    break\n                case \"editor\":\n                    meta.editor = value\n                    break\n                default:\n                    meta[name] = value\n            }\n            return \"\"\n        })\n    } else {\n        code = source\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds\n        .filter(info => {\n            return (\n                code.indexOf(info.client.qName) > -1 ||\n                (info.client.default && code.indexOf(info.client.default) > -1)\n            )\n        })\n        .map(\n            info =>\n                `${info.client.name.replace(/^pxt-/, \"\")}=github:${\n                    info.client.repo\n                }`\n        )\n        .forEach(dep => meta.dependencies.push(dep))\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\")\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies)\n\n    // sniff target\n    if (!meta.editor) {\n        if (/basic\\.show/.test(code)) meta.editor = \"microbit\"\n    }\n\n    return {\n        code,\n        meta,\n    }\n}\n","import React, { useState, useMemo, useContext } from \"react\"\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from \"@mui/material\"\nimport CodeBlock from \"../CodeBlock\"\nimport TabPanel from \"../ui/TabPanel\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { withPrefix } from \"gatsby\"\nimport parseMakeCodeSnippet from \"./makecodesnippetparser\"\nimport { JSONTryParse } from \"../../../jacdac-ts/src/jdom/utils\"\nimport MakeCodeOpenSnippetButton from \"./MakeCodeOpenSnippetButton\"\n\ninterface Request {\n    code: string\n    options: {\n        package: string\n    }\n}\ninterface Rendered {\n    req: Request\n    url: string\n    width: number\n    height: number\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props\n    const { source, rendered } = useMemo(\n        () =>\n            JSONTryParse<{\n                source?: string\n                rendered?: Rendered\n            }>(renderedSource, {}),\n        [renderedSource]\n    )\n    const snippet = useMemo(\n        () => source && parseMakeCodeSnippet(source),\n        [source]\n    )\n    const { url, req } = rendered || {}\n    const tabs = [\"blocks\", \"typescript\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext)\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        if (newValue < tabs.length - 1) setEditor(tabs[newValue])\n        setTab(newValue)\n    }\n    const { code } = snippet || {}\n\n    if (!code)\n        return <CodeBlock className=\"typescript\">{renderedSource}</CodeBlock>\n\n    return (\n        <PaperBox>\n            {req && (\n                <div style={{ float: \"right\" }}>\n                    <MakeCodeOpenSnippetButton {...req} />\n                </div>\n            )}\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"Select MakeCode editor\"\n            >\n                <Tab label={\"Blocks\"} />\n                <Tab label={\"JavaScript\"} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <CodeBlock className=\"typescript\">{code}</CodeBlock>\n            </TabPanel>\n        </PaperBox>\n    )\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/vsLight\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@mui/icons-material/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@mui/icons-material/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nimport Prism from \"prism-react-renderer/prism\"\n;(typeof global !== \"undefined\" ? global : window).Prism = Prism\nrequire(\"prismjs/components/prism-csharp\")\n\nconst TraceSnippet = lazy(() => import(\"./trace/TraceSnippet\"))\nconst VanillaCodeButton = lazy(() => import(\"./ui/VanillaCodeButton\"))\nconst ReactCodeButton = lazy(() => import(\"./ui/ReactCodeButton\"))\nconst P5JSCodeButton = lazy(() => import(\"./ui/P5JSCodeButton\"))\nconst CopyButton = lazy(() => import(\"./ui/CopyButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: { p5js?: string; js?: string; tsx?: string; html?: string }\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    actions?: ReactNode\n    url?: string\n    copy?: boolean\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        actions,\n        url,\n        copy,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={url}\n                            underline=\"hover\"\n                        >\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton size=\"large\">\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton size=\"large\">\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {copy && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CopyButton onCopy={async () => children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {codeSandbox?.tsx && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <ReactCodeButton source={codeSandbox} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {codeSandbox?.js && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <VanillaCodeButton source={codeSandbox} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {codeSandbox?.p5js && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <P5JSCodeButton sketch={codeSandbox?.p5js} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {actions && <div style={{ float: \"right\" }}>{actions}</div>}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    actions?: ReactNode\n    url?: string\n    filename?: string\n    copy?: boolean\n}) {\n    const { children, filename, className, ...rest } = props\n\n    if (className === undefined) return <code>{children}</code>\n\n    const language = className?.replace(/language-/, \"\") || \"\"\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"tsx\": {\n            const [source, tsx] = children.split(/\\n-{5,}\\n/gi)\n            return (\n                <HighlightedCode\n                    {...rest}\n                    className={\"tsx\"}\n                    codeSandbox={{ tsx }}\n                >\n                    {source}\n                </HighlightedCode>\n            )\n        }\n        case \"vanilla\": {\n            const [source, js, html] = children.split(/\\n-{5,}\\n/gi)\n            return (\n                <HighlightedCode\n                    {...rest}\n                    className={\"javascript\"}\n                    codeSandbox={{ js, html }}\n                >\n                    {source}\n                </HighlightedCode>\n            )\n        }\n        case \"p5js\": {\n            const [source, p5js] = children.split(/\\n-{5,}\\n/gi)\n            return (\n                <HighlightedCode\n                    {...rest}\n                    className={/<html>/.test(source) ? \"html\" : \"javascript\"}\n                    codeSandbox={{ p5js }}\n                >\n                    {source}\n                </HighlightedCode>\n            )\n        }\n        case \"python\": {\n            return (\n                <HighlightedCode\n                    {...props}\n                    downloadName={filename}\n                    downloadText={!!filename && children}\n                />\n            )\n        }\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\"\nimport React from \"react\"\n\nexport default (props: SvgIconProps) => (\n    <SvgIcon titleAccess=\"MakeCode logo\" {...props}>\n        <path\n            d=\"M4.703 2.615s-.505.05-.72.15a3.011 3.011 0 00-.391.221c-.22.12-.42.266-.6.444-.52.516-.795 1.2-.834 2.05a6.857 6.857 0 00-.066.961V8.36a5.117 5.117 0 01-.137 1.032 1.73 1.73 0 01-.4.773 2.006 2.006 0 00-.15.149 6.534 6.534 0 01-.848.617c-.303.196-.481.474-.537.83v.017c-.01.07-.017.14-.018.215L0 12.006v.008c0 .08.003.156.012.226h.002c.024.214.082.378.177.492.129.153.345.328.649.52.304.192.552.398.74.62.19.221.332.549.428.985.037.17.065.54.084 1.106v1.514c0 .285.023.542.056.787.001.047 0 .092.002.14.007.587.135 1.107.385 1.559.25.453.604.803 1.063 1.05.458.248.978.372 1.56.372h14.139c.262 0 .505-.05.72-.15.139-.064.267-.14.391-.221.218-.12.42-.266.6-.444.52-.516.795-1.2.834-2.05.042-.299.066-.618.066-.963v-1.918c.014-.372.059-.715.137-1.03.078-.314.213-.572.4-.775a1.98 1.98 0 00.15-.146c.2-.179.48-.384.848-.618.303-.196.481-.475.537-.832l.002-.015a1.66 1.66 0 00.018-.217V11.988c0-.08-.004-.156-.012-.226h-.002c-.024-.214-.082-.378-.177-.492-.129-.153-.345-.328-.649-.52a3.208 3.208 0 01-.74-.62c-.19-.221-.332-.55-.428-.987-.037-.17-.065-.538-.084-1.104V6.523c0-.285-.023-.542-.056-.787-.001-.047 0-.092-.002-.14-.007-.587-.135-1.107-.385-1.559a2.598 2.598 0 00-1.063-1.05c-.458-.248-.978-.372-1.56-.372H4.703zm1.22 1.24c.307 0 .533.058.673.172.115.096.168.24.168.453a.885.885 0 01-.069.36.501.501 0 01-.142.201.346.346 0 01-.18.07c-.31.042-.543.095-.713.164a1.03 1.03 0 00-.543.536c-.093.201-.149.47-.174.818-.022.301-.033.725-.033 1.293-.012.796-.058 1.422-.137 1.861-.07.398-.206.74-.4 1.02-.197.282-.499.552-.898.804l-.616.39.618.386c.286.18.52.368.695.558.166.18.304.407.414.672.115.277.2.614.248 1.004.051.413.076.908.076 1.47 0 .587.013 1.025.037 1.34.03.367.094.64.196.835.123.236.303.403.537.496.168.067.395.114.693.148a.404.404 0 01.268.16c.081.1.123.259.123.471 0 .308-.064.608-.84.608-.477 0-.898-.094-1.25-.282a2.006 2.006 0 01-.813-.785 2.402 2.402 0 01-.31-1.197c-.048-2.666-.098-3.199-.139-3.37-.115-.472-.286-.83-.525-1.097a3.373 3.373 0 00-.776-.633c-.216-.13-.375-.254-.47-.369-.027-.032-.088-.136-.088-.416 0-.288.09-.471.293-.596.454-.28.781-.522.998-.746.244-.251.415-.565.51-.931.084-.328.132-.788.148-1.407.015-.58.03-1.305.049-2.177.016-.706.229-1.25.654-1.666.426-.416.988-.618 1.719-.618zm12.153 0c.477 0 .898.095 1.25.282.348.185.612.442.813.785.2.343.305.746.31 1.197.048 2.666.098 3.199.139 3.37.115.472.286.83.525 1.097.216.24.476.452.776.633.217.131.376.255.47.369.027.032.088.136.088.416 0 .287-.09.471-.293.596-.454.28-.78.522-.998.746-.243.25-.415.565-.51.931-.084.328-.132.788-.148 1.407-.015.58-.03 1.305-.049 2.177-.016.706-.229 1.25-.654 1.666-.426.416-.988.618-1.719.618-.307 0-.533-.058-.672-.172-.116-.096-.168-.24-.168-.453 0-.135.021-.253.069-.36a.512.512 0 01.14-.201.353.353 0 01.182-.07c.31-.042.543-.095.713-.164.238-.099.424-.284.54-.538.094-.201.152-.468.177-.816.021-.301.033-.727.033-1.295.012-.796.058-1.42.137-1.86.07-.397.204-.74.398-1.019.196-.281.499-.552.898-.804l.616-.39-.616-.386a3.412 3.412 0 01-.695-.558 2.275 2.275 0 01-.416-.672 3.871 3.871 0 01-.246-1.004 12.22 12.22 0 01-.078-1.47c0-.587-.012-1.025-.037-1.34-.03-.367-.092-.64-.194-.835a1.021 1.021 0 00-.539-.496 2.76 2.76 0 00-.691-.148.4.4 0 01-.268-.16c-.082-.1-.123-.259-.123-.471 0-.308.064-.608.84-.608zm-6.29 1.348c.052-.005.341-.005.394 0v.01a1.524 1.524 0 011.287 1.457c0 .62-.332.891-.332.916-.33.346-.123.744.467.695 0 0 2.4.012 2.445 0a.576.576 0 01.422.555l-.002 2.574c-.106.3-.396.36-.658.111-.025 0-.296-.332-.916-.332a1.521 1.521 0 00-1.457 1.286h-.008a4.897 4.897 0 000 .394h.008a1.524 1.524 0 001.457 1.287c.62 0 .89-.332.916-.332.27-.256.557-.225.658.112v2.783a.562.562 0 01-.563.562H8.061a.561.561 0 01-.563-.562V8.836c0-.261.18-.492.422-.555.046.012 2.443 0 2.443 0 .659.032.798-.349.469-.695 0-.025-.332-.296-.332-.916a1.521 1.521 0 011.285-1.457v-.01z\"\n            strokeWidth=\".75\"\n        />\n    </SvgIcon>\n)\n","import React, { useState } from \"react\"\nimport { Button, SxProps, Theme } from \"@mui/material\"\nimport { toMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport MakeCodeIcon from \"../icons/MakeCodeIcon\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport useSnackbar from \"../hooks/useSnackbar\"\nimport usePxtJson from \"../makecode/usePxtJson\"\n\nexport default function MakeCodeOpenSnippetButton(props: {\n    sx?: SxProps<Theme>\n    name?: string\n    code?: string\n    options?: { package?: string }\n    slug?: string\n    branch?: string\n    full?: boolean\n}) {\n    const { setError } = useSnackbar()\n    const { mobile } = useMediaQueries()\n    const [importing, setImporting] = useState(false)\n    const {\n        sx,\n        code = \"\",\n        options,\n        name = \"Jacdac demo\",\n        slug,\n        branch = \"master\",\n        full\n    } = props\n    const pxt = usePxtJson(slug, branch)\n    const disabled = importing || (slug && !pxt)\n\n    const handleClick = async () => {\n        const md = \"\\n\"\n        const target = \"microbit\"\n        const editor = \"https://makecode.microbit.org/\"\n        const deps = options?.package?.split(\",\").map(dep => dep.split(\"=\", 2))\n        const dependencies =\n            toMap(\n                deps,\n                deps => deps[0],\n                deps => deps[1]\n            ) || {}\n        if (pxt) dependencies[pxt.name] = `github:${slug}#v${pxt.version}`\n\n        try {\n            setImporting(true)\n            const x = await fetch(\"https://makecode.com/api/scripts\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                },\n                body: JSON.stringify({\n                    name,\n                    target,\n                    description: \"Made with ❤️ in Microsoft Jacdac.\",\n                    editor: \"blocksprj\",\n                    text: {\n                        \"README.md\": md,\n                        \"main.blocks\": code\n                            ? \"\"\n                            : `<xml xmlns=\"http://www.w3.org/1999/xhtml\"></xml>`,\n                        \"main.ts\": code,\n                        \"pxt.json\": JSON.stringify({\n                            name: name,\n                            dependencies: {\n                                core: \"*\",\n                                microphone: \"*\",\n                                ...dependencies,\n                            },\n                            description: \"\",\n                            files: [\"main.blocks\", \"main.ts\", \"README.md\"],\n                        }),\n                    },\n                    meta: {},\n                }),\n            })\n            const data = await x.json()\n            const url = `${editor}#pub:${data.shortid}`\n            window.open(url, \"_blank\", \"noreferrer\")\n        } catch (error) {\n            setError(error)\n        } finally {\n            setImporting(false)\n        }\n    }\n\n    if (mobile) // mobile blocks all popups\n        return undefined\n\n    return !full && mobile ? (\n        <IconButtonWithTooltip\n            sx={sx}\n            onClick={handleClick}\n            color=\"primary\"\n            disabled={disabled}\n            title=\"Try in MakeCode\"\n        >\n            <MakeCodeIcon />\n        </IconButtonWithTooltip>\n    ) : (\n        <Button\n            sx={sx}\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleClick}\n            disabled={disabled}\n            startIcon={<MakeCodeIcon />}\n        >\n            Try in MakeCode\n        </Button>\n    )\n}\n","import { rawUrl } from \"../github\"\nimport useFetch from \"../useFetch\"\n\nexport interface PxtJson {\n    name: string\n    description: string\n    version?: string\n    dependencies?: Record<string, string>\n}\n\nexport default function usePxtJson(slug: string, branch?: string) {\n    if (!slug)\n        return undefined\n    const url = rawUrl(slug, branch, \"pxt.json\")\n    const { response: pxtJson } = useFetch<PxtJson>(url)\n    return pxtJson\n}\n","import { BoxProps, Paper } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function PaperBox(\n    props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps\n) {\n    const { children, padding = 1, elevation = 1, bgcolor, ...others } = props\n    return (\n        <Paper\n            sx={{ mb: 1, bgcolor, p: padding, ...others }}\n            square\n            elevation={elevation}\n        >\n            {children}\n        </Paper>\n    )\n}\n","(function (Prism) {\n\n\t/**\n\t * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n\t *\n\t * Note: This is a simple text based replacement. Be careful when using backreferences!\n\t *\n\t * @param {string} pattern the given pattern.\n\t * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n\t * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n\t * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n\t */\n\tfunction replace(pattern, replacements) {\n\t\treturn pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n\t\t\treturn '(?:' + replacements[+index] + ')';\n\t\t});\n\t}\n\t/**\n\t * @param {string} pattern\n\t * @param {string[]} replacements\n\t * @param {string} [flags]\n\t * @returns {RegExp}\n\t */\n\tfunction re(pattern, replacements, flags) {\n\t\treturn RegExp(replace(pattern, replacements), flags || '');\n\t}\n\n\t/**\n\t * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n\t *\n\t * @param {string} pattern\n\t * @param {number} depthLog2\n\t * @returns {string}\n\t */\n\tfunction nested(pattern, depthLog2) {\n\t\tfor (var i = 0; i < depthLog2; i++) {\n\t\t\tpattern = pattern.replace(/<<self>>/g, function () { return '(?:' + pattern + ')'; });\n\t\t}\n\t\treturn pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]');\n\t}\n\n\t// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n\tvar keywordKinds = {\n\t\t// keywords which represent a return or variable type\n\t\ttype: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n\t\t// keywords which are used to declare a type\n\t\ttypeDeclaration: 'class enum interface record struct',\n\t\t// contextual keywords\n\t\t// (\"var\" and \"dynamic\" are missing because they are used like types)\n\t\tcontextual: 'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n\t\t// all other keywords\n\t\tother: 'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n\t};\n\n\t// keywords\n\tfunction keywordsToPattern(words) {\n\t\treturn '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b';\n\t}\n\tvar typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);\n\tvar keywords = RegExp(keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other));\n\tvar nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other);\n\tvar nonContextualKeywords = keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.other);\n\n\t// types\n\tvar generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2); // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n\tvar nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2);\n\tvar name = /@?\\b[A-Za-z_]\\w*\\b/.source;\n\tvar genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic]);\n\tvar identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [nonTypeKeywords, genericName]);\n\tvar array = /\\[\\s*(?:,\\s*)*\\]/.source;\n\tvar typeExpressionWithoutTuple = replace(/<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source, [identifier, array]);\n\tvar tupleElement = replace(/[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [generic, nestedRound, array]);\n\tvar tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement]);\n\tvar typeExpression = replace(/(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source, [tuple, identifier, array]);\n\n\tvar typeInside = {\n\t\t'keyword': keywords,\n\t\t'punctuation': /[<>()?,.:[\\]]/\n\t};\n\n\t// strings & characters\n\t// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n\t// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n\tvar character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source; // simplified pattern\n\tvar regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source;\n\tvar verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source;\n\n\n\tPrism.languages.csharp = Prism.languages.extend('clike', {\n\t\t'string': [\n\t\t\t{\n\t\t\t\tpattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\t// Using static\n\t\t\t\t// using static System.Math;\n\t\t\t\tpattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [identifier]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: typeInside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Using alias (type)\n\t\t\t\t// using Project = PC.MyCompany.Project;\n\t\t\t\tpattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [name, typeExpression]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: typeInside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Using alias (alias)\n\t\t\t\t// using Project = PC.MyCompany.Project;\n\t\t\t\tpattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Type declarations\n\t\t\t\t// class Foo<A, B>\n\t\t\t\t// interface Foo<out A, B>\n\t\t\t\tpattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [typeDeclarationKeywords, genericName]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: typeInside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Single catch exception declaration\n\t\t\t\t// catch(Foo)\n\t\t\t\t// (things like catch(Foo e) is covered by variable declaration)\n\t\t\t\tpattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: typeInside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Name of the type parameter of generic constraints\n\t\t\t\t// where Foo : class\n\t\t\t\tpattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Casts and checks via as and is.\n\t\t\t\t// as Foo<A>, is Bar<B>\n\t\t\t\t// (things like if(a is Foo b) is covered by variable declaration)\n\t\t\t\tpattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [typeExpressionWithoutTuple]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: typeInside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Variable, field and parameter declaration\n\t\t\t\t// (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n\t\t\t\tpattern: re(/\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/.source, [typeExpression, nonContextualKeywords, name]),\n\t\t\t\tinside: typeInside\n\t\t\t}\n\t\t],\n\t\t'keyword': keywords,\n\t\t// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n\t\t'number': /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n\t\t'operator': />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n\t\t'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n\t});\n\n\tPrism.languages.insertBefore('csharp', 'number', {\n\t\t'range': {\n\t\t\tpattern: /\\.\\./,\n\t\t\talias: 'operator'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('csharp', 'punctuation', {\n\t\t'named-parameter': {\n\t\t\tpattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('csharp', 'class-name', {\n\t\t'namespace': {\n\t\t\t// namespace Foo.Bar {}\n\t\t\t// using Foo.Bar;\n\t\t\tpattern: re(/(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source, [name]),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'type-expression': {\n\t\t\t// default(Foo), typeof(Foo<Bar>), sizeof(int)\n\t\t\tpattern: re(/(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/.source, [nestedRound]),\n\t\t\tlookbehind: true,\n\t\t\talias: 'class-name',\n\t\t\tinside: typeInside\n\t\t},\n\t\t'return-type': {\n\t\t\t// Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n\t\t\t// int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n\t\t\t// int Foo => 0; int Foo { get; set } = 0;\n\t\t\tpattern: re(/<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source, [typeExpression, identifier]),\n\t\t\tinside: typeInside,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'constructor-invocation': {\n\t\t\t// new List<Foo<Bar[]>> { }\n\t\t\tpattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n\t\t\tlookbehind: true,\n\t\t\tinside: typeInside,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t/*'explicit-implementation': {\n\t\t\t// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\n\t\t\tpattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\n\t\t\tinside: classNameInside,\n\t\t\talias: 'class-name'\n\t\t},*/\n\t\t'generic-method': {\n\t\t\t// foo<Bar>()\n\t\t\tpattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n\t\t\tinside: {\n\t\t\t\t'function': re(/^<<0>>/.source, [name]),\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: RegExp(generic),\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'type-list': {\n\t\t\t// The list of types inherited or of generic constraints\n\t\t\t// class Foo<F> : Bar, IList<FooBar>\n\t\t\t// where F : Bar, IList<int>\n\t\t\tpattern: re(\n\t\t\t\t/\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/.source,\n\t\t\t\t[typeDeclarationKeywords, genericName, name, typeExpression, keywords.source, nestedRound, /\\bnew\\s*\\(\\s*\\)/.source]\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'record-arguments': {\n\t\t\t\t\tpattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [genericName, nestedRound]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: Prism.languages.csharp\n\t\t\t\t},\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'class-name': {\n\t\t\t\t\tpattern: RegExp(typeExpression),\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: typeInside\n\t\t\t\t},\n\t\t\t\t'punctuation': /[,()]/\n\t\t\t}\n\t\t},\n\t\t'preprocessor': {\n\t\t\tpattern: /(^[\\t ]*)#.*/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'property',\n\t\t\tinside: {\n\t\t\t\t// highlight preprocessor directives as keywords\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// attributes\n\tvar regularStringOrCharacter = regularString + '|' + character;\n\tvar regularStringCharacterOrComment = replace(/\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source, [regularStringOrCharacter]);\n\tvar roundExpression = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n\n\t// https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n\tvar attrTarget = /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/.source;\n\tvar attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [identifier, roundExpression]);\n\n\tPrism.languages.insertBefore('csharp', 'class-name', {\n\t\t'attribute': {\n\t\t\t// Attributes\n\t\t\t// [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n\t\t\tpattern: re(/((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/.source, [attrTarget, attr]),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'target': {\n\t\t\t\t\tpattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'attribute-arguments': {\n\t\t\t\t\tpattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n\t\t\t\t\tinside: Prism.languages.csharp\n\t\t\t\t},\n\t\t\t\t'class-name': {\n\t\t\t\t\tpattern: RegExp(identifier),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /[:,]/\n\t\t\t}\n\t\t}\n\t});\n\n\n\t// string interpolation\n\tvar formatString = /:[^}\\r\\n]+/.source;\n\t// multi line\n\tvar mInterpolationRound = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n\tvar mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [mInterpolationRound, formatString]);\n\t// single line\n\tvar sInterpolationRound = nested(replace(/[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/.source, [regularStringOrCharacter]), 2);\n\tvar sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [sInterpolationRound, formatString]);\n\n\tfunction createInterpolationInside(interpolation, interpolationRound) {\n\t\treturn {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-string': {\n\t\t\t\t\t\tpattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [interpolationRound, formatString]),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /^:/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\{|\\}$/,\n\t\t\t\t\t'expression': {\n\t\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\t\talias: 'language-csharp',\n\t\t\t\t\t\tinside: Prism.languages.csharp\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t};\n\t}\n\n\tPrism.languages.insertBefore('csharp', 'string', {\n\t\t'interpolation-string': [\n\t\t\t{\n\t\t\t\tpattern: re(/(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source, [mInterpolation]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: createInterpolationInside(mInterpolation, mInterpolationRound),\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [sInterpolation]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: createInterpolationInside(sInterpolation, sInterpolationRound),\n\t\t\t}\n\t\t],\n\t\t'char': {\n\t\t\tpattern: RegExp(character),\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;\n\n}(Prism));\n"],"names":["code","meta","dependencies","parts","source","front","mkcds","makeCodeServices","info","dep","unique","useMemo","JSONTryParse","snippet","parseMakeCodeSnippet","rendered","tabs","useContext","useState","handleTabChange","newValue","setEditor","setTab","req","float","withPrefix","require","TraceSnippet","lazy","VanillaCodeButton","ReactCodeButton","P5JSCodeButton","CopyButton","language","theme","darkMode","valueUri","encodeURIComponent","downloadName","copy","codeSandbox","actions","tokens","lineProps","getLineProps","key","line","getTokenProps","rest","className","children","props","useSnackbar","useMediaQueries","name","branch","pxt","usePxtJson","disabled","importing","slug","handleClick","md","target","editor","deps","options","toMap","setImporting","x","fetch","method","headers","Accept","body","JSON","description","text","core","microphone","files","data","url","window","setError","rawUrl","response","useFetch","padding","elevation","others","mb","p"],"sourceRoot":""}