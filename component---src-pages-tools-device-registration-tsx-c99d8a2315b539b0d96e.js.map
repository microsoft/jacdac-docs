{"version":3,"file":"component---src-pages-tools-device-registration-tsx-c99d8a2315b539b0d96e.js","mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,MAAM,KAAqC,EAAE,EAI1C;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAK;AAClB,6CAA6C,GAAG;AAChD,wCAAwC,GAAG;AAC3C;AACA,oCAAoC,mBAAI,iBAAiB,8BAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,oBAAK,gBAAgB,8BAAQ;AACnD,eAAe,yBAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,6DAA6D,mBAAI,CAAC,yBAAU,EAAE,8BAAQ;AACtF;AACA;AACA,KAAK;AACL;AACA,KAAK,0BAA0B,mBAAI,CAAC,qBAAM,EAAE,8BAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,8CAA8C,mBAAI,CAAC,6BAAc,EAAE,8BAAQ;AAChF;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CA4KvC,CAAC;AACF,wDAAe,SAAS;;;;;;;;;;;AC5WxB,iBAAqC,CACjC,GAAI,CAAJ,GACI,G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ACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,aAAa,wBAAK;AAClB;AACA;AACA;AACA;AACA,UAAU,KAAqC,EAAE,EAG1C;AACP;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,qBAAqB,YAAY;AACjC,mBAAmB,YAAY;AAC/B,qBAAqB,YAAY;AACjC,kCAAkC,cAAc;AAChD,sCAAsC,cAAc;AACpD;AACA,8BAA8B,YAAY;AAC1C,iCAAiC,gCAAa;AAC9C;AACA;AACA;AACA,GAAG;AACH,2CAA2C,gCAAa;AACxD;AACA;AACA;AACA;AACA,GAAG;AACH,gCAAgC,cAAc;AAC9C,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,+BAA+B,gCAAa;AAC5C;AACA;AACA;AACA;AACA,GAAG;AACH,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,mCAAgB;AACxC;AACA;AACA,GAAG;AACH,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,MAAM,KAAqC,EAAE,EAO1C;AACH,mBAAmB,mCAAgB;AACnC;AACA;AACA,MAAM;AACN,iDAAiD,WAAW;AAC5D;AACA,GAAG;;AAEH;AACA,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,UAAU;;AAEvF;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,8BAA8B,mCAAgB;AAC9C;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,MAAM;AACN,gEAAgE,GAAG,UAAU,MAAM;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,yBAAyB;AAC9F;AACA,+BAA+B,yBAAyB;AACxD,+BAA+B,yBAAyB;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,MAAM;AACjF;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA,8BAA8B,yBAAyB;AACvD;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,2CAA2C;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH,iCAAiC,mCAAgB;AACjD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2BAA2B,mCAAgB;AAC3C,IAAI,yBAAM;AACV;AACA;AACA;AACA;AACA,GAAG;AACH,MAAM,KAAqC,EAAE,EAW1C;AACH,EAAE,eAAe;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAU,KAAqC,EAAE,EAK1C;AACP;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,UAAU;;AAE1E;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,YAAY,KAAqC,EAAE,EAM1C;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK,8BAAQ;AAC1C,yCAAyC,GAAG;AAC5C,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG;AAChB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,KAAK,8BAAQ;AAClB;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,aAAa,GAAG;AAChB,4BAA4B,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG,UAAU,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC97BuF;AAC5B;AACpD;AACP,SAAS,uCAAoB;AAC7B;AACA,6BAA6B,yCAAsB;AACnD,uEAAe,oEAAoB;;;;ACNiE;AAC1C;AAC1D;AAC+B;AACI;AACX;AAC8C;AAChC;AACc;AACP;AACyB;AACtB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,kDAAkD,6BAAU,QAAQ;AACpE;AACA,SAAS,iCAAc,QAAQ,4BAA4B;AAC3D;AACA,0BAA0B,0BAAM;AAChC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,0EAA0E,6BAAU,mBAAmB;AACvG;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,8BAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD,mCAAmC,gBAAgB;AACnD,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,sBAAsB,mBAAI,oBAAoB,8BAAQ;AACtD;AACA,eAAe,yBAAI;AACnB;AACA;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CA8CvC,CAAC;AACF,gEAAe,aAAa;;;;;;;;;;;;;;;;;;ACxI2D;AAC5B;AACpD;AACP,SAAS,uCAAoB;AAC7B;AACA,4BAA4B,yCAAsB;AAClD,qEAAe,mBAAmB;;ACNkE;AAC1C;AAC1D;AACA,MAAM,qBAAS;AACgB;AACI;AACX;AACqC;AAC+C;AACxE;AACL;AACc;AAChB;AACU;AACZ;AACsB;AACY;AACY;AACN;AACf;AACgB;AAChB;AACd;AACmD;AAC5C;AACG;AACE;AAClD,MAAM,8BAAiB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,2BAA2B,6BAAU,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAc,QAAQ,2BAA2B;AAC1D;AACA,yBAAyB,0BAAM;AAC/B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,aAAa,oCAAuB,CAAC;AACrC,KAAK;AACL,aAAa,oCAAuB,CAAC,qBAAqB,6BAAU,OAAO;AAC3E,KAAK;AACL,aAAa,0CAA6B,CAAC;AAC3C,KAAK;AACL,aAAa,sCAAyB,CAAC;AACvC,KAAK;AACL,aAAa,sCAAyB,CAAC;AACvC,KAAK;AACL;AACA,CAAC;AACD;AACA,CAAC,KAAK,8BAAQ;AACd,QAAQ,wCAA2B,EAAE,GAAG,+CAAkC,CAAC;AAC3E;AACA,GAAG;AACH;AACA;AACA,iBAAiB,+CAAkC,CAAC;AACpD;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD,SAAS,oCAAuB,CAAC,IAAI,8BAAQ;AAC7C;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,SAAS,0CAA6B,CAAC;AACvC;AACA,SAAS,6CAAgC,CAAC,MAAM,6CAAgC,CAAC;AACjF;AACA,KAAK;AACL,SAAS,6CAAgC,CAAC,GAAG,6CAAgC,CAAC;AAC9E;AACA,KAAK;AACL,WAAW,sCAAyB,CAAC;AACrC;AACA;AACA;AACA,GAAG;AACH,SAAS,qCAAiB,CAAC;AAC3B;AACA;AACA;AACA;AACA,GAAG;AACH,SAAS,qCAAiB,CAAC,GAAG,mDAA0B,CAAC;AACzD,WAAW,uCAAkB,CAAC;AAC9B;AACA;AACA,GAAG;AACH,SAAS,6CAAyB,CAAC;AACnC;AACA,SAAS,6CAAgC,CAAC,MAAM,6CAAgC,CAAC;AACjF;AACA,KAAK;AACL,SAAS,6CAAgC,CAAC,GAAG,6CAAgC,CAAC;AAC9E;AACA,KAAK;AACL,WAAW,sCAAyB,CAAC;AACrC;AACA,KAAK;AACL,WAAW,6CAAgC,CAAC;AAC5C;AACA;AACA,GAAG;AACH,SAAS,6CAAyB,CAAC,GAAG,mDAA0B,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAyB,CAAC;AACrC;AACA;AACA,GAAG;AACH,SAAS,2CAAuB,CAAC;AACjC;AACA;AACA,SAAS,6CAAgC,CAAC,MAAM,6CAAgC,CAAC;AACjF;AACA,KAAK;AACL,SAAS,6CAAgC,CAAC,GAAG,6CAAgC,CAAC;AAC9E;AACA,KAAK;AACL,WAAW,6CAAwB,CAAC;AACpC;AACA,KAAK;AACL,WAAW,6CAAgC,CAAC;AAC5C;AACA;AACA,GAAG;AACH,SAAS,2CAAuB,CAAC,GAAG,mDAA0B,CAAC;AAC/D;AACA,WAAW,6CAAwB,CAAC;AACpC;AACA;AACA,GAAG;AACH,SAAS,uDAA4B,CAAC;AACtC;AACA,GAAG;AACH,SAAS,2CAAuB,CAAC,GAAG,uDAA4B,CAAC;AACjE;AACA;AACA,WAAW,sCAAyB,CAAC;AACrC;AACA;AACA;AACA,GAAG;AACH,SAAS,2CAAuB,CAAC,GAAG,uDAA4B,CAAC,GAAG,mDAA0B,CAAC;AAC/F,WAAW,sCAAyB,CAAC;AACrC;AACA;AACA;AACA,GAAG;AACH,SAAS,sCAAyB,CAAC,IAAI,8BAAQ;AAC/C;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC;AACD,iCAAiC,0BAAM;AACvC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED,mCAAmC,0BAAM,CAAC,yBAAU;AACpD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD,mCAAmC,0BAAM,CAAC,yBAAU;AACpD;AACA;AACA;AACA;AACA,GAAG,aAAa,8BAAQ,GAAG;AAC3B,CAAC;AACD;AACA,CAAC,KAAK,8BAAQ;AACd;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD,2BAA2B,0BAAM,CAAC,qBAAM;AACxC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,aAAa,uCAA0B,CAAC;AACxC,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,8BAAQ;AACd;AACA,CAAC;AACD;AACA,CAAC;AACD,0BAA0B,0BAAM,CAAC,oBAAK;AACtC;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC,KAAK,8BAAQ,GAAG;AACjB;AACA,CAAC;AACD,4BAA4B,0BAAM;AAClC;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD,8BAA8B,0BAAM;AACpC;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD,4BAA4B,0BAAM;AAClC;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uCAA0B,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,wCAA2B,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,UAAU,6CAAgC,CAAC;AAC3C;AACA,KAAK;AACL;AACA,4CAA4C,wCAAwC,IAAI,0CAA0C,KAAK,kCAAK;AAC5I,YAAY,wCAA2B,CAAC;AACxC,8CAA8C,wCAAwC,SAAS,2CAA2C,IAAI,uCAAuC,MAAM,kCAAK;AAChM;AACA;AACA;AACA;AACA,OAAO;AACP,YAAY,6CAAgC,CAAC;AAC7C,8CAA8C,wCAAwC,SAAS,2CAA2C,IAAI,uCAAuC,MAAM,kCAAK;AAChM;AACA;AACA;AACA,CAAC;AACD,+BAA+B,0BAAM,CAAC,2BAAa;AACnD;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD,4BAA4B,0BAAM;AAClC;AACA;AACA;AACA,CAAC;AACD;AACA,SAAS,uCAA0B,CAAC;AACpC;AACA;AACA,CAAC;AAC8B;AAC/B,kCAAkC,gBAAgB;AAClD;AACA,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,mBAAI,CAAC,oBAAS;AACzE;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAK;AAC5B,wBAAwB,qBAAM;AAC9B,2EAA2E,mBAAI,CAAC,4BAAiB,IAAI;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B,QAAQ,qBAAS;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Clear.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Done.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/FileCopy.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/ReportProblem.js","webpack://jacdac-docs/./node_modules/@mui/material/Divider/dividerClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/ListItemText/listItemTextClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/MenuItem/menuItemClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/MenuItem/MenuItem.js","webpack://jacdac-docs/./node_modules/@mui/material/TextField/textFieldClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/TextField/TextField.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/semver.ts","webpack://jacdac-docs/./src/components/AddServiceIconButton.tsx","webpack://jacdac-docs/./src/components/devices/useDeviceSpecifications.ts","webpack://jacdac-docs/./src/components/enclosure/ec30.ts","webpack://jacdac-docs/./src/components/hooks/useIdleCallback.ts","webpack://jacdac-docs/./src/components/firmware/useFirmwareBlobs.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/components/ui/CopyButton.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/useBlobCanvas.ts","webpack://jacdac-docs/./src/components/ui/ImageImportCanvas.tsx","webpack://jacdac-docs/./node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","webpack://jacdac-docs/./node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/ListSubheader/ListSubheader.js","webpack://jacdac-docs/./node_modules/@mui/material/Autocomplete/autocompleteClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/Autocomplete/Autocomplete.js","webpack://jacdac-docs/./src/pages/tools/device-registration.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4 6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'ReportProblem');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","export interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nexport function versionTryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m =\n        /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n            v,\n        )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = versionTryParse(a)\n    const bb = versionTryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import React, { useMemo, useState } from \"react\"\nimport { Menu, MenuItem, Typography } from \"@mui/material\"\nimport {\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../../jacdac-ts/src/jdom/spec\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@mui/icons-material/Add\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport { useId } from \"react\"\nimport { SRV_DEVICE_SCRIPT_MANAGER } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function AddServiceIconButton(props: {\n    onAdd: (service: jdspec.ServiceSpec) => void\n    serviceFilter?: (service: jdspec.ServiceSpec) => boolean\n    serviceSorter?: (\n        left: jdspec.ServiceSpec,\n        right: jdspec.ServiceSpec\n    ) => number\n    error?: string\n    children?: JSX.Element | JSX.Element[]\n}) {\n    const { error, onAdd, children, serviceFilter, serviceSorter } = props\n    const [servicesAnchorEl, setServicesAnchorEl] =\n        useState<null | HTMLElement>(null)\n    const servicesMenuId = useId()\n    const services = useMemo(() => {\n        let res = serviceSpecifications()\n            .filter(\n                srv =>\n                    srv.classIdentifier === SRV_DEVICE_SCRIPT_MANAGER ||\n                    !isInfrastructure(srv)\n            )\n            .filter(srv => !serviceFilter || serviceFilter(srv))\n        if (serviceSorter) res = res.sort(serviceSorter)\n        return res\n    }, [serviceFilter])\n\n    const handleServiceAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setServicesAnchorEl(event.currentTarget)\n    }\n    const handleServiceAddClose = (id: number) => () => {\n        setServicesAnchorEl(null)\n        if (id !== undefined) {\n            const srv = serviceSpecificationFromClassIdentifier(id)\n            onAdd(srv)\n        }\n    }\n\n    return (\n        <>\n            <IconButtonWithTooltip\n                title=\"Add a service\"\n                aria-controls={servicesMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleServiceAddClick}\n            >\n                {children || <AddIcon />}\n            </IconButtonWithTooltip>\n            <Menu\n                id={servicesMenuId}\n                anchorEl={servicesAnchorEl}\n                keepMounted\n                open={Boolean(servicesAnchorEl)}\n                onClose={handleServiceAddClose(undefined)}\n            >\n                {services.map(srv => (\n                    <MenuItem\n                        key={srv.classIdentifier}\n                        value={srv.classIdentifier.toString(16)}\n                        onClick={handleServiceAddClose(srv.classIdentifier)}\n                    >\n                        {srv.name}\n                    </MenuItem>\n                ))}\n            </Menu>\n            <Typography\n                variant=\"caption\"\n                color={error ? \"error\" : \"inherit\"}\n                component=\"div\"\n            >\n                {error || \"Select one or more services.\"}\n            </Typography>\n        </>\n    )\n}\n","import { DeviceSpecificationOptions } from \"../../../jacdac-ts/src/jdom/catalog\"\nimport { arrayEq } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useChange from \"../../jacdac/useChange\"\nimport useDeviceCatalog from \"./useDeviceCatalog\"\n\nexport default function useDeviceSpecifications(\n    options?: DeviceSpecificationOptions\n) {\n    const catalog = useDeviceCatalog()\n    const specifications = useChange(\n        catalog,\n        _ => _?.specifications(options),\n        [JSON.stringify(options)],\n        (a, b) => arrayEq(a, b, (l, r) => l.id === r.id)\n    )\n    return specifications\n}\n","import type {\n    EnclosureModel,\n    EnclosureOptions,\n} from \"../../workers/cad/dist/node_modules/enclosurecad\"\n\nexport const DEFAULT_OPTIONS: EnclosureOptions = {\n    legs: {\n        type: \"well\",\n    },\n    cover: {},\n}\n\nexport function isEC30(shape: jdspec.Shape) {\n    return typeof shape === \"string\" && /^ec30_/.test(shape)\n}\n\nexport function toEC30(gridWidth: number, gridHeight: number, connectors = \"\") {\n    return `ec30_${gridWidth}x${gridHeight}_${connectors}`\n}\n\nexport function generateEC30EnclosureModel(\n    gridWidth: number,\n    gridHeight: number,\n    connectors = \"\",\n    depth = 6\n): EnclosureModel {\n    const width = gridWidth * 10\n    const height = gridHeight * 10\n    const c = 8\n    const boxWidth = width + c\n    const boxHeight = height + c\n    return {\n        name: `${width}x${height}`,\n        grid: {\n            width: gridWidth,\n            height: gridHeight,\n            connectors,\n        },\n        box: {\n            width: boxWidth,\n            height: boxHeight,\n            depth,\n        },\n        rings: [\n            {\n                x: width >> 1,\n                y: height >> 1,\n            },\n            {\n                x: width >> 1,\n                y: -(height >> 1),\n            },\n            {\n                x: -(width >> 1),\n                y: -(height >> 1),\n            },\n            {\n                x: -(width >> 1),\n                y: height >> 1,\n            },\n        ],\n        components: [\n            {\n                x: -(width >> 1) + 1.5,\n                y: 0,\n                type: \"led\",\n            },\n            {\n                x: (width >> 1) - 1.5,\n                y: 0,\n                type: \"led\",\n            },\n            {\n                x: 0,\n                y: -(height >> 1) + 1.5,\n                type: \"led\",\n            },\n            {\n                x: 0,\n                y: (height >> 1) - 1.5,\n                type: \"led\",\n            },\n        ],\n        connectors: [\n            {\n                x: 0,\n                y: -(width >> 1) + 2,\n                dir: \"bottom\",\n                type: \"jacdac\",\n            },\n            {\n                x: 0,\n                y: (width >> 1) - 2,\n                dir: \"top\",\n                type: \"jacdac\",\n            },\n            {\n                x: -(width >> 1) + 2,\n                y: 0,\n                dir: \"left\",\n                type: \"jacdac\",\n            },\n            {\n                x: (width >> 1) - 2,\n                y: 0,\n                dir: \"right\",\n                type: \"jacdac\",\n            },\n        ],\n    }\n}\n\nexport function shapeToEC30(shape: jdspec.Shape, depth = 7) {\n    if (typeof shape === \"string\") {\n        const m = /^ec30_(\\d+)x(\\d+)_([lrup\\d]+)$/.exec(shape)\n        if (m) {\n            const w = Number(m[1])\n            const h = Number(m[2])\n            const c = m[3]\n            return generateEC30EnclosureModel(w, h, c, depth)\n        }\n    }\n    return undefined\n}\n","import { DependencyList, useEffect } from \"react\"\n\nexport default function useIdleCallback(\n    cb: () => void,\n    timeout: number,\n    deps?: DependencyList\n) {\n    useEffect(() => {\n        if (typeof window === \"undefined\" || !cb) return\n\n        if (\"requestIdleCallback\" in window) {\n            const id = window.requestIdleCallback(cb, { timeout })\n            return () => window.cancelIdleCallback(id)\n        } else {\n            const id = setTimeout(cb, timeout)\n            return () => clearTimeout(id)\n        }\n    }, [cb, timeout, ...(deps || [])])\n}\n","import { useCallback, useContext, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    FirmwareBlob,\n    parseFirmwareFile,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\nimport { useChangeAsync } from \"../../jacdac/useChange\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    fetchLatestFirmwareRelease,\n    fetchFirmwareReleaseBinary,\n} from \"../github\"\nimport useIdleCallback from \"../hooks/useIdleCallback\"\nimport useMounted from \"../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport { prettyDuration } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\n\nexport default function useFirmwareBlobs() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { trackEvent } = useAnalytics()\n    const [throttled, setThrottled] = useState(false)\n    const mounted = useMounted()\n    const firmwares = db?.firmwares\n    const specifications = useDeviceSpecifications()\n\n    const loadFirmwares = useCallback(async () => {\n        const names = await firmwares?.list()\n        if (!names) return\n\n        const slugs = unique(\n            specifications\n                .filter(spec => !!spec?.productIdentifiers?.length) // needs some product identifiers\n                .map(spec => spec.repo)\n                .filter(repo => /^https:\\/\\/github.com\\//.test(repo))\n                .map(repo => repo.substring(\"https://github.com/\".length))\n        )\n        //console.debug(`firmware: found ${slugs.join(\", \")}`)\n        for (const slug of slugs) {\n            const fw = await firmwares.get(slug)\n            if (fw) {\n                const { time } = fw\n                const age = Date.now() - time\n                //console.debug(`firmware: ${slug} age ${prettyDuration(age)}`)\n                if (age < 3600_000) {\n                    // console.debug(`firmware: skipping fresh firmware ${slug}`)\n                    continue\n                }\n            }\n            console.debug(`firmware: fetch latest release of ${slug}`)\n            const { status, release } = await fetchLatestFirmwareRelease(slug, {\n                ignoreThrottled: true,\n            })\n            trackEvent(\"github.fetch\", { status, slug })\n            if (status === 403) {\n                trackEvent(\"github.fetch.throttled\", { repo: slug })\n                if (mounted()) setThrottled(true)\n            }\n            if (!release?.version) {\n                trackEvent(\"github.fetch.notfound\", { repo: slug })\n                console.warn(`firmware: release not found`)\n                return\n            }\n            setThrottled(false)\n            //console.debug(\n            //    `firmware: fetch binary release ${slug} ${release.version}`\n            //)\n            const firmware = await fetchFirmwareReleaseBinary(\n                slug,\n                release.version\n            )\n            if (firmware) {\n                console.debug(\n                    `firmware: binary release ${slug} ${release.version} downloaded`\n                )\n                firmwares.set(slug, { time: Date.now(), firmware })\n            }\n            // throttle github queries\n            await bus.delay(5000)\n        }\n    }, [db, firmwares, throttled])\n    // reload firmwares\n    useIdleCallback(\n        () => {\n            try {\n                loadFirmwares()\n            } catch (e) {\n                console.debug(e)\n            }\n        },\n        5000,\n        [db, firmwares]\n    )\n    // update bus with info on changes\n    useChangeAsync(\n        firmwares,\n        async fw => {\n            const names = await fw?.list()\n            const uf2s: FirmwareBlob[] = []\n            if (names?.length) {\n                for (const name of names) {\n                    const { firmware } = (await fw.get(name)) || {}\n                    if (firmware) {\n                        const uf2Blobs = await parseFirmwareFile(firmware, name)\n                        uf2Blobs?.forEach(uf2Blob => {\n                            uf2s.push(uf2Blob)\n                        })\n                    }\n                }\n            }\n            bus.firmwareBlobs = uf2s\n        },\n        []\n    )\n\n    return { throttled }\n}\n\nexport function useFirmwareBlob(repoSlug: string) {\n    repoSlug = repoSlug?.replace(/^https:\\/\\/github\\.com\\//i, \"\")\n    const { db } = useContext<DbContextProps>(DbContext)\n    const firmwares = db?.firmwares\n\n    const blobs = useChangeAsync(\n        firmwares,\n        async () => {\n            if (!repoSlug) return undefined\n\n            const { firmware } = (await firmwares?.get(repoSlug)) || {}\n            if (!firmware) {\n                return undefined\n            } else {\n                const uf2Blobs = await parseFirmwareFile(firmware, repoSlug)\n                return uf2Blobs\n            }\n        },\n        [repoSlug]\n    )\n\n    const setFirmwareFile = async (tag: string, f: Blob) => {\n        if (!f) await firmwares?.set(repoSlug, undefined)\n        else await firmwares?.set(repoSlug, { time: Date.now(), firmware: f })\n    }\n\n    return {\n        firmwareBlobs: blobs,\n        setFirmwareFile,\n    }\n}\n","import { semverCmp } from \"../../jacdac-ts/src/jdom/semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nexport interface GithubRelease {\n    url: string\n    tag_name: string\n    name: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    if (!slug) return {}\n    const cleaned = slug\n        .replace(/^https:\\/\\/github.com\\//, \"\")\n        .replace(/\\/tree\\/master/, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        owner: parts[0],\n        name: parts[1],\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const u = (url || \"\").replace(/\\/tree\\/master/, \"\")\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(u)\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<{\n    status: number\n    release?: GithubFirmwareRelease\n}> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    const { status } = resp\n    switch (status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return { release: releases[0], status }\n        }\n        case 404:\n            // unknow repo or no access\n            return { status }\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return { status }\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport function rawUrl(slug: string, branch: string, path: string) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const url = `https://raw.githubusercontent.com/${[\n        repoPath,\n        branch,\n        folder,\n        path,\n    ]\n        .filter(p => !!p)\n        .join(\"/\")}`\n    return url\n}\n\nexport async function fetchFirmwareReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(path ? `${ROOT}${path}` : undefined)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = repoPath ? `repos/${repoPath}` : undefined\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}/releases/latest`\n    const res = useFetchApi<GithubRelease>(path)\n    return res\n}\n\nexport function useLatestReleaseAsset(url: string) {\n    const [, slug, filename] =\n        /^https:\\/\\/github.com\\/(.+)\\/releases\\/latest\\/download\\/(.+)$/i.exec(\n            url\n        ) || []\n    //console.log(`asset slug`, { url, slug })\n    if (!slug) return { status: 404 }\n    const { status, response } = useLatestRelease(slug)\n    if (status === 200 && response) {\n        const { tag_name, name } = response\n        return {\n            name,\n            version: tag_name,\n            assertUrl: `https://github.com/${slug}/releases/download/${tag_name}/${filename}`,\n        }\n    } else return {}\n}\n\nexport function useLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    const resp = useLatestFirmwareReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestFirmwareReleases(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import React, { ReactNode, useState } from \"react\"\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\"\nimport DoneIcon from \"@mui/icons-material/Done\"\nimport ReportProblemIcon from \"@mui/icons-material/ReportProblem\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport { Button } from \"@mui/material\"\nimport useMounted from \"../hooks/useMounted\"\nimport { delay } from \"../../../jacdac-ts/src/jdom/utils\"\n\nexport default function CopyButton(props: {\n    label?: string\n    title?: string\n    onCopy?: () => Promise<string | HTMLCanvasElement>\n    text?: string\n    className?: string\n    size?: \"small\"\n    variant?: \"outlined\" | \"contained\"\n    disabled?: boolean\n    copyIcon?: ReactNode\n    color?: \"success\" | \"error\"\n}) {\n    const {\n        label,\n        text,\n        title = \"copy data to clipboard\",\n        disabled,\n        onCopy,\n        copyIcon,\n        ...rest\n    } = props\n    const [copied, setCopied] = useState<boolean>(undefined)\n    const mounted = useMounted()\n    const handleClick = async (ev: React.MouseEvent<HTMLButtonElement>) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n\n        try {\n            setCopied(null)\n            const copied = text || (await onCopy?.())\n            if (typeof copied === \"string\") {\n                const c = copied as string\n                await navigator.clipboard.writeText(c)\n            } else {\n                const canvas = copied as HTMLCanvasElement\n                const blob = await new Promise<Blob>(resolve =>\n                    canvas.toBlob(blob => resolve(blob))\n                )\n                const item = new ClipboardItem({ \"image/png\": blob })\n                navigator.clipboard.write([item])\n            }\n            if (mounted()) setCopied(true)\n        } catch (e) {\n            console.debug(e)\n            if (mounted()) setCopied(false)\n        } finally {\n            await delay(2000)\n            if (mounted()) setCopied(undefined)\n        }\n    }\n    const hasCopied = copied !== undefined\n    const buttonText =\n        copied === true\n            ? \"Copied!\"\n            : copied === false\n            ? \"Copy failed\"\n            : label || title || \"copy to clipboard\"\n    return label ? (\n        <Button\n            title={title}\n            disabled={disabled || hasCopied}\n            {...rest}\n            onClick={hasCopied ? undefined : handleClick}\n        >\n            {buttonText}\n        </Button>\n    ) : (\n        <IconButtonWithTooltip\n            trackName=\"ui.copy\"\n            title={buttonText}\n            {...rest}\n            onClick={disabled ? undefined : handleClick}\n        >\n            {copied === true ? (\n                <DoneIcon color=\"success\" />\n            ) : copied === false ? (\n                <ReportProblemIcon />\n            ) : (\n                copyIcon || <FileCopyIcon />\n            )}\n        </IconButtonWithTooltip>\n    )\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React, { ReactNode } from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}hr`,\n    start: `${PREFIX}start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: ReactNode\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n","import { BoxProps, Paper } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function PaperBox(\n    props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps\n) {\n    const { children, padding = 1, elevation = 1, bgcolor, ...others } = props\n    return (\n        <Paper\n            sx={{ mb: 1, bgcolor, p: padding, ...others }}\n            square\n            elevation={elevation}\n        >\n            {children}\n        </Paper>\n    )\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { GridSize } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize\n    md?: GridSize\n    sm?: GridSize\n    lg?: GridSize\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(\n    itemCount?: number\n): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n    const hasDrawer = drawerType !== DrawerType.None\n\n    if (!drawerType && itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2:\n            case 3:\n                return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (hasDrawer) return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else\n        return {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 4,\n            xl: 3,\n        }\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nfunction readBlobToCanvas(\n    blob: Blob,\n    width: number,\n    height: number\n): Promise<HTMLCanvasElement> {\n    return new Promise((resolve, reject) => {\n        const url = URL.createObjectURL(blob)\n        const img = new Image()\n        img.onload = () => {\n            URL.revokeObjectURL(url)\n\n            const cvs = document.createElement(\"canvas\")\n            cvs.width = width\n            cvs.height = height\n            const ctx = cvs.getContext(\"2d\")\n\n            // compute center of image to be copied into canvas\n            const cw = cvs.width\n            const ch = cvs.height\n            const car = cw / ch\n            const iw = img.width\n            const ih = img.height\n            const iar = iw / ih\n            let sx = 0,\n                sy = 0,\n                sw = iw,\n                sh = ih\n\n            //console.log(`image (${iw}x${ih}:${iar}), target (${cw}x${ch}:${car})`)\n            if (iar > car) {\n                const dw = iw * (1 - car / iar)\n                sx = dw >> 1\n                sw = iw - dw\n                //console.log({ dw, sx, sw })\n            } else if (iar < car) {\n                // klip top\n                const dh = ih * (1 - iar / car)\n                sy = dh >> 1\n                sh = ih - dh\n                //console.log({ dh, sy, sh })\n            }\n            //console.log({ sx, sy, sw, sh, cw, ch })\n            ctx.drawImage(img, sx, sy, sw, sh, 0, 0, cw, ch)\n\n            // done\n            resolve(cvs)\n        }\n        img.onerror = () => {\n            // error\n            URL.revokeObjectURL(url)\n            reject(undefined)\n        }\n        img.src = url\n    })\n}\n\nexport default function useBlobCanvas(\n    blob: Blob,\n    width: number,\n    height: number\n) {\n    const [canvas, setCanvas] = useState<HTMLCanvasElement>(undefined)\n    useEffectAsync(async () => {\n        if (!blob) setCanvas(undefined)\n        else {\n            try {\n                const cvs = await readBlobToCanvas(blob, width, height)\n                setCanvas(cvs)\n            } catch (e) {\n                setCanvas(undefined)\n            }\n        }\n    }, [blob, width, height])\n    return canvas\n}\n","import React, { lazy, useEffect, useMemo, useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box } from \"@mui/material\"\nimport { Skeleton } from \"@mui/material\"\nimport useBlobCanvas from \"../useBlobCanvas\"\n\nimport Suspense from \"./Suspense\"\nconst PREFIX = \"ImageImportCanvas\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n    img: `${PREFIX}img`,\n    btn: `${PREFIX}btn`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        position: \"relative\",\n    },\n\n    [`& .${classes.img}`]: {\n        margin: \"auto\",\n        display: \"block\",\n        width: \"100%\",\n    },\n\n    [`& .${classes.btn}`]: {\n        position: \"absolute\",\n        borderRadius: \"6rem\",\n        left: \"calc(50% - 2rem)\",\n        top: \"calc(50% - 2rem)\",\n        background: theme.palette.background.paper,\n    },\n}))\n\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nexport default function ImportImageCanvas(props: {\n    width: number\n    height: number\n    onImageImported?: (cvs: HTMLCanvasElement) => void\n}) {\n    const { width, height, onImageImported } = props\n    const [imageBlob, setImageBlob] = useState<Blob>(undefined)\n    const canvas = useBlobCanvas(imageBlob, width, height)\n    const canvasUrl = useMemo(() => canvas?.toDataURL(\"image/png\"), [canvas])\n\n    const handleFilesUploaded = async (files: File[]) => {\n        const file = files[0]\n        setImageBlob(file)\n    }\n    // notify of new canvas\n    useEffect(() => canvas && onImageImported(canvas), [canvas])\n\n    return (\n        <Root className={classes.root}>\n            <div className={classes.img}>\n                {!canvasUrl && (\n                    <Skeleton\n                        variant=\"rectangular\"\n                        width={\"100%\"}\n                        height={\"18rem\"}\n                    />\n                )}\n                {canvasUrl && (\n                    <img\n                        alt=\"preview\"\n                        src={canvasUrl}\n                        width={\"100%\"}\n                        height={\"100%\"}\n                    />\n                )}\n            </div>\n            <Box className={classes.btn}>\n                <Suspense>\n                    <ImportButton\n                        icon={true}\n                        text=\"Import 4:3 image\"\n                        onFilesUploaded={handleFilesUploaded}\n                        acceptedFiles={[\"image/jpeg\", \"image/png\"]}\n                    />\n                </Suspense>\n            </Box>\n        </Root>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport default function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/combobox/examples/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const checkHighlightedOptionExists = () => {\n    const isSameValue = (value1, value2) => {\n      const label1 = value1 ? getOptionLabel(value1) : '';\n      const label2 = value2 ? getOptionLabel(value2) : '';\n      return label1 === label2;\n    };\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        const previousHighlightedOptionExists = filteredOptions.some(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n        if (previousHighlightedOptionExists) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value hasn't changed\n    // If it exists and the value hasn't changed, return, otherwise continue execution\n    if (checkHighlightedOptionExists()) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox',\n      disabled: disabledProp\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n      className,\n      color = 'default',\n      component = 'li',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel = option => {\n        var _option$label;\n        return (_option$label = option.label) != null ? _option$label : option;\n      },\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    });\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React, { lazy, useMemo, useState } from \"react\"\nimport { Grid, Select, SelectChangeEvent } from \"@mui/material\"\nimport useLocalStorage from \"../../components/hooks/useLocalStorage\"\nimport { clone, unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    Box,\n    Chip,\n    Menu,\n    MenuItem,\n    TextField,\n    Typography,\n    Card,\n    CardActions,\n    Button,\n} from \"@mui/material\"\nimport { ChangeEvent } from \"react\"\nimport {\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PaperBox from \"../../components/ui/PaperBox\"\nimport AddIcon from \"@mui/icons-material/Add\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport { parseRepoUrl } from \"../../components/github\"\nimport {\n    DEVICE_IMAGE_HEIGHT,\n    DEVICE_IMAGE_WIDTH,\n    generateDeviceSpecificationId,\n    normalizeDeviceSpecification,\n} from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ImportImageCanvas from \"../../components/ui/ImageImportCanvas\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Autocomplete } from \"@mui/material\"\nimport { useFirmwareBlob } from \"../../components/firmware/useFirmwareBlobs\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { useId } from \"react\"\nimport AddServiceIconButton from \"../../components/AddServiceIconButton\"\nimport useDevices from \"../../components/hooks/useDevices\"\nimport DeviceCardHeader from \"../../components/devices/DeviceCardHeader\"\nimport Suspense from \"../../components/ui/Suspense\"\nimport { ControlReg } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport Alert from \"../../components/ui/Alert\"\nimport { GithubPullRequestFiles } from \"../../components/buttons/GithubPullRequestButton\"\nimport useDeviceSpecifications from \"../../components/devices/useDeviceSpecifications\"\nimport useDeviceCatalog from \"../../components/devices/useDeviceCatalog\"\nimport GridHeader from \"../../components/ui/GridHeader\"\nimport { JD_SERVICE_INDEX_CTRL } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ClearIcon from \"@mui/icons-material/Clear\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { shapeToEC30 } from \"../../components/enclosure/ec30\"\nimport CopyButton from \"../../components/ui/CopyButton\"\n\nconst GithubPullRequestButton = lazy(\n    () => import(\"../../components/buttons/GithubPullRequestButton\")\n)\nconst EC30Card = lazy(() => import(\"../../components/ec30/EC30Card\"))\n\nconst sides = {\n    l: \"left\",\n    r: \"right\",\n}\n\nfunction useCompanies() {\n    const specifications = useDeviceSpecifications()\n    const companies = unique(specifications.map(dev => dev.company)).sort()\n    return companies\n}\n\nfunction CompanySelect(props: {\n    error?: string\n    onValueChange?: (name: string) => void\n    company: string\n    setCompany: (c: string) => void\n}) {\n    const { company, setCompany, error } = props\n    const companies = useCompanies()\n    const id = useId()\n    const companyId = id + \"-company\"\n\n    const handleChange = (ev: unknown, newValue: string) => setCompany(newValue)\n    const renderInputs = params => (\n        <TextField\n            {...params}\n            error={!!error}\n            label=\"Company*\"\n            helperText={error}\n            variant=\"outlined\"\n        />\n    )\n\n    return (\n        <Autocomplete\n            id={companyId}\n            freeSolo={true}\n            fullWidth={true}\n            includeInputInList\n            autoComplete\n            options={companies}\n            renderInput={renderInputs}\n            inputValue={company}\n            onInputChange={handleChange}\n        />\n    )\n}\n\nexport const frontmatter = {\n    title: \"Device Registration\",\n    description: \"Form to submit a new device for the catalog.\",\n}\nimport CoreHead from \"../../components/shell/Head\"\nimport { withPrefix } from \"gatsby\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/catalog\"\nexport const Head = props => <CoreHead {...props} {...frontmatter} />\n\nexport default function DeviceRegistration() {\n    const [device, setDevice] = useLocalStorage<jdspec.DeviceSpec>(\n        \"jacdac:devicedesigner;2\",\n        {\n            id: \"my-device\",\n            name: \"My device\",\n            services: [],\n            productIdentifiers: [],\n            repo: \"\",\n            version: \"\",\n        } as jdspec.DeviceSpec\n    )\n    const { id, shape, version, company, repo } = device || {}\n    const gridBreakpoints = useGridBreakpoints()\n    const devices = useDevices({\n        announced: true,\n        physical: true,\n        ignoreInfrastructure: true,\n        productIdentifier: true,\n    })\n    const companies = useCompanies()\n    const updateDevice = () => {\n        const dev = clone(device)\n        dev.id = generateDeviceSpecificationId(dev)\n        setDevice(dev)\n    }\n    const [firmwaresAnchorEl, setFirmwaresAnchorEl] =\n        React.useState<null | HTMLElement>(null)\n    const [imageDataURI, setImageDataURI] = useState<string>(undefined)\n    const [comment, setComment] = useState(\"\")\n    const deviceCatalog = useDeviceCatalog()\n    const elid = useId()\n    const nameId = elid + \"-name\"\n    const firmwareMenuId = elid + \"-firmwaremenu\"\n    const repoId = elid + \"-repo\"\n    const identifierId = elid + \"-identifier\"\n    const urlId = elid + \"-url\"\n    const descriptionId = elid + \"-description\"\n    const homepageId = elid + \"-homepage\"\n    const hardwareVersionId = elid + \"-hwversion\"\n    const hardwareDesignId = elid + \"-hwdesign\"\n    const firmwareSourceId = elid + \"-hwsource\"\n    const storeLinkId = elid + \"-store\"\n    const connectorId = elid + \"-connector\"\n    const shapeId = elid + \"-shape\"\n    const commentId = elid + \"-comment\"\n    const specifications = useDeviceSpecifications({\n        includeDeprecated: true,\n        includeExperimental: true,\n    })\n    const handleClear = () => {\n        setDevice({\n            id: \"my-device\",\n            name: \"\",\n            services: [],\n            productIdentifiers: [],\n            repo: \"\",\n        } as jdspec.DeviceSpec)\n        setImageDataURI(undefined)\n        setComment(\"\")\n    }\n    const handleServiceAdd = (srv: jdspec.ServiceSpec) => {\n        console.log(`add`, srv.classIdentifier)\n        device.services.push(srv.classIdentifier)\n        updateDevice()\n    }\n    const companyRepos = useMemo(\n        () =>\n            unique(\n                specifications\n                    .filter(d => d.company === company)\n                    .map(d => d.repo)\n                    .filter(repo => !!repo)\n            ),\n        [device?.company, specifications]\n    )\n    const { firmwareBlobs } = useFirmwareBlob(repo)\n    const variant = \"outlined\"\n    const companyError =\n        company?.length > 64\n            ? \"Company is too long (max 64 characters)\"\n            : undefined\n    const nameError =\n        device.name?.length > 64\n            ? \"Name is too long (max 64 characters)\"\n            : undefined\n    const parsedRepo = parseRepoUrl(device.repo)\n    const githubError =\n        device.repo && !parsedRepo ? \"invalid GitHub repository\" : \"\"\n    const linkError =\n        !device.link || /^https:\\/\\//i.test(device.link)\n            ? \"\"\n            : \"Must be https://...\"\n    const storeLinkError =\n        !device.storeLink ||\n        /^https:\\/\\//i.test(device.storeLink?.[0] as string)\n            ? \"\"\n            : \"Must be https://...\"\n    const idError =\n        !device.id || !device.name\n            ? \"missing identifier\"\n            : specifications.find(dev => dev.id == id)\n            ? \"identifer already used\"\n            : \"\"\n    const imageError = !imageDataURI ? \"missing image\" : \"\"\n    const versionError =\n        version && !/^(v\\d+\\.\\d+(\\.\\d+(\\.\\d+)?)?\\w?)?$/.test(version)\n            ? \"Preferred format is vN.N\"\n            : \"\"\n    const ok =\n        !nameError &&\n        !linkError &&\n        !idError &&\n        !imageError &&\n        !companyError &&\n        !versionError\n\n    const route = identifierToUrlPath(id)\n    const modulePath = ok && `devices/${route}.json`\n    const imagePath = ok && `devices/${route}.jpg`\n    const model = useMemo(() => shapeToEC30(shape), [shape])\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.name = ev.target.value\n        updateDevice()\n    }\n    const handleRepoChange = (ev: unknown, newValue: string) => {\n        device.repo = newValue\n        updateDevice()\n    }\n    const handleLinkChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.link = ev.target.value\n        updateDevice()\n    }\n    const handleDescriptionChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.description = ev.target.value\n        updateDevice()\n    }\n    const handleDeleteService = (i: number) => () => {\n        device.services.splice(i, 1)\n        updateDevice()\n    }\n    const handleDeleteFirmware = (i: number) => () => {\n        device.productIdentifiers.splice(i, 1)\n        updateDevice()\n    }\n    const handleVersion = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.version = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleStoreLinkChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        const v = ev.target.value?.trim()\n        device.storeLink = v ? [v] : undefined\n        updateDevice()\n    }\n    const handleShapeChange = (\n        ev: SelectChangeEvent<jdspec.ShapeWellKnown>\n    ) => {\n        device.shape = ev.target.value?.trim() as jdspec.ShapeWellKnown\n        updateDevice()\n    }\n    const handleFirmwareAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setFirmwaresAnchorEl(event.currentTarget)\n        updateDevice()\n    }\n    const handleProductIdentifierAddRandomClick = () => {\n        if (!device.productIdentifiers) device.productIdentifiers = []\n        device.productIdentifiers.push(\n            parseInt(deviceCatalog.uniqueFirmwareId(), 16)\n        )\n        updateDevice()\n    }\n    const handleFirmwareAddClose = (blob: FirmwareBlob) => () => {\n        setFirmwaresAnchorEl(null)\n        const id = blob?.productIdentifier\n        if (id !== undefined) {\n            device.productIdentifiers.push(id)\n            device.name = blob.name\n            updateDevice()\n        }\n    }\n    const handleImageImported = (cvs: HTMLCanvasElement) => {\n        const url = cvs.toDataURL(\"image/jpeg\", 100)\n        setImageDataURI(url)\n    }\n    const handleCompanyChanged = (value: string) => {\n        device.company = value\n        updateDevice()\n    }\n    const handleFirmwareSourceChanged = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.firmwareSource = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleHardwareDesignChanged = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.hardwareDesign = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleConnectorChanged = (\n        ev: SelectChangeEvent<jdspec.JacdacConnectorType>\n    ) => {\n        device.connector = ev.target.value as jdspec.JacdacConnectorType\n        if (device.connector === \"edgeConsumer\") delete device.connector\n        updateDevice()\n    }\n    const handleCommentChanged = (ev: ChangeEvent<HTMLInputElement>) => {\n        setComment(ev.target.value || \"\")\n    }\n    const renderRepoInput = params => (\n        <TextField\n            {...params}\n            error={!!githubError}\n            type=\"url\"\n            label=\"Firmware repository\"\n            helperText={\n                githubError ||\n                \"GitHub Repository hosting the firmware binaries.\"\n            }\n            variant=\"outlined\"\n        />\n    )\n    const handleImportDevice = (dev: JDDevice) => async () => {\n        const d: jdspec.DeviceSpec = {\n            id: \"my-device\",\n            name: \"My device\",\n            company: \"\",\n            services: [],\n            productIdentifiers: [],\n            repo: \"\",\n            description: \"\",\n        }\n\n        const controlService = dev.service(JD_SERVICE_INDEX_CTRL)\n        const descrReg = controlService.register(ControlReg.DeviceDescription)\n        await descrReg.refresh()\n\n        const fw = await dev.resolveProductIdentifier()\n        if (fw) d.productIdentifiers = [fw]\n        else d.productIdentifiers = []\n        d.services = dev\n            .services()\n            .filter(srv => !isInfrastructure(srv.specification))\n            .map(srv => srv.serviceClass)\n        const description = descrReg.stringValue || \"\"\n        const m = /^(.+)\\s+(\\d+)\\s+(v[.\\w]+)$/.exec(description)\n        const company = m && companies.find(c => m[1].startsWith(c))\n        if (company) {\n            d.designIdentifier = m[2]\n            d.version = m[3]\n            d.company = company\n            d.name = m[1].slice(company.length + 1).trim()\n        } else {\n            const ds = description.split(/\\s+/g)\n            d.company = ds.shift() || \"\"\n            d.name = ds.join(\" \")\n            d.name?.replace(/\\wv\\d+.\\d+\\w/, m => {\n                device.version = m\n                return \"\"\n            })\n        }\n\n        setDevice(d)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const files = useMemo<GithubPullRequestFiles>(\n        () =>\n            modulePath && {\n                [modulePath]: JSON.stringify(\n                    normalizeDeviceSpecification(device),\n                    null,\n                    2\n                ),\n                [imagePath]: {\n                    content: imageDataURI?.slice(imageDataURI?.indexOf(\",\")),\n                    encoding: \"base64\",\n                },\n            },\n        [modulePath, imagePath, imageDataURI, JSON.stringify(device)]\n    )\n\n    return (\n        <>\n            <h1>\n                Device Registration\n                <IconButtonWithTooltip\n                    sx={{ ml: 1 }}\n                    title=\"New Device\"\n                    onClick={handleClear}\n                >\n                    <ClearIcon />\n                </IconButtonWithTooltip>\n            </h1>\n            <p>\n                Fill in <b>Device Name</b>, <b>Company</b> and <b>Version</b> to\n                uniquely identify your device. Fill in the additional fields\n                with information about your devices and click on{\" \"}\n                <b>Start Registration</b> to request an entry in the{\" \"}\n                <Link target=\"_blank\" to=\"/devices/\" underline=\"hover\">\n                    Device Catalog\n                </Link>\n                .\n            </p>\n            <Grid container spacing={3}>\n                {devices.map(dev => (\n                    <Grid item key={dev.id} {...gridBreakpoints}>\n                        <Card>\n                            <DeviceCardHeader\n                                device={dev}\n                                showAvatar={true}\n                                showDescription={true}\n                            />\n                            <CardActions>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={handleImportDevice(dev)}\n                                >\n                                    Import\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n                <Grid item xs={12}>\n                    <TextField\n                        id={nameId}\n                        required\n                        error={!!nameError}\n                        helperText={nameError}\n                        fullWidth={true}\n                        label=\"Device Name\"\n                        placeholder=\"My device\"\n                        value={device.name || \"\"}\n                        onChange={handleNameChange}\n                        variant={variant}\n                    />\n                    <Typography variant=\"caption\">\n                        Name of the device, without company or version. The name\n                        will be used to generate the device identifier.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <CompanySelect\n                        company={device?.company || \"\"}\n                        error={companyError}\n                        setCompany={handleCompanyChanged}\n                    />\n                    <Typography variant=\"caption\">\n                        Name of the company manufacturing this device. The\n                        company name will be used to generate the device\n                        identifier.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={hardwareVersionId}\n                        required\n                        fullWidth={true}\n                        error={!!versionError}\n                        helperText={versionError}\n                        label=\"Version\"\n                        value={device?.version || \"\"}\n                        onChange={handleVersion}\n                        variant={variant}\n                    />\n                    <Typography variant=\"caption\">\n                        Revision identifier for this hardware design using\n                        semver format (v1.0, v1.1, ...).\n                    </Typography>\n                </Grid>\n                <GridHeader title=\"Auto-generated Links\" />\n                <Grid item xs={12}>\n                    <TextField\n                        id={identifierId}\n                        disabled\n                        error={!!idError}\n                        helperText={idError}\n                        fullWidth={true}\n                        label=\"Device Identifier\"\n                        variant={variant}\n                        value={device.id || \"\"}\n                    />\n                    <Typography variant=\"caption\">\n                        This generated identifer is a URL friendly string\n                        created from your company and product name.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={urlId}\n                        disabled\n                        error={!!idError}\n                        helperText={idError}\n                        fullWidth={true}\n                        label=\"Device Catalog URL\"\n                        variant={variant}\n                        value={`https://microsoft.github.io/jacdac-docs/devices/${identifierToUrlPath(\n                            device.id\n                        )}/`}\n                    />\n                    <Typography variant=\"caption\">\n                        The auto-generated URL that links to the page for this\n                        device in the Device Catalog. If this URL is too long\n                        for a QR Code, use a URL shortening service. To generate\n                        a QR Code for your PCB, use the{\" \"}\n                        <Link target=\"_blank\" to=\"/tools/device-qr-code/\">\n                            Device QR Code Generator\n                        </Link>{\" \"}\n                        page.\n                    </Typography>\n                </Grid>\n\n                <GridHeader title=\"Services\" />\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography>Product Identifiers</Typography>\n                        {device.productIdentifiers?.map((id, i) => {\n                            const blob = firmwareBlobs?.find(\n                                b => b.productIdentifier == id\n                            )\n                            return (\n                                <Box\n                                    component=\"span\"\n                                    ml={0.5}\n                                    mb={0.5}\n                                    key={id}\n                                >\n                                    <Chip\n                                        label={\n                                            blob\n                                                ? `${\n                                                      blob.name\n                                                  } (0x${id.toString(16)})`\n                                                : `0x${id.toString(16)}`\n                                        }\n                                        icon={\n                                            <CopyButton\n                                                size=\"small\"\n                                                text={`0x${id.toString(16)}`}\n                                            />\n                                        }\n                                        onDelete={handleDeleteFirmware(i)}\n                                    />\n                                </Box>\n                            )\n                        })}\n                        <IconButtonWithTooltip\n                            title=\"Add random product identifier\"\n                            onClick={handleProductIdentifierAddRandomClick}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                        {firmwareBlobs && (\n                            <IconButtonWithTooltip\n                                title=\"Add product identifier from repository\"\n                                aria-controls={firmwareMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleFirmwareAddClick}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <Menu\n                            id={firmwareMenuId}\n                            anchorEl={firmwaresAnchorEl}\n                            keepMounted\n                            open={Boolean(firmwaresAnchorEl)}\n                            onClose={handleFirmwareAddClose(undefined)}\n                        >\n                            {firmwareBlobs?.map(blob => (\n                                <MenuItem\n                                    key={blob.productIdentifier}\n                                    value={blob.productIdentifier.toString(16)}\n                                    onClick={handleFirmwareAddClose(blob)}\n                                >\n                                    {blob.name}\n                                    <Typography\n                                        variant=\"caption\"\n                                        component=\"span\"\n                                    >\n                                        {blob.version}\n                                    </Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                        <Typography variant=\"caption\" component=\"div\">\n                            Product identifiers uniquely identify your hardware\n                            on the Jacdac bus. Each revision of your hardware\n                            should have a different identifier.\n                        </Typography>\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography color=\"inherit\">Services</Typography>\n                        {device.services?.map((id, i) => (\n                            <Box component=\"span\" m={0.5} key={`${id}.${i}`}>\n                                <Chip\n                                    label={\n                                        serviceSpecificationFromClassIdentifier(\n                                            id\n                                        )?.name || id\n                                    }\n                                    onDelete={handleDeleteService(i)}\n                                />\n                            </Box>\n                        ))}\n                        <AddServiceIconButton onAdd={handleServiceAdd} />\n                    </PaperBox>\n                </Grid>\n                <GridHeader title=\"PCB\" />\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography color=\"inherit\">\n                            Jacdac Connector\n                        </Typography>\n                        <Select\n                            id={connectorId}\n                            fullWidth={true}\n                            size=\"small\"\n                            value={device.connector || \"edgeConsumer\"}\n                            onChange={handleConnectorChanged}\n                        >\n                            <MenuItem value=\"noConnector\">\n                                No PCB edge connector\n                            </MenuItem>\n                            <MenuItem value=\"edgeIndependent\">\n                                PCB edge connector, independently powered\n                            </MenuItem>\n                            <MenuItem value=\"edgeConsumer\">\n                                PCB edge connector, consumer - power always\n                                taken from Jacdac bus\n                            </MenuItem>\n                            <MenuItem value=\"edgeLowCurrentProvider\">\n                                PCB edge connector, low current provider - power\n                                always provided to the Jacdac bus\n                            </MenuItem>\n                            <MenuItem value=\"edgeHighCurrentProvider\">\n                                PCB edge connector, high current provider\n                            </MenuItem>\n                            <MenuItem value=\"edgeLowCurrentProviderConsumer\">\n                                PCB edge connector, low current provider or\n                                consumer\n                            </MenuItem>\n                            <MenuItem value=\"edgeHighCurrentProviderConsumer\">\n                                PCB edge connector, high current provider or\n                                consumer\n                            </MenuItem>\n                            <MenuItem value=\"edgePassive\">\n                                PCB edge connector, passive - passthrough for\n                                power and signal\n                            </MenuItem>\n                            <MenuItem value=\"grove\">\n                                Grove connector\n                            </MenuItem>\n                            <MenuItem value=\"qwiic\">\n                                Qwiic connector\n                            </MenuItem>\n                        </Select>\n                        <Typography variant=\"caption\" component=\"div\">\n                            Choose the type of Jacdac connector present on the\n                            hardware, and the type of type of{\" \"}\n                            <Link\n                                target=\"_blank\"\n                                to=\"/ddk/design/#power-supply-sharing\"\n                            >\n                                power supply sharing\n                            </Link>\n                            .\n                        </Typography>\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography color=\"inherit\">PCB Form factor</Typography>\n                        <Select\n                            id={shapeId}\n                            fullWidth={true}\n                            size=\"small\"\n                            value={device.shape || \"\"}\n                            onChange={handleShapeChange}\n                        >\n                            <MenuItem value=\"\">Unknown shape</MenuItem>\n                            {[\n                                \"ec30_1x2_l\",\n                                \"ec30_2x2_l\",\n                                \"ec30_2x2_lr\",\n                                \"ec30_3x2_l\",\n                                \"ec30_3x2_r\",\n                                \"ec30_3x2_lr\",\n                                \"ec30_3x3_l\",\n                                \"ec30_3x3_lr\",\n                                \"ec30_4x2_l\",\n                                \"ec30_4x2_lr\",\n                                \"ec30_4x3_lr\",\n                                \"ec30_5x2_l\",\n                                \"ec30_5x2_lr\",\n                                \"ec30_5x3_lr\",\n                                \"ec30_6x2_l\",\n                                \"ec30_6x2_lr\",\n                                \"ec30_6x3_lr\",\n                            ]\n                                .map(s => /^ec30_(\\d+)x(\\d+)_([lr]+)$/.exec(s))\n                                .map(([n, x, y, lr]) => (\n                                    <MenuItem key={n} value={n}>\n                                        EC30 grid, {x}0mm x {y}0mm, Jacdac edge\n                                        connector on the{\" \"}\n                                        {lr\n                                            .split(\"\")\n                                            .map(side => sides[side])\n                                            .join(\", \")}\n                                    </MenuItem>\n                                ))}\n                        </Select>\n                        <Typography variant=\"caption\" component=\"div\">\n                            Choose the form factor of the PCB if applicable.\n                        </Typography>\n                        {model && (\n                            <Suspense>\n                                <EC30Card model={model} />\n                            </Suspense>\n                        )}\n                    </PaperBox>\n                </Grid>\n                <GridHeader title=\"Catalog\" />\n                <Grid item xs={12}>\n                    <TextField\n                        id={descriptionId}\n                        fullWidth={true}\n                        required\n                        label=\"Description\"\n                        multiline={true}\n                        rows={4}\n                        value={device.description || \"\"}\n                        onChange={handleDescriptionChange}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={homepageId}\n                        label=\"Home page URL\"\n                        error={!!linkError}\n                        helperText={linkError}\n                        fullWidth={true}\n                        placeholder=\"https://...\"\n                        value={device.link || \"\"}\n                        onChange={handleLinkChange}\n                        variant={variant}\n                        type=\"url\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={storeLinkId}\n                        label=\"Store URL\"\n                        error={!!storeLinkError}\n                        helperText={\n                            \"URL where the device can be purchased\" ||\n                            storeLinkError\n                        }\n                        fullWidth={true}\n                        placeholder=\"https://...\"\n                        value={device.storeLink?.[0] || \"\"}\n                        onChange={handleStoreLinkChange}\n                        variant={variant}\n                        type=\"url\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox>\n                        <Typography>Image</Typography>\n                        <ImportImageCanvas\n                            width={DEVICE_IMAGE_WIDTH}\n                            height={DEVICE_IMAGE_HEIGHT}\n                            onImageImported={handleImageImported}\n                        />\n                        <Typography variant=\"caption\" component=\"div\">\n                            {`Import an image of the device; must be at least ${DEVICE_IMAGE_WIDTH}x${DEVICE_IMAGE_HEIGHT}, device must be fully visible on a white background; 45 degree isometric perspective tilting to the right.`}\n                            <a\n                                href={withPrefix(\n                                    \"/templates/jacdac-device-photo-template.pdf\"\n                                )}\n                            >\n                                Download photo template.\n                            </a>\n                        </Typography>\n                        {imageError && (\n                            <Alert severity=\"error\">{imageError}</Alert>\n                        )}\n                    </PaperBox>\n                </Grid>\n                <GridHeader title=\"Firmware and hardware information (optional)\" />\n                <Grid item xs={12}>\n                    <Autocomplete\n                        id={repoId}\n                        freeSolo={true}\n                        autoComplete\n                        placeholder=\"https://github.com/...\"\n                        inputValue={device.repo || \"\"}\n                        onInputChange={handleRepoChange}\n                        options={companyRepos}\n                        renderInput={renderRepoInput}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={firmwareSourceId}\n                        fullWidth={true}\n                        helperText=\"public URL to the firmware sources. If possible, provide a deep link to the relevant source files.\"\n                        label=\"Firmware source repository\"\n                        placeholder=\"https://github.com/...\"\n                        value={device?.firmwareSource || \"\"}\n                        onChange={handleFirmwareSourceChanged}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={hardwareDesignId}\n                        fullWidth={true}\n                        helperText=\"public URL to the repositry of hardware design files. If possible, provide a deep link to the relevant source files.\"\n                        label=\"Hardware design repository\"\n                        placeholder=\"https://github.com/...\"\n                        value={device?.hardwareDesign}\n                        onChange={handleHardwareDesignChanged}\n                        variant={variant}\n                    />\n                </Grid>\n                <GridHeader title=\"Submission\" />\n                <Grid item xs={12}>\n                    <TextField\n                        id={commentId}\n                        fullWidth={true}\n                        helperText=\"Additional comments about the device that will be added to the registration pull request.\"\n                        label=\"Registration Comment\"\n                        value={comment}\n                        onChange={handleCommentChanged}\n                        variant={variant}\n                        multiline={true}\n                        minRows={2}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Suspense>\n                        <GithubPullRequestButton\n                            label={\"start registration\"}\n                            title={`Device: ${device.company} ${device.name} ${device.version}`}\n                            head={`devices/${device.id}`}\n                            description={`This pull request will start the registration of your device in the Jacdac catalog.                            \n                            ${comment}`}\n                            files={files}\n                        />\n                    </Suspense>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n"],"names":["d","a","b","i","aa","bb","parseInt","strcmp","major","Number","minor","patch","pre","build","v","m","versionTryParse","cmp","useState","servicesMenuId","useId","services","useMemo","res","serviceSpecifications","srv","isInfrastructure","serviceFilter","handleServiceAddClick","event","setServicesAnchorEl","handleServiceAddClose","id","serviceSpecificationFromClassIdentifier","onAdd","children","Boolean","error","catalog","useDeviceCatalog","specifications","useChange","_","JSON","arrayEq","l","r","DEFAULT_OPTIONS","legs","type","cover","connectors","depth","width","gridWidth","height","gridHeight","c","boxWidth","boxHeight","name","grid","box","rings","x","y","components","dir","w","h","generateEC30EnclosureModel","useEffect","window","setTimeout","clearTimeout","deps","useContext","useAnalytics","mounted","useMounted","firmwares","db","useDeviceSpecifications","loadFirmwares","useCallback","names","slugs","unique","spec","repo","fw","age","Date","console","fetchLatestFirmwareRelease","ignoreThrottled","trackEvent","status","setThrottled","release","firmware","fetchFirmwareReleaseBinary","time","bus","useIdleCallback","useChangeAsync","uf2s","uf2Blobs","parseFirmwareFile","uf2Blob","repoSlug","blobs","setFirmwareFile","firmwareBlobs","ROOT","GITHUB_API_KEY","version","content","sha","size","html_url","download_url","contents","semverCmp","cleaned","slug","parts","repoPath","owner","folder","u","url","normalizeSlug","uri","resp","fetch","releases","contentsToFirmwareReleases","options","p","downloadUrl","req","headers","Accept","src","useFetch","path","useFetchApi","useLatestRelease","assertUrl","useLatestFirmwareReleases","response","loading","meta","useStaticQuery","metaTitle","title","pageContext","site","metaDescription","description","data","rest","handleClick","ev","setCopied","copied","text","onCopy","navigator","canvas","blob","resolve","item","delay","hasCopied","buttonText","label","disabled","copyIcon","PREFIX","classes","hr","start","StyledGrid","styled","background","theme","marginBottom","clsx","action","variant","count","padding","elevation","others","mb","useEffectAsync","setLoading","setStatus","setResponse","json","setError","hasDrawer","drawerType","DrawerType","itemCount","xs","sm","md","lg","xl","URL","img","cvs","document","ctx","cw","ch","car","iw","ih","iar","sx","sy","sw","sh","dw","dh","reject","setCanvas","readBlobToCanvas","root","btn","Root","position","margin","display","borderRadius","left","top","ImportButton","lazy","useBlobCanvas","canvasUrl","handleFilesUploaded","file","files","setImageBlob","onImageImported","GithubPullRequestButton","EC30Card","sides","companies","dev","useCompanies","companyId","handleChange","setCompany","renderInputs","params","frontmatter","Head","props","useLocalStorage","productIdentifiers","device","gridBreakpoints","useGridBreakpoints","devices","useDevices","announced","physical","ignoreInfrastructure","productIdentifier","updateDevice","clone","generateDeviceSpecificationId","setDevice","React","setImageDataURI","setComment","deviceCatalog","elid","nameId","firmwareMenuId","repoId","identifierId","urlId","descriptionId","homepageId","hardwareVersionId","hardwareDesignId","firmwareSourceId","storeLinkId","connectorId","shapeId","commentId","includeDeprecated","includeExperimental","handleClear","handleServiceAdd","companyRepos","useFirmwareBlob","companyError","nameError","parsedRepo","parseRepoUrl","githubError","linkError","storeLinkError","idError","imageError","versionError","ok","route","identifierToUrlPath","modulePath","imagePath","model","shapeToEC30","handleNameChange","handleRepoChange","handleLinkChange","handleDescriptionChange","handleDeleteService","handleDeleteFirmware","handleVersion","handleStoreLinkChange","handleShapeChange","handleFirmwareAddClick","setFirmwaresAnchorEl","handleProductIdentifierAddRandomClick","handleFirmwareAddClose","handleImageImported","handleCompanyChanged","value","handleFirmwareSourceChanged","handleHardwareDesignChanged","handleConnectorChanged","handleCommentChanged","renderRepoInput","handleImportDevice","company","controlService","descrReg","ControlReg","ds","normalizeDeviceSpecification","imageDataURI","encoding","ml","s","n","lr","side","withPrefix"],"sourceRoot":""}