{"version":3,"file":"988-33316da37027e33b4ae6.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardTrafficLight.tsx","webpack://jacdac-docs/./src/components/hooks/useArrowKeys.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigation.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigationProps.ts"],"sourcesContent":["import React, { useRef } from \"react\"\nimport { TrafficLightReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport { TrafficLightServer } from \"../../../jacdac-ts/src/servers/trafficlightserver\"\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\"\nimport useRegister from \"../hooks/useRegister\"\n\nconst m = 2\nconst r = 8\nconst ri = 7\nconst w = 2 * r + 2 * m\nconst h = 4 * w + 2 * m\nconst cx = w / 2\nconst sw = 2\n\nfunction TrafficLight(props: {\n    cx: number\n    cy: number\n    label: string\n    background: string\n    fill: string\n    onDown?: () => void\n}) {\n    const { cx, cy, fill, background, label, onDown } = props\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(label, onDown)\n\n    return (\n        <>\n            <circle cx={cx} cy={cy} r={r} fill={background} stroke={\"none\"} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={ri}\n                fill={fill}\n                strokeWidth={sw}\n                {...buttonProps}\n            />\n        </>\n    )\n}\n\nexport default function DashboardTrafficLight(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n\n    const widgetRef = useRef<SVGGElement>()\n\n    const redRegister = useRegister(service, TrafficLightReg.Red)\n    const yellowRegister = useRegister(service, TrafficLightReg.Yellow)\n    const greenRegister = useRegister(service, TrafficLightReg.Green)\n\n    const red = useRegisterBoolValue(redRegister, props)\n    const yellow = useRegisterBoolValue(yellowRegister, props)\n    const green = useRegisterBoolValue(greenRegister, props)\n\n    const lightRegs = [\n        TrafficLightReg.Red,\n        TrafficLightReg.Yellow,\n        TrafficLightReg.Green,\n    ]\n    const lights = [red, yellow, green]\n\n    const server = useServiceServer<TrafficLightServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, controlBackground } = useWidgetTheme(color)\n    const widgetSize = useWidgetSize(variant, services?.length)\n\n    let cy = 0\n    const names = [\"red\", \"yellow\", \"green\"]\n    const colors = [\"red\", \"orange\", \"green\"]\n    const navProps = useKeyboardNavigationProps(widgetRef.current)\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <g ref={widgetRef} {...navProps}>\n                <rect\n                    x={0}\n                    y={0}\n                    width={w}\n                    height={h}\n                    rx={m}\n                    fill={background}\n                />\n                {lights.map((v, i) => {\n                    cy += m + 2 * r\n                    const fill = v ? colors[i] : controlBackground\n                    const onDown = async () => {\n                        const reg = service.register(lightRegs[i])\n                        await reg.sendSetBoolAsync(!v, true)\n                    }\n                    return (\n                        <TrafficLight\n                            key={i}\n                            cx={cx}\n                            cy={cy}\n                            background={background}\n                            fill={fill}\n                            onDown={onDown}\n                            label={`${names[i]} ${v ? \"on\" : \"off\"}`}\n                        />\n                    )\n                })}\n            </g>\n        </SvgWidget>\n    )\n}\n","import { KeyboardEvent } from \"react\"\nimport { keyCodeFromEvent } from \"./useFireKey\"\n\nconst PAGE_DOWN = 34\nconst PAGE_UP = 33\nconst HOME = 36\nconst END = 35\nconst LEFT_KEY = 37\nconst UP_KEY = 38\nconst RIGHT_KEY = 39\nconst DOWN_KEY = 40\n\nexport default function useArrowKeys(options: {\n    onLeft?: (offset: number) => void\n    onRight?: (offset: number) => void\n    onUp?: (offset: number) => void\n    onDown?: (offset: number) => void\n    symmetric?: boolean\n}) {\n    const { onLeft, onUp, onRight, onDown, symmetric } = options\n\n    if (!onLeft && !onUp && !onRight && !onDown) return undefined\n\n    const handlers = {\n        [LEFT_KEY]: onLeft,\n        [RIGHT_KEY]: onRight,\n        [UP_KEY]: onUp || (symmetric && onRight),\n        [DOWN_KEY]: onDown || (symmetric && onLeft),\n    }\n\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e)\n        const handler = handlers[charCode]\n        if (handler) {\n            e.preventDefault()\n            handler()\n        }\n    }\n}\n","export default function useKeyboardNavigation(\n    parentRef: Element,\n    wrap = false\n) {\n    const query = '[tabindex=\"0\"]'\n    const onMove = (offset: number) => () => {\n        const focusable = Array.from<SVGElement>(\n            parentRef?.querySelectorAll(query) || []\n        )\n        if (focusable.length) {\n            const me = focusable.findIndex(f => f === document.activeElement)\n            // don't wrap\n            if (\n                !wrap &&\n                ((me === 0 && offset < 0) ||\n                    (me === focusable.length - 1 && offset > 0))\n            )\n                return\n            const next = (me + offset + focusable.length) % focusable.length\n            focusable[next].focus()\n        }\n    }\n    return onMove\n}\n","import useArrowKeys from \"./useArrowKeys\"\nimport useKeyboardNavigation from \"./useKeyboardNavigation\"\n\nexport default function useKeyboardNavigationProps(\n    parentRef: Element,\n    vertical?: boolean\n) {\n    const onMove = useKeyboardNavigation(parentRef)\n\n    const onKeyDown = useArrowKeys({\n        onLeft: !vertical && onMove(-1),\n        onRight: !vertical && onMove(1),\n        onDown: vertical && onMove(1),\n        onUp: vertical && onMove(-1),\n    })\n\n    return {\n        onKeyDown: parentRef && onKeyDown,\n    }\n}\n"],"names":["m","r","ri","w","h","cx","sw","buttonProps","useSvgButtonProps","widgetRef","useRef","redRegister","useRegister","TrafficLightReg","yellowRegister","greenRegister","red","useRegisterBoolValue","yellow","green","lightRegs","lights","server","useServiceServer","color","useWidgetTheme","widgetSize","useWidgetSize","services","cy","names","colors","navProps","useKeyboardNavigationProps","fill","v","onDown","reg","service","PAGE_DOWN","PAGE_UP","HOME","END","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","handlers","onUp","symmetric","e","charCode","keyCodeFromEvent","handler","wrap","query","onMove","offset","focusable","Array","me","f","document","next","useKeyboardNavigation","onKeyDown","useArrowKeys","onLeft","onRight","vertical","parentRef"],"sourceRoot":""}