{"version":3,"file":"248-17dd2924390a1c9ce683.js","mappings":";;;;;;;;;;;;;;;;;;;AAee,+BAAuD,CAClE,GAAM,kBAAN,MAEA,GAAMA,CAAAA,MAAM,CAAGC,4EAAgB,CAA/B,OAA+B,CAA/B,CACA,GAAMC,CAAAA,gBAAgB,CAAGC,uEAAW,SAAUC,iGAAV,CAApC,CACA,GAAMC,CAAAA,eAAe,CAAGF,uEAAW,SAAUC,+FAAV,CAAnC,CAEA,GAAM,+BAA8BE,+CAAQ,CAA5C,SAA4C,CAA5C,CAGAC,gDAAS,CAAC,IAAM,mCAAMC,CAAAA,UAAN,OAAMA,EAAAA,UAAN,SAAMA,CAAN,MAAMA,CAAN,qBAAMA,UAAU,CAAhB,qDAAMA,mBAAAA,CAAAA,IAAAA,CAAN,UAAMA,CAAN,CAAP,EAAsC,CAA/CD,UAA+C,CAAtC,CAATA,CACA,GAAME,CAAAA,0BAA0B,CAAG,IAAM,0BACrCD,UAAU,GAAVA,IAAAA,EAAAA,UAAU,OAAVA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,CAAAA,oBAAAA,CAAAA,UAAU,CAAVA,OAAAA,IAAAA,IAAAA,EAAAA,oBAAAA,GAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,oBAAAA,CAAAA,IAAAA,CAAAA,UAAAA,CAAAA,CACAE,aAAa,CAAbA,SAAa,CAAbA,CAFJ,EAIA,GAAMC,CAAAA,wBAAwB,CAAG,IAAM,CACnC,GAAMC,CAAAA,OAAO,CAAGC,2FAAa,CAA7B,MAA6B,CAA7B,CACAH,aAAa,CAACE,OAAO,CAAG,CAAH,OAAG,CAAH,CAArBF,SAAa,CAAbA,CACAL,eAAe,CAAfA,gBAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAHJ,EAMA,GAAM,6DACFS,4FAAwB,kBAD5B,KAC4B,CAD5B,CAGAC,OAAO,CAAPA,GAAAA,CAAY,CAAZA,UAAY,CAAZA,EACA,mBACI,kHAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,GACKf,MAAM,eACH,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,iBACI,yHACI,OAAO,CADX,WAEI,OAAO,CACHQ,UAAU,4BAHlB,0BAQKA,UAAU,oBAX3B,iBAGY,CADJ,CAFR,cAeI,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,iBACI,kHACI,QAAQ,CADZ,gBAEI,gBAAgB,CAFpB,KAGI,OAAO,CAnBnB,OAgBQ,EADJ,CAfJ,CAsBKQ,QAAQ,GAARA,SAAAA,EAAAA,aACG,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,sEAvBR,GAuBQ,CAvBR,CA2BKC,QAAQ,GAARA,SAAAA,EAA0BC,gBAAgB,GAA1CD,CAAAA,EAAAA,aACG,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,oDA7BZ,GA6BY,CA5BR,CADJ,CAmCH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardSatNav.tsx"],"sourcesContent":["import { Grid } from \"@mui/material\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React, { useEffect, useState } from \"react\"\nimport { SatNavReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport {\n    SatNavReadingType,\n    SatNavServer,\n    watchLocation,\n} from \"../../../jacdac-ts/src/servers/satnavserver\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport RegisterInput from \"../RegisterInput\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\n\nexport default function DashboardSatNav(props: DashboardServiceProps) {\n    const { service, visible } = props\n\n    const server = useServiceServer<SatNavServer>(service)\n    const positionRegister = useRegister(service, SatNavReg.Position)\n    const enabledRegister = useRegister(service, SatNavReg.Enabled)\n\n    const [geoUnmount, setGeoUnmount] = useState<{ unmount: () => void }>(\n        undefined\n    )\n    useEffect(() => () => geoUnmount?.unmount?.(), [geoUnmount])\n    const handleUnuseMyLocationClick = () => {\n        geoUnmount?.unmount?.()\n        setGeoUnmount(undefined)\n    }\n    const handleUseMyLocationClick = () => {\n        const unmount = watchLocation(server)\n        setGeoUnmount(unmount ? { unmount } : undefined)\n        enabledRegister.sendSetBoolAsync(true, true)\n    }\n\n    const [time, latitude, longitude, accuracy, altitude, altitudeAccuracy] =\n        useRegisterUnpackedValue<SatNavReadingType>(positionRegister, props)\n\n    console.log({ geoUnmount })\n    return (\n        <Grid container spacing={1}>\n            {server && (\n                <Grid item xs={12}>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={\n                            geoUnmount\n                                ? handleUnuseMyLocationClick\n                                : handleUseMyLocationClick\n                        }\n                    >\n                        {geoUnmount ? \"Stop my location\" : \"Use my location\"}\n                    </Button>\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <RegisterInput\n                    register={enabledRegister}\n                    showRegisterName={true}\n                    visible={visible}\n                />\n            </Grid>\n            {latitude !== undefined && (\n                <Grid item xs={12}>\n                    latitude, longitude: {latitude}, {longitude}, ±{accuracy}m\n                </Grid>\n            )}\n            {altitude !== undefined && altitudeAccuracy !== 0 && (\n                <Grid item xs={12}>\n                    altitude: {altitude}, ±{altitudeAccuracy}m\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"names":["server","useServiceServer","positionRegister","useRegister","SatNavReg","enabledRegister","useState","useEffect","geoUnmount","handleUnuseMyLocationClick","setGeoUnmount","handleUseMyLocationClick","unmount","watchLocation","useRegisterUnpackedValue","console","latitude","altitude","altitudeAccuracy"],"sourceRoot":""}