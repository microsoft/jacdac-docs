{"version":3,"file":"component---src-pages-tools-tsx-a57ff17d76c7058f2781.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASe,gBAAiB,CAC5B,GAAM,gBAAoBA,oBAAU,CAApC,0BAAoC,CAApC,CACA,GAAMC,CAAAA,oBAAoB,CAAG,IAAMC,aAAa,CAACC,qCAAD,CAAhD,CACA,GAAMC,CAAAA,uBAAuB,CAAG,IAAMF,aAAa,CAACC,6CAAD,CAAnD,CACA,mBACI,0CACI,SAAS,CADb,KAEI,OAAO,CAFX,GAGI,SAAS,CAHb,SAII,YAAY,CAJhB,SAKI,UAAU,CALd,uBAOI,+CACI,KAAK,CADT,YAEI,SAAS,CATjB,8EAOI,EAPJ,cAYI,8CACI,KAAK,CADT,KAEI,QAAQ,CAFZ,gCAGI,WAAW,CAHf,4KAII,KAAK,cAAE,8CAAa,GAAG,CAAhB,kBAAmC,GAAG,CAAtC,4CAJX,KAIW,GAJX,CAKI,UAAU,CALd,mBAMI,aAAa,CANjB,OAOI,aAAa,CAnBrB,oBAYI,EAZJ,cAsBI,8CACI,KAAK,CADT,MAEI,QAAQ,CAFZ,iBAGI,WAAW,CAHf,4EAII,KAAK,cAAE,8CAAa,GAAG,CAAhB,gBAAiC,GAAG,CAApC,8CAJX,KAIW,GAJX,CAKI,UAAU,CALd,sBAMI,aAAa,CANjB,OAOI,aAAa,CA7BrB,uBAsBI,EAtBJ,cAgCI,8CACI,KAAK,CADT,KAEI,QAAQ,CAFZ,kBAGI,WAAW,CAHf,4CAII,UAAU,CAJd,eAKI,aAAa,CALjB,OAMI,SAAS,CANb,oBAOI,KAAK,cACD,8CACI,GAAG,CADP,iBAEI,GAAG,CAFP,gEAxCZ,KAwCY,GARR,EAhCJ,cA+CI,8CACI,KAAK,CADT,MAEI,QAAQ,CAFZ,iBAGI,WAAW,CAHf,uEAII,UAAU,CAJd,mBAKI,aAAa,CALjB,OAMI,SAAS,CANb,wBAOI,KAAK,cACD,8CACI,GAAG,CADP,sBAEI,GAAG,CAFP,4GAvDZ,KAuDY,GARR,EA/CJ,cA8DI,+CACI,SAAS,CADb,4BAEI,WAAW,CAFf,mFAGI,UAAU,CAHd,qCAII,aAAa,CAJjB,OAKI,SAAS,CAnEjB,sBA8DI,EA9DJ,cAsEI,+CACI,SAAS,CADb,iBAEI,UAAU,CAFd,YAGI,aAAa,CAHjB,OAII,SAAS,CA3ErB,aAuEQ,EAtEJ,CADJ,CA+EH;;AC5FD;AACO,IAAME,WAAW,GAAG;AACvBC,EAAAA,KAAK,EADkB;AAEvBC,EAAAA,eAAe,EAAE;AAFM,CAApB;AAIP;AACO,IAAMC,UAAI,GAAGC,KAAK,iBAAI,kEAAtB,WAAsB,EAAtB;AAEP;AACA","sources":["webpack://jacdac-docs/./src/components/home/Tools.tsx","webpack://jacdac-docs/./src/pages/tools.tsx"],"sourcesContent":["import { Grid } from \"@mui/material\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport React, { useContext } from \"react\"\nimport CenterGrid from \"./CenterGrid\"\nimport SplitGrid from \"./SplitGrid\"\nimport AppContext, { DrawerType } from \"../AppContext\"\nimport Suspense from \"../ui/Suspense\"\nimport DashboardDevice from \"../dashboard/DashboardDevice\"\n\nexport default function Tools() {\n    const { setDrawerType } = useContext(AppContext)\n    const handleShowDeviceTree = () => setDrawerType(DrawerType.Dom)\n    const handleShowPacketConsole = () => setDrawerType(DrawerType.Packets)\n    return (\n        <Grid\n            container\n            spacing={10}\n            direction=\"column\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n        >\n            <CenterGrid\n                title=\"Web Tools\"\n                subtitle3=\"Visualize, debug, sniff, track, record, replay, update... from your browser.\"\n            />\n\n            <SplitGrid\n                right={true}\n                subtitle=\"Digital Twins and Simulators.\"\n                description=\"Visualize and interact with digital twins of physical devices, or simulated devices. Interact with the simulators on the left. To see more details, open the device tree.\"\n                image={<StaticImage src=\"./dashboard.png\" alt=\"Dashboard\" />}\n                buttonText=\"Open Device Tree\"\n                buttonVariant=\"link\"\n                onButtonClick={handleShowDeviceTree}\n            />\n\n            <SplitGrid\n                right={false}\n                subtitle=\"Packet Console\"\n                description=\"Sniff the packet traffic, record and replay traces in the packet console.\"\n                image={<StaticImage src=\"./packets.png\" alt=\"Packet view\" />}\n                buttonText=\"Open Packet Console\"\n                buttonVariant=\"link\"\n                onButtonClick={handleShowPacketConsole}\n            />\n\n            <SplitGrid\n                right={true}\n                subtitle=\"Data collector.\"\n                description=\"Record any register data into a CSV file.\"\n                buttonText=\"Collect data\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/tools/collector/\"\n                image={\n                    <StaticImage\n                        src=\"./recordit.png\"\n                        alt=\"Data collector user interface\"\n                    />\n                }\n            />\n\n            <SplitGrid\n                right={false}\n                subtitle=\"Device Tester.\"\n                description=\"A compliance test suite for module development or the factory floor.\"\n                buttonText=\"Test your device\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/tools/device-tester/\"\n                image={\n                    <StaticImage\n                        src=\"./device-tester.png\"\n                        alt=\"Device Tester contains a device twin of a device and a tree of unit tests\"\n                    />\n                }\n            />\n\n            <CenterGrid\n                subtitle2=\"Can I build my own tools?\"\n                description=\"Absolutely! You can use the JavaScript package to build your own Jacdac tooling.\"\n                buttonText=\"Integrate Jacdac into your web app\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/clients/javascript/\"\n            />\n\n            <CenterGrid\n                subtitle2=\"More web tools\"\n                buttonText=\"Read more\"\n                buttonVariant=\"link\"\n                buttonUrl=\"/tools/more\"\n            />\n        </Grid>\n    )\n}\n","import React from \"react\"\nexport const frontmatter = {\n    title: \"Web Tools\",\n    hideBreadcrumbs: true,\n}\nimport CoreHead from \"../components/shell/Head\"\nexport const Head = props => <CoreHead {...props} {...frontmatter} />\n\nimport Tools from \"../components/home/Tools\"\nexport default Tools\n"],"names":["useContext","handleShowDeviceTree","setDrawerType","DrawerType","handleShowPacketConsole","frontmatter","title","hideBreadcrumbs","Head","props"],"sourceRoot":""}