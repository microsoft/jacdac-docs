{"version":3,"file":"component---src-pages-tools-console-tsx-1dc294d628a9bbe8ee08.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/pages/tools/console.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import React, { lazy } from \"react\"\nimport Suspense from \"../../components/ui/Suspense\"\nconst Console = lazy(() => import(\"../../components/console/Console\"))\n\nexport const frontmatter = {\n    title: \"Console view\",\n    description: \"Console message viewer.\",\n}\nimport CoreHead from \"../../components/shell/Head\"\nexport const Head = props => <CoreHead {...props} {...frontmatter} />\n\nexport default function Page() {\n    return (\n        <Suspense>\n            <Console\n                showToolbar={true}\n                showFiles={true}\n                showLevel={true}\n                showPopout={false}\n                showSerial={true}\n                showFilter={true}\n            />\n        </Suspense>\n    )\n}\n"],"names":["meta","useStaticQuery","metaTitle","title","pageContext","site","metaDescription","description","data","name","content","Console","lazy","frontmatter","Head","props"],"sourceRoot":""}