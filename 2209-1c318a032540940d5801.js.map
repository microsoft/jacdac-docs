{"version":3,"file":"2209-1c318a032540940d5801.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/CmdButton.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardVibrationMotor.tsx","webpack://jacdac-docs/./src/components/hooks/useMounted.ts","webpack://jacdac-docs/./src/components/ui/SliderWithLabel.tsx"],"sourcesContent":["import { darken, lighten } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React, { CSSProperties, ReactNode, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ErrorIcon from \"@mui/icons-material/Error\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport useAnalytics, { EventProperties } from \"./hooks/useAnalytics\"\nimport useMounted from \"./hooks/useMounted\"\nimport clsx from \"clsx\"\nimport useSnackbar from \"./hooks/useSnackbar\"\nimport useBus from \"../jacdac/useBus\"\nimport OptionalTooltip from \"./widgets/OptionalTooltip\"\n\nconst PREFIX = \"CmdButton\"\n\nconst classes = {\n    ack: `${PREFIX}Ack`,\n    error: `${PREFIX}Error`,\n}\n\nconst Root = styled(\"span\")(({ theme }) => ({\n    [`& .${classes.ack}`]: {\n        color: \"#fff\",\n        fontWeight: theme.typography.fontWeightMedium,\n        backgroundColor: theme.palette.success.main,\n    },\n\n    [`& .${classes.error}`]: {\n        color: \"#fff\",\n        backgroundColor: (theme.palette.mode === \"light\" ? lighten : darken)(\n            theme.palette.error.main,\n            0.6\n        ),\n    },\n}))\n\nconst ACK_RESET_DELAY = 500\nconst ERROR_RESET_DELAY = 2000\n\nexport default function CmdButton(props: {\n    onClick: (mounted: () => boolean) => Promise<void>\n    className?: string\n    style?: CSSProperties\n    title?: string\n    children?: ReactNode\n    icon?: JSX.Element\n    size?: \"small\" | \"large\" | undefined\n    variant?: \"outlined\" | \"contained\" | undefined\n    disabled?: boolean\n    disableReset?: boolean\n    autoRun?: boolean\n    trackName?: string\n    trackProperties?: EventProperties\n    ackResetDelay?: number\n    color?:\n        | \"inherit\"\n        | \"primary\"\n        | \"secondary\"\n        | \"error\"\n        | \"info\"\n        | \"success\"\n        | \"warning\"\n}) {\n    const {\n        onClick,\n        className,\n        style,\n        children,\n        icon,\n        title,\n        disabled,\n        disableReset,\n        autoRun,\n        trackName,\n        trackProperties,\n        ackResetDelay,\n        color,\n        ...others\n    } = props\n    const bus = useBus()\n    const { setError: setAppError } = useSnackbar()\n\n    const [working, setWorking] = useState(false)\n    const [ack, setAck] = useState(false)\n    const [error, setError] = useState(undefined)\n    const { trackEvent } = useAnalytics()\n    const mounted = useMounted()\n\n    const _disabled = disabled || working\n\n    const run = async () => {\n        if (working) return // already working\n\n        if (trackName) trackEvent(\"cmd.\" + trackName, trackProperties)\n        try {\n            setError(undefined)\n            setAck(false)\n            setWorking(true)\n            await onClick(mounted)\n            if (!mounted()) return\n            setAck(true)\n            if (!disableReset) {\n                await bus.delay(ackResetDelay || ACK_RESET_DELAY)\n                if (!mounted()) return\n                setAck(false)\n            }\n        } catch (e) {\n            if (!mounted()) return\n            setAppError(e)\n            setError(e)\n            if (!disableReset) {\n                await bus.delay(ERROR_RESET_DELAY)\n                if (!mounted()) return\n                setError(undefined)\n            }\n        } finally {\n            if (mounted()) setWorking(false)\n        }\n    }\n\n    const handleClick = async (ev: React.MouseEvent<HTMLButtonElement>) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n        run()\n    }\n\n    const statusIcon = error ? <ErrorIcon /> : undefined\n    const modeClassName = error ? classes.error : ack ? classes.ack : undefined\n    const elClassName = clsx(className, modeClassName)\n\n    // run once\n    useEffect(() => {\n        if (autoRun && mounted()) run()\n    }, [autoRun])\n\n    return (\n        <Root>\n            {!children && icon ? (\n                <IconButtonWithTooltip\n                    className={elClassName}\n                    style={style}\n                    onClick={handleClick}\n                    aria-label={title}\n                    title={title}\n                    disabled={_disabled}\n                    color={color}\n                    {...others}\n                >\n                    {statusIcon || icon}\n                </IconButtonWithTooltip>\n            ) : (\n                <OptionalTooltip title={title} placement=\"bottom\">\n                    <Button\n                        className={elClassName}\n                        style={style}\n                        startIcon={icon}\n                        endIcon={statusIcon}\n                        onClick={handleClick}\n                        aria-label={title}\n                        title=\"\"\n                        disabled={_disabled}\n                        color={color}\n                        {...others}\n                    >\n                        {children}\n                    </Button>\n                </OptionalTooltip>\n            )}\n        </Root>\n    )\n}\n","import { Grid, TextField } from \"@mui/material\"\nimport React, {\n    ChangeEvent,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n} from \"react\"\nimport {\n    VibrationMotorCmd,\n    VibrationMotorReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport WebAudioContext from \"../ui/WebAudioContext\"\nimport { VibrationMotorServer } from \"../../../jacdac-ts/src/servers/vibrationmotorserver\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport CmdButton from \"../CmdButton\"\nimport SliderWithLabel from \"../ui/SliderWithLabel\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\nimport Alert from \"../ui/Alert\"\n\nconst T_DIT = 50\nconst T_REST = 120\n\nconst patterns: Record<\n    string,\n    {\n        name: string\n        duration: number\n        volume: number\n    }\n> = {\n    \".\": {\n        name: \"dit\",\n        duration: 1,\n        volume: 0.6,\n    },\n    \"-\": {\n        name: \"dat\",\n        duration: 3,\n        volume: 0.6,\n    },\n    \" \": {\n        name: \"space\",\n        duration: 1,\n        volume: 0,\n    },\n    _: {\n        name: \"low dat\",\n        duration: 3,\n        volume: 0.2,\n    },\n    \"=\": {\n        name: \"hight dat\",\n        duration: 3,\n        volume: 1,\n    },\n    \"'\": {\n        name: \"high dit\",\n        duration: 1,\n        volume: 1,\n    },\n    \",\": {\n        name: \"low dit\",\n        duration: 1,\n        volume: 0.2,\n    },\n}\n\nfunction PatternInput(props: {\n    disabled?: boolean\n    service: JDService\n    speedScale: number\n    maxLength: number\n}) {\n    const { speedScale, disabled, service, maxLength } = props\n    const { onClickActivateAudioContext } = useContext(WebAudioContext)\n    const [text, setText] = useState(\".-.\")\n    const errorText =\n        text.length > maxLength\n            ? `Pattern too long (max ${maxLength})`\n            : undefined\n    const helperText = useMemo(\n        () =>\n            `Pattern of vibrations: ${Object.entries(patterns)\n                .map(([key, value]) => `\"${key}\" ${value.name}`)\n                .join(\", \")}`,\n        []\n    )\n    const handleSend = async () => {\n        onClickActivateAudioContext() // enable audio context within click handler\n        const seq = text\n            .split(\"\")\n            .map(c => patterns[c])\n            .filter(p => !!p)\n        if (navigator.vibrate)\n            navigator.vibrate(seq.flatMap(p => [p.duration, T_DIT >> 3]))\n\n        const pattern: [number, number][] = seq.flatMap(p => [\n            [(p.duration * T_DIT) >> 3, p.volume * speedScale],\n            [T_REST >> 3, 0],\n        ])\n        const data = jdpack<[[number, number][]]>(\"r: u8 u0.8\", [pattern])\n        await service.sendCmdAsync(VibrationMotorCmd.Vibrate, data)\n    }\n    const handleChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        const newValue = ev.target.value\n        setText(\n            newValue\n                .split(\"\")\n                .filter(s => !!patterns[s])\n                .join(\"\")\n        )\n    }\n    return (\n        <Grid container spacing={1} direction=\"row\">\n            <Grid item xs>\n                <TextField\n                    title=\"vibration pattern\"\n                    helperText={errorText || helperText}\n                    value={text}\n                    fullWidth={true}\n                    error={!!errorText}\n                    size=\"small\"\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item>\n                <CmdButton\n                    variant=\"outlined\"\n                    title=\"send vibration pattern\"\n                    disabled={disabled}\n                    onClick={handleSend}\n                >\n                    vibrate\n                </CmdButton>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function DashboardVibrationMotor(props: DashboardServiceProps) {\n    const { service } = props\n    const server = useServiceServer<VibrationMotorServer>(service)\n    const { playTone, activated } = useContext(WebAudioContext)\n    const [intensity, setIntensity] = useState(20)\n    const maxVibrationsRegister = useRegister(\n        service,\n        VibrationMotorReg.MaxVibrations\n    )\n    const [maxVibrations = 3] = useRegisterUnpackedValue(maxVibrationsRegister)\n\n    // listen for playTone commands from the buzzer\n    useEffect(\n        () =>\n            server?.subscribe<{\n                duration: number\n                speed: number\n            }>(VibrationMotorServer.VIBRATE_PATTERN, ({ duration, speed }) => {\n                const ms = duration << 3\n                playTone(440, ms, speed)\n            }),\n        [server]\n    )\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleIntensity: any = (\n        event: React.ChangeEvent<unknown>,\n        value: number | number[]\n    ) => setIntensity(value as number)\n    const percentValueFormat = (newValue: number) => `${newValue | 0}%`\n    // 50, 180\n    return (\n        <>\n            <Grid item xs={12}>\n                <PatternInput\n                    service={service}\n                    speedScale={intensity / 100}\n                    maxLength={maxVibrations}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <SliderWithLabel\n                    label=\"intensity\"\n                    min={0}\n                    max={100}\n                    value={intensity}\n                    onChange={handleIntensity}\n                    valueLabelDisplay=\"auto\"\n                    valueLabelFormat={percentValueFormat}\n                />\n            </Grid>\n            {!activated && <Alert severity=\"warning\">Press VIBRATE to enable sound playback.</Alert>}\n        </>\n    )\n}\n","import { useEffect, useRef } from \"react\"\n\nexport default function useMounted(): () => boolean {\n    const mounted = useRef(false)\n    useEffect(() => {\n        mounted.current = true\n        return () => {\n            mounted.current = false\n        }\n    }, [])\n    return () => mounted.current\n}\n","import { Slider, SliderProps, Typography } from \"@mui/material\"\nimport React from \"react\"\nimport { useId } from \"react\"\n\nexport default function SliderWithLabel(\n    props: {\n        label?: string\n    } & SliderProps\n) {\n    const { label, ...others } = props\n    const labelId = useId()\n    const sliderId = labelId + \"sliderId\"\n\n    return (\n        <>\n            <Typography id={labelId} variant=\"caption\" gutterBottom>\n                {label}\n            </Typography>\n            <Slider\n                id={sliderId}\n                aria-labelledby={labelId}\n                aria-label={label}\n                valueLabelDisplay=\"auto\"\n                {...others}\n            />\n        </>\n    )\n}\n"],"names":["PREFIX","classes","ack","error","Root","styled","color","fontWeight","theme","backgroundColor","ACK_RESET_DELAY","ERROR_RESET_DELAY","others","bus","useBus","setError","useSnackbar","useState","useAnalytics","mounted","useMounted","_disabled","disabled","run","trackEvent","setAck","setWorking","onClick","ackResetDelay","setAppError","handleClick","ev","statusIcon","modeClassName","elClassName","clsx","useEffect","autoRun","T_DIT","T_REST","patterns","name","duration","volume","_","useContext","errorText","text","helperText","useMemo","Object","value","handleSend","onClickActivateAudioContext","seq","c","p","navigator","pattern","data","jdpack","service","VibrationMotorCmd","handleChange","newValue","setText","s","server","useServiceServer","maxVibrationsRegister","useRegister","VibrationMotorReg","maxVibrations","useRegisterUnpackedValue","VibrationMotorServer","ms","playTone","handleIntensity","setIntensity","percentValueFormat","intensity","useRef","labelId","useId","sliderId"],"sourceRoot":""}