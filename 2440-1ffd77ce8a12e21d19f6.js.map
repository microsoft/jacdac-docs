{"version":3,"file":"2440-1ffd77ce8a12e21d19f6.js","mappings":";;;AAAA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,gDAAgD;AAChD,cAAc;AACd;AACA;AACA;AACA,4BAA4B;AAC5B,oDAAoD;;AAEpD;AACA;AACA;AACA,8IAA8I;AAC9I;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,cAAc;;AAE1C;AACA;;AAEA,0BAA0B,cAAc;AACxC;AACA;AACA;;AAEA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;;AAE1C;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA,0BAA0B,uBAAuB;AACjD;AACA;AACA,uCAAuC;AACvC,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA,QAAQ;AACR;AACA,OAAO;AACP;AACA,OAAO;AACP,gDAAgD;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE,yEAAyE,EAAE,oEAAoE,EAAE;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+GAA+G;AAC/G;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,0BAA0B;;AAEtD;AACA,YAAY;AACZ,SAAS;AACT;;AAEA;AACA;AACA,kCAAkC;;AAElC,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,cAAc;;AAE/C;AACA,SAAS,+GAA+G;AACxH;AACA;AACA,wCAAwC;;AAExC,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB,mBAAmB,gCAAgC;AACrF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,cAAc;AACxD,2EAA2E;;AAE3E;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;;AAEA,kHAAkH;AAClH;AACA;AACA;AACA,YAAY,oGAAoG;AAChH;AACA;AACA;AACA;AACA,UAAU,sBAAsB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,WAAW,WAAW;;AAEtB;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM,OAAO;;AAEb,kDAAkD;;AAElD,wDAAwD;;AAExD,oCAAoC;;AAEpC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA","sources":["webpack://jacdac-docs/./src/workers/csv/dist/node_modules/csv-worker.js"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn) {\n  var module = { exports: {} };\n\treturn fn(module, module.exports), module.exports;\n}\n\n/* @license\nPapa Parse\nv5.3.2\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\nvar papaparse_min = createCommonjsModule(function (module, exports) {\n  !function (e, t) {\n    module.exports = t() ;\n  }(commonjsGlobal, function s() {\n\n    var f = \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : void 0 !== f ? f : {};\n    var n = !f.document && !!f.postMessage,\n        o = n && /blob:/i.test((f.location || {}).protocol),\n        a = {},\n        h = 0,\n        b = {\n      parse: function (e, t) {\n        var i = (t = t || {}).dynamicTyping || !1;\n        M(i) && (t.dynamicTypingFunction = i, i = {});\n\n        if (t.dynamicTyping = i, t.transform = !!M(t.transform) && t.transform, t.worker && b.WORKERS_SUPPORTED) {\n          var r = function () {\n            if (!b.WORKERS_SUPPORTED) return !1;\n            var e = (i = f.URL || f.webkitURL || null, r = s.toString(), b.BLOB_URL || (b.BLOB_URL = i.createObjectURL(new Blob([\"(\", r, \")();\"], {\n              type: \"text/javascript\"\n            })))),\n                t = new f.Worker(e);\n            var i, r;\n            return t.onmessage = _, t.id = h++, a[t.id] = t;\n          }();\n\n          return r.userStep = t.step, r.userChunk = t.chunk, r.userComplete = t.complete, r.userError = t.error, t.step = M(t.step), t.chunk = M(t.chunk), t.complete = M(t.complete), t.error = M(t.error), delete t.worker, void r.postMessage({\n            input: e,\n            config: t,\n            workerId: r.id\n          });\n        }\n\n        var n = null;\n        \"string\" == typeof e ? n = t.download ? new l(t) : new p(t) : !0 === e.readable && M(e.read) && M(e.on) ? n = new g(t) : (f.File && e instanceof File || e instanceof Object) && (n = new c(t));\n        return n.stream(e);\n      },\n      unparse: function (e, t) {\n        var n = !1,\n            _ = !0,\n            m = \",\",\n            y = \"\\r\\n\",\n            s = '\"',\n            a = s + s,\n            i = !1,\n            r = null,\n            o = !1;\n\n        !function () {\n          if (\"object\" != typeof t) return;\n          \"string\" != typeof t.delimiter || b.BAD_DELIMITERS.filter(function (e) {\n            return -1 !== t.delimiter.indexOf(e);\n          }).length || (m = t.delimiter);\n          (\"boolean\" == typeof t.quotes || \"function\" == typeof t.quotes || Array.isArray(t.quotes)) && (n = t.quotes);\n          \"boolean\" != typeof t.skipEmptyLines && \"string\" != typeof t.skipEmptyLines || (i = t.skipEmptyLines);\n          \"string\" == typeof t.newline && (y = t.newline);\n          \"string\" == typeof t.quoteChar && (s = t.quoteChar);\n          \"boolean\" == typeof t.header && (_ = t.header);\n\n          if (Array.isArray(t.columns)) {\n            if (0 === t.columns.length) throw new Error(\"Option columns is empty\");\n            r = t.columns;\n          }\n\n          void 0 !== t.escapeChar && (a = t.escapeChar + s);\n          (\"boolean\" == typeof t.escapeFormulae || t.escapeFormulae instanceof RegExp) && (o = t.escapeFormulae instanceof RegExp ? t.escapeFormulae : /^[=+\\-@\\t\\r].*$/);\n        }();\n        var h = new RegExp(j(s), \"g\");\n        \"string\" == typeof e && (e = JSON.parse(e));\n\n        if (Array.isArray(e)) {\n          if (!e.length || Array.isArray(e[0])) return u(null, e, i);\n          if (\"object\" == typeof e[0]) return u(r || Object.keys(e[0]), e, i);\n        } else if (\"object\" == typeof e) return \"string\" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields || r), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : \"object\" == typeof e.data[0] ? Object.keys(e.data[0]) : []), Array.isArray(e.data[0]) || \"object\" == typeof e.data[0] || (e.data = [e.data])), u(e.fields || [], e.data || [], i);\n\n        throw new Error(\"Unable to serialize unrecognized input\");\n\n        function u(e, t, i) {\n          var r = \"\";\n          \"string\" == typeof e && (e = JSON.parse(e)), \"string\" == typeof t && (t = JSON.parse(t));\n          var n = Array.isArray(e) && 0 < e.length,\n              s = !Array.isArray(t[0]);\n\n          if (n && _) {\n            for (var a = 0; a < e.length; a++) 0 < a && (r += m), r += v(e[a], a);\n\n            0 < t.length && (r += y);\n          }\n\n          for (var o = 0; o < t.length; o++) {\n            var h = n ? e.length : t[o].length,\n                u = !1,\n                f = n ? 0 === Object.keys(t[o]).length : 0 === t[o].length;\n\n            if (i && !n && (u = \"greedy\" === i ? \"\" === t[o].join(\"\").trim() : 1 === t[o].length && 0 === t[o][0].length), \"greedy\" === i && n) {\n              for (var d = [], l = 0; l < h; l++) {\n                var c = s ? e[l] : l;\n                d.push(t[o][c]);\n              }\n\n              u = \"\" === d.join(\"\").trim();\n            }\n\n            if (!u) {\n              for (var p = 0; p < h; p++) {\n                0 < p && !f && (r += m);\n                var g = n && s ? e[p] : p;\n                r += v(t[o][g], p);\n              }\n\n              o < t.length - 1 && (!i || 0 < h && !f) && (r += y);\n            }\n          }\n\n          return r;\n        }\n\n        function v(e, t) {\n          if (null == e) return \"\";\n          if (e.constructor === Date) return JSON.stringify(e).slice(1, 25);\n          var i = !1;\n          o && \"string\" == typeof e && o.test(e) && (e = \"'\" + e, i = !0);\n          var r = e.toString().replace(h, a);\n          return (i = i || !0 === n || \"function\" == typeof n && n(e, t) || Array.isArray(n) && n[t] || function (e, t) {\n            for (var i = 0; i < t.length; i++) if (-1 < e.indexOf(t[i])) return !0;\n\n            return !1;\n          }(r, b.BAD_DELIMITERS) || -1 < r.indexOf(m) || \" \" === r.charAt(0) || \" \" === r.charAt(r.length - 1)) ? s + r + s : r;\n        }\n      }\n    };\n\n    if (b.RECORD_SEP = String.fromCharCode(30), b.UNIT_SEP = String.fromCharCode(31), b.BYTE_ORDER_MARK = \"\\ufeff\", b.BAD_DELIMITERS = [\"\\r\", \"\\n\", '\"', b.BYTE_ORDER_MARK], b.WORKERS_SUPPORTED = !n && !!f.Worker, b.NODE_STREAM_INPUT = 1, b.LocalChunkSize = 10485760, b.RemoteChunkSize = 5242880, b.DefaultDelimiter = \",\", b.Parser = E, b.ParserHandle = i, b.NetworkStreamer = l, b.FileStreamer = c, b.StringStreamer = p, b.ReadableStreamStreamer = g, f.jQuery) {\n      var d = f.jQuery;\n\n      d.fn.parse = function (o) {\n        var i = o.config || {},\n            h = [];\n        return this.each(function (e) {\n          if (!(\"INPUT\" === d(this).prop(\"tagName\").toUpperCase() && \"file\" === d(this).attr(\"type\").toLowerCase() && f.FileReader) || !this.files || 0 === this.files.length) return !0;\n\n          for (var t = 0; t < this.files.length; t++) h.push({\n            file: this.files[t],\n            inputElem: this,\n            instanceConfig: d.extend({}, i)\n          });\n        }), e(), this;\n\n        function e() {\n          if (0 !== h.length) {\n            var e,\n                t,\n                i,\n                r,\n                n = h[0];\n\n            if (M(o.before)) {\n              var s = o.before(n.file, n.inputElem);\n\n              if (\"object\" == typeof s) {\n                if (\"abort\" === s.action) return e = \"AbortError\", t = n.file, i = n.inputElem, r = s.reason, void (M(o.error) && o.error({\n                  name: e\n                }, t, i, r));\n                if (\"skip\" === s.action) return void u();\n                \"object\" == typeof s.config && (n.instanceConfig = d.extend(n.instanceConfig, s.config));\n              } else if (\"skip\" === s) return void u();\n            }\n\n            var a = n.instanceConfig.complete;\n            n.instanceConfig.complete = function (e) {\n              M(a) && a(e, n.file, n.inputElem), u();\n            }, b.parse(n.file, n.instanceConfig);\n          } else M(o.complete) && o.complete();\n        }\n\n        function u() {\n          h.splice(0, 1), e();\n        }\n      };\n    }\n\n    function u(e) {\n      this._handle = null, this._finished = !1, this._completed = !1, this._halted = !1, this._input = null, this._baseIndex = 0, this._partialLine = \"\", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = {\n        data: [],\n        errors: [],\n        meta: {}\n      }, function (e) {\n        var t = w(e);\n        t.chunkSize = parseInt(t.chunkSize), e.step || e.chunk || (t.chunkSize = null);\n        this._handle = new i(t), (this._handle.streamer = this)._config = t;\n      }.call(this, e), this.parseChunk = function (e, t) {\n        if (this.isFirstChunk && M(this._config.beforeFirstChunk)) {\n          var i = this._config.beforeFirstChunk(e);\n\n          void 0 !== i && (e = i);\n        }\n\n        this.isFirstChunk = !1, this._halted = !1;\n        var r = this._partialLine + e;\n        this._partialLine = \"\";\n\n        var n = this._handle.parse(r, this._baseIndex, !this._finished);\n\n        if (!this._handle.paused() && !this._handle.aborted()) {\n          var s = n.meta.cursor;\n          this._finished || (this._partialLine = r.substring(s - this._baseIndex), this._baseIndex = s), n && n.data && (this._rowCount += n.data.length);\n          var a = this._finished || this._config.preview && this._rowCount >= this._config.preview;\n          if (o) f.postMessage({\n            results: n,\n            workerId: b.WORKER_ID,\n            finished: a\n          });else if (M(this._config.chunk) && !t) {\n            if (this._config.chunk(n, this._handle), this._handle.paused() || this._handle.aborted()) return void (this._halted = !0);\n            n = void 0, this._completeResults = void 0;\n          }\n          return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n.data), this._completeResults.errors = this._completeResults.errors.concat(n.errors), this._completeResults.meta = n.meta), this._completed || !a || !M(this._config.complete) || n && n.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), a || n && n.meta.paused || this._nextChunk(), n;\n        }\n\n        this._halted = !0;\n      }, this._sendError = function (e) {\n        M(this._config.error) ? this._config.error(e) : o && this._config.error && f.postMessage({\n          workerId: b.WORKER_ID,\n          error: e,\n          finished: !1\n        });\n      };\n    }\n\n    function l(e) {\n      var r;\n      (e = e || {}).chunkSize || (e.chunkSize = b.RemoteChunkSize), u.call(this, e), this._nextChunk = n ? function () {\n        this._readChunk(), this._chunkLoaded();\n      } : function () {\n        this._readChunk();\n      }, this.stream = function (e) {\n        this._input = e, this._nextChunk();\n      }, this._readChunk = function () {\n        if (this._finished) this._chunkLoaded();else {\n          if (r = new XMLHttpRequest(), this._config.withCredentials && (r.withCredentials = this._config.withCredentials), n || (r.onload = v(this._chunkLoaded, this), r.onerror = v(this._chunkError, this)), r.open(this._config.downloadRequestBody ? \"POST\" : \"GET\", this._input, !n), this._config.downloadRequestHeaders) {\n            var e = this._config.downloadRequestHeaders;\n\n            for (var t in e) r.setRequestHeader(t, e[t]);\n          }\n\n          if (this._config.chunkSize) {\n            var i = this._start + this._config.chunkSize - 1;\n            r.setRequestHeader(\"Range\", \"bytes=\" + this._start + \"-\" + i);\n          }\n\n          try {\n            r.send(this._config.downloadRequestBody);\n          } catch (e) {\n            this._chunkError(e.message);\n          }\n\n          n && 0 === r.status && this._chunkError();\n        }\n      }, this._chunkLoaded = function () {\n        4 === r.readyState && (r.status < 200 || 400 <= r.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : r.responseText.length, this._finished = !this._config.chunkSize || this._start >= function (e) {\n          var t = e.getResponseHeader(\"Content-Range\");\n          if (null === t) return -1;\n          return parseInt(t.substring(t.lastIndexOf(\"/\") + 1));\n        }(r), this.parseChunk(r.responseText)));\n      }, this._chunkError = function (e) {\n        var t = r.statusText || e;\n\n        this._sendError(new Error(t));\n      };\n    }\n\n    function c(e) {\n      var r, n;\n      (e = e || {}).chunkSize || (e.chunkSize = b.LocalChunkSize), u.call(this, e);\n      var s = \"undefined\" != typeof FileReader;\n      this.stream = function (e) {\n        this._input = e, n = e.slice || e.webkitSlice || e.mozSlice, s ? ((r = new FileReader()).onload = v(this._chunkLoaded, this), r.onerror = v(this._chunkError, this)) : r = new FileReaderSync(), this._nextChunk();\n      }, this._nextChunk = function () {\n        this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();\n      }, this._readChunk = function () {\n        var e = this._input;\n\n        if (this._config.chunkSize) {\n          var t = Math.min(this._start + this._config.chunkSize, this._input.size);\n          e = n.call(e, this._start, t);\n        }\n\n        var i = r.readAsText(e, this._config.encoding);\n        s || this._chunkLoaded({\n          target: {\n            result: i\n          }\n        });\n      }, this._chunkLoaded = function (e) {\n        this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e.target.result);\n      }, this._chunkError = function () {\n        this._sendError(r.error);\n      };\n    }\n\n    function p(e) {\n      var i;\n      u.call(this, e = e || {}), this.stream = function (e) {\n        return i = e, this._nextChunk();\n      }, this._nextChunk = function () {\n        if (!this._finished) {\n          var e,\n              t = this._config.chunkSize;\n          return t ? (e = i.substring(0, t), i = i.substring(t)) : (e = i, i = \"\"), this._finished = !i, this.parseChunk(e);\n        }\n      };\n    }\n\n    function g(e) {\n      u.call(this, e = e || {});\n      var t = [],\n          i = !0,\n          r = !1;\n      this.pause = function () {\n        u.prototype.pause.apply(this, arguments), this._input.pause();\n      }, this.resume = function () {\n        u.prototype.resume.apply(this, arguments), this._input.resume();\n      }, this.stream = function (e) {\n        this._input = e, this._input.on(\"data\", this._streamData), this._input.on(\"end\", this._streamEnd), this._input.on(\"error\", this._streamError);\n      }, this._checkIsFinished = function () {\n        r && 1 === t.length && (this._finished = !0);\n      }, this._nextChunk = function () {\n        this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : i = !0;\n      }, this._streamData = v(function (e) {\n        try {\n          t.push(\"string\" == typeof e ? e : e.toString(this._config.encoding)), i && (i = !1, this._checkIsFinished(), this.parseChunk(t.shift()));\n        } catch (e) {\n          this._streamError(e);\n        }\n      }, this), this._streamError = v(function (e) {\n        this._streamCleanUp(), this._sendError(e);\n      }, this), this._streamEnd = v(function () {\n        this._streamCleanUp(), r = !0, this._streamData(\"\");\n      }, this), this._streamCleanUp = v(function () {\n        this._input.removeListener(\"data\", this._streamData), this._input.removeListener(\"end\", this._streamEnd), this._input.removeListener(\"error\", this._streamError);\n      }, this);\n    }\n\n    function i(m) {\n      var a,\n          o,\n          h,\n          r = Math.pow(2, 53),\n          n = -r,\n          s = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,\n          u = /^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/,\n          t = this,\n          i = 0,\n          f = 0,\n          d = !1,\n          e = !1,\n          l = [],\n          c = {\n        data: [],\n        errors: [],\n        meta: {}\n      };\n\n      if (M(m.step)) {\n        var p = m.step;\n\n        m.step = function (e) {\n          if (c = e, _()) g();else {\n            if (g(), 0 === c.data.length) return;\n            i += e.data.length, m.preview && i > m.preview ? o.abort() : (c.data = c.data[0], p(c, t));\n          }\n        };\n      }\n\n      function y(e) {\n        return \"greedy\" === m.skipEmptyLines ? \"\" === e.join(\"\").trim() : 1 === e.length && 0 === e[0].length;\n      }\n\n      function g() {\n        return c && h && (k(\"Delimiter\", \"UndetectableDelimiter\", \"Unable to auto-detect delimiting character; defaulted to '\" + b.DefaultDelimiter + \"'\"), h = !1), m.skipEmptyLines && (c.data = c.data.filter(function (e) {\n          return !y(e);\n        })), _() && function () {\n          if (!c) return;\n\n          function e(e, t) {\n            M(m.transformHeader) && (e = m.transformHeader(e, t)), l.push(e);\n          }\n\n          if (Array.isArray(c.data[0])) {\n            for (var t = 0; _() && t < c.data.length; t++) c.data[t].forEach(e);\n\n            c.data.splice(0, 1);\n          } else c.data.forEach(e);\n        }(), function () {\n          if (!c || !m.header && !m.dynamicTyping && !m.transform) return c;\n\n          function e(e, t) {\n            var i,\n                r = m.header ? {} : [];\n\n            for (i = 0; i < e.length; i++) {\n              var n = i,\n                  s = e[i];\n              m.header && (n = i >= l.length ? \"__parsed_extra\" : l[i]), m.transform && (s = m.transform(s, n)), s = v(n, s), \"__parsed_extra\" === n ? (r[n] = r[n] || [], r[n].push(s)) : r[n] = s;\n            }\n\n            return m.header && (i > l.length ? k(\"FieldMismatch\", \"TooManyFields\", \"Too many fields: expected \" + l.length + \" fields but parsed \" + i, f + t) : i < l.length && k(\"FieldMismatch\", \"TooFewFields\", \"Too few fields: expected \" + l.length + \" fields but parsed \" + i, f + t)), r;\n          }\n\n          var t = 1;\n          !c.data.length || Array.isArray(c.data[0]) ? (c.data = c.data.map(e), t = c.data.length) : c.data = e(c.data, 0);\n          m.header && c.meta && (c.meta.fields = l);\n          return f += t, c;\n        }();\n      }\n\n      function _() {\n        return m.header && 0 === l.length;\n      }\n\n      function v(e, t) {\n        return i = e, m.dynamicTypingFunction && void 0 === m.dynamicTyping[i] && (m.dynamicTyping[i] = m.dynamicTypingFunction(i)), !0 === (m.dynamicTyping[i] || m.dynamicTyping) ? \"true\" === t || \"TRUE\" === t || \"false\" !== t && \"FALSE\" !== t && (function (e) {\n          if (s.test(e)) {\n            var t = parseFloat(e);\n            if (n < t && t < r) return !0;\n          }\n\n          return !1;\n        }(t) ? parseFloat(t) : u.test(t) ? new Date(t) : \"\" === t ? null : t) : t;\n        var i;\n      }\n\n      function k(e, t, i, r) {\n        var n = {\n          type: e,\n          code: t,\n          message: i\n        };\n        void 0 !== r && (n.row = r), c.errors.push(n);\n      }\n\n      this.parse = function (e, t, i) {\n        var r = m.quoteChar || '\"';\n        if (m.newline || (m.newline = function (e, t) {\n          e = e.substring(0, 1048576);\n          var i = new RegExp(j(t) + \"([^]*?)\" + j(t), \"gm\"),\n              r = (e = e.replace(i, \"\")).split(\"\\r\"),\n              n = e.split(\"\\n\"),\n              s = 1 < n.length && n[0].length < r[0].length;\n          if (1 === r.length || s) return \"\\n\";\n\n          for (var a = 0, o = 0; o < r.length; o++) \"\\n\" === r[o][0] && a++;\n\n          return a >= r.length / 2 ? \"\\r\\n\" : \"\\r\";\n        }(e, r)), h = !1, m.delimiter) M(m.delimiter) && (m.delimiter = m.delimiter(e), c.meta.delimiter = m.delimiter);else {\n          var n = function (e, t, i, r, n) {\n            var s, a, o, h;\n            n = n || [\",\", \"\\t\", \"|\", \";\", b.RECORD_SEP, b.UNIT_SEP];\n\n            for (var u = 0; u < n.length; u++) {\n              var f = n[u],\n                  d = 0,\n                  l = 0,\n                  c = 0;\n              o = void 0;\n\n              for (var p = new E({\n                comments: r,\n                delimiter: f,\n                newline: t,\n                preview: 10\n              }).parse(e), g = 0; g < p.data.length; g++) if (i && y(p.data[g])) c++;else {\n                var _ = p.data[g].length;\n                l += _, void 0 !== o ? 0 < _ && (d += Math.abs(_ - o), o = _) : o = _;\n              }\n\n              0 < p.data.length && (l /= p.data.length - c), (void 0 === a || d <= a) && (void 0 === h || h < l) && 1.99 < l && (a = d, s = f, h = l);\n            }\n\n            return {\n              successful: !!(m.delimiter = s),\n              bestDelimiter: s\n            };\n          }(e, m.newline, m.skipEmptyLines, m.comments, m.delimitersToGuess);\n\n          n.successful ? m.delimiter = n.bestDelimiter : (h = !0, m.delimiter = b.DefaultDelimiter), c.meta.delimiter = m.delimiter;\n        }\n        var s = w(m);\n        return m.preview && m.header && s.preview++, a = e, o = new E(s), c = o.parse(a, t, i), g(), d ? {\n          meta: {\n            paused: !0\n          }\n        } : c || {\n          meta: {\n            paused: !1\n          }\n        };\n      }, this.paused = function () {\n        return d;\n      }, this.pause = function () {\n        d = !0, o.abort(), a = M(m.chunk) ? \"\" : a.substring(o.getCharIndex());\n      }, this.resume = function () {\n        t.streamer._halted ? (d = !1, t.streamer.parseChunk(a, !0)) : setTimeout(t.resume, 3);\n      }, this.aborted = function () {\n        return e;\n      }, this.abort = function () {\n        e = !0, o.abort(), c.meta.aborted = !0, M(m.complete) && m.complete(c), a = \"\";\n      };\n    }\n\n    function j(e) {\n      return e.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    }\n\n    function E(e) {\n      var S,\n          O = (e = e || {}).delimiter,\n          x = e.newline,\n          I = e.comments,\n          T = e.step,\n          D = e.preview,\n          A = e.fastMode,\n          L = S = void 0 === e.quoteChar || null === e.quoteChar ? '\"' : e.quoteChar;\n      if (void 0 !== e.escapeChar && (L = e.escapeChar), (\"string\" != typeof O || -1 < b.BAD_DELIMITERS.indexOf(O)) && (O = \",\"), I === O) throw new Error(\"Comment character same as delimiter\");\n      !0 === I ? I = \"#\" : (\"string\" != typeof I || -1 < b.BAD_DELIMITERS.indexOf(I)) && (I = !1), \"\\n\" !== x && \"\\r\" !== x && \"\\r\\n\" !== x && (x = \"\\n\");\n      var F = 0,\n          z = !1;\n      this.parse = function (r, t, i) {\n        if (\"string\" != typeof r) throw new Error(\"Input must be a string\");\n        var n = r.length,\n            e = O.length,\n            s = x.length,\n            a = I.length,\n            o = M(T),\n            h = [],\n            u = [],\n            f = [],\n            d = F = 0;\n        if (!r) return C();\n\n        if (A || !1 !== A && -1 === r.indexOf(S)) {\n          for (var l = r.split(x), c = 0; c < l.length; c++) {\n            if (f = l[c], F += f.length, c !== l.length - 1) F += x.length;else if (i) return C();\n\n            if (!I || f.substring(0, a) !== I) {\n              if (o) {\n                if (h = [], k(f.split(O)), R(), z) return C();\n              } else k(f.split(O));\n\n              if (D && D <= c) return h = h.slice(0, D), C(!0);\n            }\n          }\n\n          return C();\n        }\n\n        for (var p = r.indexOf(O, F), g = r.indexOf(x, F), _ = new RegExp(j(L) + j(S), \"g\"), m = r.indexOf(S, F);;) if (r[F] !== S) {\n          if (I && 0 === f.length && r.substring(F, F + a) === I) {\n            if (-1 === g) return C();\n            F = g + s, g = r.indexOf(x, F), p = r.indexOf(O, F);\n          } else if (-1 !== p && (p < g || -1 === g)) f.push(r.substring(F, p)), F = p + e, p = r.indexOf(O, F);else {\n            if (-1 === g) break;\n            if (f.push(r.substring(F, g)), w(g + s), o && (R(), z)) return C();\n            if (D && h.length >= D) return C(!0);\n          }\n        } else for (m = F, F++;;) {\n          if (-1 === (m = r.indexOf(S, m + 1))) return i || u.push({\n            type: \"Quotes\",\n            code: \"MissingQuotes\",\n            message: \"Quoted field unterminated\",\n            row: h.length,\n            index: F\n          }), E();\n          if (m === n - 1) return E(r.substring(F, m).replace(_, S));\n\n          if (S !== L || r[m + 1] !== L) {\n            if (S === L || 0 === m || r[m - 1] !== L) {\n              -1 !== p && p < m + 1 && (p = r.indexOf(O, m + 1)), -1 !== g && g < m + 1 && (g = r.indexOf(x, m + 1));\n              var y = b(-1 === g ? p : Math.min(p, g));\n\n              if (r.substr(m + 1 + y, e) === O) {\n                f.push(r.substring(F, m).replace(_, S)), r[F = m + 1 + y + e] !== S && (m = r.indexOf(S, F)), p = r.indexOf(O, F), g = r.indexOf(x, F);\n                break;\n              }\n\n              var v = b(g);\n\n              if (r.substring(m + 1 + v, m + 1 + v + s) === x) {\n                if (f.push(r.substring(F, m).replace(_, S)), w(m + 1 + v + s), p = r.indexOf(O, F), m = r.indexOf(S, F), o && (R(), z)) return C();\n                if (D && h.length >= D) return C(!0);\n                break;\n              }\n\n              u.push({\n                type: \"Quotes\",\n                code: \"InvalidQuotes\",\n                message: \"Trailing quote on quoted field is malformed\",\n                row: h.length,\n                index: F\n              }), m++;\n            }\n          } else m++;\n        }\n\n        return E();\n\n        function k(e) {\n          h.push(e), d = F;\n        }\n\n        function b(e) {\n          var t = 0;\n\n          if (-1 !== e) {\n            var i = r.substring(m + 1, e);\n            i && \"\" === i.trim() && (t = i.length);\n          }\n\n          return t;\n        }\n\n        function E(e) {\n          return i || (void 0 === e && (e = r.substring(F)), f.push(e), F = n, k(f), o && R()), C();\n        }\n\n        function w(e) {\n          F = e, k(f), f = [], g = r.indexOf(x, F);\n        }\n\n        function C(e) {\n          return {\n            data: h,\n            errors: u,\n            meta: {\n              delimiter: O,\n              linebreak: x,\n              aborted: z,\n              truncated: !!e,\n              cursor: d + (t || 0)\n            }\n          };\n        }\n\n        function R() {\n          T(C()), h = [], u = [];\n        }\n      }, this.abort = function () {\n        z = !0;\n      }, this.getCharIndex = function () {\n        return F;\n      };\n    }\n\n    function _(e) {\n      var t = e.data,\n          i = a[t.workerId],\n          r = !1;\n      if (t.error) i.userError(t.error, t.file);else if (t.results && t.results.data) {\n        var n = {\n          abort: function () {\n            r = !0, m(t.workerId, {\n              data: [],\n              errors: [],\n              meta: {\n                aborted: !0\n              }\n            });\n          },\n          pause: y,\n          resume: y\n        };\n\n        if (M(i.userStep)) {\n          for (var s = 0; s < t.results.data.length && (i.userStep({\n            data: t.results.data[s],\n            errors: t.results.errors,\n            meta: t.results.meta\n          }, n), !r); s++);\n\n          delete t.results;\n        } else M(i.userChunk) && (i.userChunk(t.results, n, t.file), delete t.results);\n      }\n      t.finished && !r && m(t.workerId, t.results);\n    }\n\n    function m(e, t) {\n      var i = a[e];\n      M(i.userComplete) && i.userComplete(t), i.terminate(), delete a[e];\n    }\n\n    function y() {\n      throw new Error(\"Not implemented.\");\n    }\n\n    function w(e) {\n      if (\"object\" != typeof e || null === e) return e;\n      var t = Array.isArray(e) ? [] : {};\n\n      for (var i in e) t[i] = w(e[i]);\n\n      return t;\n    }\n\n    function v(e, t) {\n      return function () {\n        e.apply(t, arguments);\n      };\n    }\n\n    function M(e) {\n      return \"function\" == typeof e;\n    }\n\n    return o && (f.onmessage = function (e) {\n      var t = e.data;\n      void 0 === b.WORKER_ID && t && (b.WORKER_ID = t.workerId);\n      if (\"string\" == typeof t.input) f.postMessage({\n        workerId: b.WORKER_ID,\n        results: b.parse(t.input, t.config),\n        finished: !0\n      });else if (f.File && t.input instanceof File || t.input instanceof Object) {\n        var i = b.parse(t.input, t.config);\n        i && f.postMessage({\n          workerId: b.WORKER_ID,\n          results: i,\n          finished: !0\n        });\n      }\n    }), (l.prototype = Object.create(u.prototype)).constructor = l, (c.prototype = Object.create(u.prototype)).constructor = c, (p.prototype = Object.create(p.prototype)).constructor = p, (g.prototype = Object.create(u.prototype)).constructor = g, b;\n  });\n});\n\nconst cachedCSVs = {};\n\nfunction downloadCSV(url) {\n  const cached = cachedCSVs[url];\n  if (cached) return Promise.resolve(cached);\n  return new Promise(resolve => {\n    papaparse_min.parse(url, {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      comments: \"#\",\n      transformHeader: h => h.trim().toLocaleLowerCase(),\n      complete: r => resolve(r)\n    });\n  }).then(r => {\n    cachedCSVs[url] = r;\n    return r;\n  });\n}\n\nconst handlers = {\n  download: async msg => {\n    const {\n      url\n    } = msg;\n    const file = await downloadCSV(url);\n    return {\n      file\n    };\n  },\n  save: async msg => {\n    const {\n      fileHandle,\n      data\n    } = msg; // convert to CSV\n\n    const contents = papaparse_min.unparse(data); // Create a FileSystemWritableFileStream to write to.\n\n    const writable = await fileHandle.createWritable(); // Write the contents of the file to the stream.\n\n    await writable.write(contents); // Close the file and write the contents to disk.\n\n    await writable.close();\n    return {};\n  },\n  parse: async msg => {\n    const {\n      source\n    } = msg;\n    return new Promise(resolve => {\n      papaparse_min.parse(source, {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n        comments: \"#\",\n        transformHeader: h => h.trim().toLocaleLowerCase(),\n        complete: r => resolve({\n          file: r\n        })\n      });\n    });\n  },\n  unparse: async msg => {\n    const {\n      data\n    } = msg;\n    const text = papaparse_min.unparse(data);\n    return {\n      text\n    };\n  }\n};\n\nasync function handleMessage(event) {\n  const message = event.data;\n  const {\n    id,\n    worker,\n    type\n  } = message;\n  if (worker !== \"csv\") return;\n\n  try {\n    const handler = handlers[type];\n    const resp = await handler(message);\n    self.postMessage(_extends({\n      id,\n      worker\n    }, resp));\n  } catch (e) {\n    self.postMessage({\n      id,\n      worker,\n      error: e + \"\"\n    });\n  }\n}\n\nself.addEventListener(\"message\", handleMessage);\nconsole.debug(`jacdac csv: worker registered`);\n//# sourceMappingURL=csv-worker.js.map\n"],"names":[],"sourceRoot":""}