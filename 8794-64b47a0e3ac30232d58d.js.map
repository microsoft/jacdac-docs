{"version":3,"file":"8794-64b47a0e3ac30232d58d.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardIndexedScreen.tsx"],"sourcesContent":["import React, {\n    CSSProperties,\n    useContext,\n    useEffect,\n    useId,\n    useRef,\n} from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { IndexedScreenServer } from \"../../../jacdac-ts/src/servers/indexedscreenserver\"\nimport { CHANGE, IndexedScreenReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useRegister from \"../hooks/useRegister\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport DashboardRegisterValueFallback from \"./DashboardRegisterValueFallback\"\nimport DarkModeContext from \"../ui/DarkModeContext\"\nimport { Grid } from \"@mui/material\"\nimport RegisterInput from \"../RegisterInput\"\n\nconst MIN_OPACITY = 0.4\n\nexport default function DashboardIndexedScreen(props: DashboardServiceProps) {\n    const { service, visible, expanded } = props\n    const id = useId()\n    const { darkMode } = useContext(DarkModeContext)\n    const server = useServiceServer<IndexedScreenServer>(\n        service,\n        () => new IndexedScreenServer()\n    )\n\n    const widthRegister = useRegister(service, IndexedScreenReg.Width)\n    const heightRegister = useRegister(service, IndexedScreenReg.Height)\n    const brightnessRegister = useRegister(service, IndexedScreenReg.Brightness)\n\n    const [width] = useRegisterUnpackedValue<[number]>(widthRegister, props)\n    const [height] = useRegisterUnpackedValue<[number]>(heightRegister, props)\n    const [brightness = 1] = useRegisterUnpackedValue<[number]>(\n        brightnessRegister,\n        props\n    )\n\n    const canvasRef = useRef<HTMLCanvasElement>()\n    const contextRef = useRef<CanvasRenderingContext2D>()\n\n    // update canvas size\n    useEffect(() => {\n        contextRef.current = undefined\n        const canvas = canvasRef.current\n        if (canvas) {\n            if (!isNaN(width)) canvas.width = width\n            if (!isNaN(height)) canvas.height = height\n        }\n    }, [width, height])\n\n    // repaint\n    useEffect(() => {\n        if (!visible || !server || !width || !height) return\n        const paint = () => {\n            const canvas = canvasRef.current\n            if (!canvas) return\n\n            const context =\n                contextRef.current ||\n                (contextRef.current = canvas.getContext(\"2d\"))\n            if (!context) return\n\n            const pixels = server?.pixels\n            context.clearRect(0, 0, canvas.width, canvas.height)\n\n            if (!pixels) {\n                context.fillStyle = darkMode === \"dark\" ? \"#999\" : \"#222\"\n                context.fillRect(0, 0, canvas.width, canvas.height)\n            } else {\n                context.putImageData(pixels, 0, 0)\n            }\n        }\n\n        paint()\n        return server.subscribe(CHANGE, paint)\n    }, [server, visible, width, height])\n\n    if (width === undefined || height === undefined)\n        return (\n            <DashboardRegisterValueFallback\n                register={height === undefined ? heightRegister : widthRegister}\n            />\n        )\n\n    const canvasStyle: CSSProperties = {\n        opacity: MIN_OPACITY + brightness * (1 - MIN_OPACITY),\n        border: \"none\",\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"contain\",\n        objectPosition: \"top\",\n        imageRendering: \"pixelated\",\n        display: \"block\",\n    }\n    const parentStyle: CSSProperties = {\n        width: \"clamp(5rem, 90vw, 20rem)\",\n        borderWidth: \"2px\",\n        borderStyle: \"solid\",\n        borderRadius: \"0.25rem\",\n        borderColor: darkMode === \"dark\" ? \"#999\" : \"#222\",\n    }\n\n    return (\n        <>\n            <Grid sx={{ mt: 0.5 }} item xs={12}>\n                <div style={parentStyle}>\n                    <canvas id={id} ref={canvasRef} style={canvasStyle} />\n                </div>{\" \"}\n            </Grid>\n            {expanded && (\n                <Grid item xs={12}>\n                    <RegisterInput\n                        register={brightnessRegister}\n                        visible={visible}\n                        showRegisterName={true}\n                    />\n                </Grid>\n            )}\n        </>\n    )\n}\n"],"names":["MIN_OPACITY","id","useId","useContext","server","useServiceServer","widthRegister","useRegister","IndexedScreenReg","heightRegister","brightnessRegister","useRegisterUnpackedValue","brightness","canvasRef","useRef","contextRef","useEffect","canvas","isNaN","paint","context","pixels","darkMode","width","height","canvasStyle","opacity","border","objectFit","objectPosition","imageRendering","display","parentStyle","borderWidth","borderStyle","borderRadius","borderColor","mt","expanded"],"sourceRoot":""}