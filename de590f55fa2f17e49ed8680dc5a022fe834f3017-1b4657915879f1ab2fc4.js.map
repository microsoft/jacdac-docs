{"version":3,"file":"de590f55fa2f17e49ed8680dc5a022fe834f3017-1b4657915879f1ab2fc4.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD,SAAe;;;;;;;;;;;;;;;;;ACjBf;AAOe,sBAIZ,CACC,GAAM,sBAAN,MACA,GAAM,CAAEA,MAAM,CAAR,aAAwBC,SAAS,CAAjC,iBACFC,iDAAU,CADd,gEACc,CADd,CAEA,GAAM,gBAAoBA,iDAAU,CAApC,6DAAoC,CAApC,CAEA,GAAMC,CAAAA,GAAG,CACL,8BAEWC,EAAE,GAAFA,SAAAA,CAAoBA,EAAD,SAACA,CAApBA,EAAoBA,CAApBA,CAHf,KACI,CADJ,CAIA,GAAMC,CAAAA,QAAQ,CAAGC,YAAY,EAAIA,YAAY,CAAZA,OAAAA,CAAAA,MAAAA,EAA+B,CAAhE,EACA,GAAMC,CAAAA,iBAAiB,CAAG,IAAM,2BAC5B,YAAcC,eAAe,CAACF,YAAD,OAACA,EAAAA,YAAD,SAACA,CAAD,MAACA,CAAD,uBAACA,YAAY,CAAZA,OAAAA,CAAAA,MAAAA,CAAD,EAACA,CAAD,gDAACA,qBAAAA,CAA9B,IAA8BA,EAAD,CAAfE,CAAd,IACKA,CAAAA,eAAe,CAAC,aAAY,GAAZ,kBAAY,OAAZ,sBAAY,CAAZ,YAAhBA,MAAe,CAAfA,CACLC,aAAa,CAACC,6EAAD,CAAbD,CAHJ,EAKA,GAAME,CAAAA,IAAI,cAAG,kIAAb,IAAa,CAAb,CACA,GAAMC,CAAAA,KAAK,CAAGP,QAAQ,uCAAtB,OACA,UACI,mBACI,+GACI,KAAK,CACDA,QAAQ,uCAFhB,qBAOI,0EACI,iHACI,SAAS,CADb,UAEI,IAAI,CAFR,QAGI,IAAI,cACA,iHACI,aADJ,MAEI,OAAO,CAFX,kBAGI,IAAI,CAHR,SAJR,IAIQ,CAJR,CAYI,KAAK,CAtBzB,GAUgB,EADJ,CAPJ,CADJ,CADJ,IA4BI,oBACI,iHACI,aADJ,MAEI,SAAS,CAFb,UAGI,IAAI,CAHR,QAII,IAAI,CAJR,KAKI,KAAK,eALT,IAMI,KAAK,CAPb,GACI,EADJ,CAUP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEc,wBAGZ,CACC,GAAM,mBAAN,MACA,GAAIQ,QAAQ,EAAIC,KAAK,CAALA,OAAAA,CAAhB,QAAgBA,CAAhB,CACI,mBACI,0CAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,SACMD,QAAD,IAACA,CAA+B,wBAC7B,0CAAM,IAAI,CAAV,KAAW,EAAE,CAAb,GAAmB,GAAG,CAAEE,KAAK,CAALA,GAAAA,EAAxB,GAJhB,KAIgB,CADFF,CADN,CADJ,CADJ,IAUK,iBACR;;;;ACVc,gCAOZ,CACC,GAAM,mFAAN,MAQA,GAAMG,CAAAA,aAAa,CAAGC,4BAAS,SAAUC,IAAI,EAAIA,IAAI,CAArD,aAA+B,CAA/B,CACA,GAAMC,CAAAA,SAAS,CAAGC,iBAAO,CAAC,IAAM,8BAC5B,GAAMC,CAAAA,OAAO,CAAGL,aAAH,OAAGA,EAAAA,aAAH,SAAGA,CAAH,MAAGA,CAAAA,aAAa,CAA7B,QACA,GAAMb,CAAAA,GAAG,CACLmB,mBAAmB,GACnBD,OADmB,OACnBA,EAAAA,OADmB,SACnBA,CADmB,MACnBA,CADmB,iBACnBA,OAAO,CAAPA,MAAAA,CAAgBE,GAAG,EAAIC,gCAAU,CADd,GACc,CAAjCH,CADmB,0CACnBA,eAAAA,CAAAA,GAAAA,CAA6CE,GAAG,EAAIA,GAAG,CAF3D,UAEIF,CADmB,CADvB,CAGA,GAAII,CAAAA,CAAC,CAAG,IAAG,GAAH,SAAG,OAAH,uBAAG,CAAH,IAASrB,EAAE,EAAIsB,OAAO,CAAPA,QAAAA,CAAf,EAAeA,CAAf,oDAA6CC,GAAG,EAAI,CAAC,CAArD,OAAR,GACA,UAAYF,CAAC,CAAGA,CAAC,CAADA,MAAAA,CAAJA,MAAIA,CAAJA,CACZ,SAPqB,EAQtB,mCARH,MAQG,CARsB,CAAzB,CAUA,mBACI,8BAAU,OAAO,CAAjB,GACKN,SAAS,CAATA,GAAAA,CAAcS,QAAQ,eACnB,kDACI,GAAG,CAAEA,QAAQ,CADjB,GAEI,QAAQ,CAFZ,SAGI,gBAAgB,CAHpB,iBAII,iBAAiB,CAJrB,kBAKI,SAAS,CACLC,UAAU,EAAID,QAAQ,CAARA,IAAAA,GAAkBE,4CANxC,CAQI,OAAO,CAXvB,IAGY,EADHX,CADL,CADJ,CAgBH;;;;;;;;;;AC7Cc,0BAIZ,CACC,GAAM,gCAAN,MACA,GAAMY,CAAAA,KAAK,CAAGC,gCAAa,CAA3B,KAA2B,CAA3B,CACA,GAAMd,CAAAA,IAAI,CAAGe,KAAK,CAAlB,cAEA,mBACI,wCACKC,cAAc,eACX,gEACI,+CAAY,MAAM,CAAED,KAAK,CAALA,OAAAA,CADxB,MACI,EADJ,CAFR,GAEQ,CAFR,CAMKE,QAAQ,EAARA,IAAAA,EAAAA,aACG,+CAAY,YAAY,CAAxB,MAA0BjB,IAAI,CAPtC,IAOQ,CAPR,cASI,0CAAO,YAAY,CAAnB,MAA4B,KAAK,CAAjC,wBACI,8CAAU,IAAI,CAX1B,OAWY,EADJ,CATJ,CADJ,CAeH;;ACzBc,6BAIZ,CACC,GAAM,yCAAN,MACA,GAAMA,CAAAA,IAAI,CAAGQ,OAAO,CAApB,cACA,GAAML,CAAAA,OAAO,CAAGH,IAAI,CAApB,QACA,GAAIkB,CAAAA,MAAM,CAAGf,OAAO,CAAPA,MAAAA,CAAb,yBAAaA,CAAb,CACA,GAAIgB,gBAAgB,GAApB,UACID,MAAM,CAAGA,MAAM,CAANA,MAAAA,CACLH,KAAK,EAAII,gBAAgB,CAAhBA,OAAAA,CAAyBJ,KAAK,CAA9BI,UAAAA,EAA6C,CAD1DD,CAASA,CAATA,CAIJ,mBACI,8BAAU,OAAO,CAAjB,GACKA,MAAM,CAANA,GAAAA,CAAWH,KAAK,eACb,gCACI,GAAG,SAAUA,KAAK,CADtB,WAEI,KAAK,CAAEP,OAAO,CAAPA,KAAAA,CAAcO,KAAK,CAF9B,UAEWP,CAFX,CAGI,QAAQ,CANxB,aAGY,EADHU,CADL,CADJ,CAWH;;;;;;;;;;;;;;;;;;;;;;;;;;ACdD,4BAAgD,CAC5C,MAAOE,CAAAA,IAAI,CAAJA,MAAAA,CAAAA,IAAAA,CAAiBC,CAAC,EAAIA,CAAC,CAADA,IAAAA,EAA7B,MAAOD,CAAP,CAGJ,CAAe,4BAMZ,CACC,GAAM,iDAAN,MACA,GAAME,CAAAA,GAAG,CAAGC,yBAAZ,GAEA,GAAM,gBAAN,QACA,GAAMC,CAAAA,iBAAiB,CACnBC,OAAO,CAAPA,MAAAA,CAAAA,MAAAA,EAAyBC,aAAa,CAAbA,OAAa,CAAbA,CAAAA,CAAAA,CAD7B,CACID,CADJ,CAEA,GAAME,CAAAA,gBAAgB,CAAG,CAAC,KAAI,GAAJ,UAAI,OAAJ,cAAI,CAAJ,SAAD,KAAzB,kBACA,GAAMC,CAAAA,QAAQ,CAAd,iBACA,GAAMC,CAAAA,UAAU,CACZJ,OAAO,CAAPA,SAAAA,EACA3B,aAAa,CAAbA,OAAAA,CAAAA,IAAAA,CAA2BgC,CAAC,EAAIC,gCAAU,SAF9C,CAE8C,CAA1CjC,CAFJ,CAGA,GAAMkC,CAAAA,WAAW,sEAAG,kBAAiB,CACjC,GAAM3B,CAAAA,GAAG,CAAG,EAAC4B,IAAD,OAACA,EAAAA,IAAD,SAACA,EAAAA,IAAI,CAAL,QACNC,0CAAAA,CAAkBT,OAAO,CADnB,UACNS,CADM,CAENC,qCAAa,SAFnB,IAEmB,CAFnB,CAGA,GAAIC,UAAU,EAAd,WAA8B,CAC1B,GAAMC,CAAAA,YAAY,MAAS7B,CAAAA,OAAO,CAAPA,yBAAAA,CAA3B,GAA2BA,CAA3B,CACA,GAAI,CAAC8B,OAAL,GAAgB,OAChB,GAAMC,CAAAA,OAAO,CAAGF,YAAH,OAAGA,EAAAA,YAAH,SAAGA,CAAH,MAAGA,CAAAA,YAAY,CAA5B,QACAD,UAAU,CAAC,CAAXA,OAAW,CAAD,CAAVA,CAJJ,KAKO,IAAIA,UAAU,EAAIV,aAAa,CAA/B,OAA+B,CAA/B,CAA0C,CAC7C,QACA,GAAI,CACAc,GAAG,CAAG,+BAANA,GAAM,CAANA,CACA,GAAMC,CAAAA,GAAG,CAAGD,GAAG,CAAHA,WAAAA,CAAgBf,OAAO,CAAnC,UAAYe,CAAZ,CACA,KAAMhC,CAAAA,OAAO,CAAPA,eAAAA,CAAAA,GAAAA,CAAN,IAAMA,CAAN,CACAkC,OAAO,CAAPA,GAAAA,CAAYC,8BAAW,CAAvBD,GAAuB,CAAvBA,EAA8B;AAC9B,GAAM,cAAmBF,CAAAA,GAAG,CAA5B,OAAyBA,EAAzB,CACA,GAAMI,CAAAA,QAAO,CAAGC,MAAM,CAANA,MAAAA,CACJC,EAAE,sBAAI,CAAC,YAACA,EAAE,CAAH,iCAACA,QAAAA,CAAN,MAAK,CAAL,CADED,CAAAA,EAAAA,GAAAA,CAEPC,EAAE,EAAIA,EAAJ,OAAIA,EAAAA,EAAJ,SAAIA,CAAJ,MAAIA,CAAAA,EAAE,CAFjB,OAAgBD,CAAhB,CAGA,GAAI,CAACP,OAAL,GAAgB,OAChBF,UAAU,CAAVA,QAAU,CAAVA,CAVJ,QAWU,UACN,uDAEP,CAhBM,KAgBA,MAAM5B,CAAAA,OAAO,CAAPA,eAAAA,CAAAA,GAAAA,CAAN,IAAMA,CAAN,CAzBM,SAAXwB,SAAAA,CAAAA,WAAAA,CAAW,EAAXA,CAAW,qCAAjB,CAAiB,EAAjB,CA4BA,mBACI,8CACI,SAAS,CADb,gBAEI,eAAe,CAAE,CACbxB,OAAO,CAAEuC,8BAAW,CAACvC,OAAO,CADf,YACO,CADP,CAEbwC,YAAY,CAAExC,OAAO,CAJ7B,YAEqB,CAFrB,CAMI,OAAO,CANX,YAOI,QAAQ,CAPZ,SAQI,OAAO,CARX,aAUKQ,cAAc,eACX,gEACI,+CAAY,MAAM,CAAER,OAAO,CAD/B,MACI,EADJ,CAXR,GAWQ,CAXR,CAeKiB,OAAO,CAAPA,IAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAhBT,GAgBSA,CAfL,CADJ,CAmBH;;;;AClFc,iCAA0D,CACrE,GAAM,MAAN,MACA,GAAM,kBAAN,IACA,GAAMwB,CAAAA,cAAc,CAAG/C,iBAAO,CAAC,IAAMqC,OAAO,CAAPA,GAAAA,CAAYW,CAAC,EAAIA,CAAC,CAAzB,IAAOX,CAAP,CAAiC,CAA/D,OAA+D,CAAjC,CAA9B,CACA,GAAMY,CAAAA,MAAM,CAAGjD,iBAAO,CAAC,IAAMqC,OAAO,CAAPA,GAAAA,CAAYW,CAAC,EAAIA,CAAC,CAAzB,KAAOX,CAAP,CAAkC,CAAxD,OAAwD,CAAlC,CAAtB,CACA,mBACI,iDACI,oBAAoB,CADxB,QAEI,cAAc,CAFlB,eAGI,MAAM,CAJd,MACI,EADJ,CAOH;;;;ACbD;AAEA;AAEA;AAeA,GAAMa,CAAAA,MAAM,CAAZ,cAEA,GAAMC,CAAAA,OAAO,CAAG,CACZC,IAAI,CAAKF,MAAL,CADQ,OAEZG,MAAM,CAAKH,MAAL,CAFM,SAGZ1D,KAAK,CAAK0D,MAAL,CAHO,QAIZI,GAAG,CAAKJ,MAAL,CAJP,KAAgB,CAAhB,CAOA,GAAMK,CAAAA,UAAU,CAAGC,0BAAM,CAANA,mBAAM,CAANA,CAAa,CAC5B,MAAML,OAAO,CAAb,MAAuB,CACnBM,QAAQ,CAFgB,GACL,CADK,CAI5B,OAAON,OAAO,CAAd,QAA0B,CACtBO,OAAO,CADe,eAEtBC,MAAM,CAFgB,QAGtBC,SAAS,CAPe,YAIF,CAJE,CAS5B,OAAOT,OAAO,CAAd,OAAyB,CACrBU,QAAQ,CAVgB,EASH,CATG,CAY5B,OAAOV,OAAO,CAAd,KAAuB,CACnBW,YAAY,CAbpB,EAY2B,CAZK,CAAbN,CAAnB,CAiBe,2BAQZ,CACC,GAAM,8GAAN,MASA,GAAM,gBAAN,QACA,GAAM,yBAAwBO,kBAAQ,CAAtC,SAAsC,CAAtC,CACA;AACA,GAAM,iCAAgCA,kBAAQ,CAA9C,EAA8C,CAA9C,CAEA,GAAMC,CAAAA,oBAAoB,CAAGC,iBAAiB,GAA9C,UACA,GAAMC,CAAAA,sBAAsB,CAAG,CAAC,EAAChE,mBAAD,OAACA,EAAAA,mBAAD,SAACA,EAAAA,mBAAmB,CAApD,MAAgC,CAAhC,CACA,GAAMiE,CAAAA,mBAAmB,CAAG,CAAC,EAAClD,gBAAD,OAACA,EAAAA,gBAAD,SAACA,EAAAA,gBAAgB,CAA9C,MAA6B,CAA7B,CACA,GAAMM,CAAAA,OAAO,CACT0C,iBAAiB,GAAjBA,SAAAA,GACArE,aADAqE,GAAAA,IACArE,EAAAA,aADAqE,GAAAA,IAAAA,EACArE,CADAqE,IAAAA,EACArE,CAAAA,aAAa,CAAbA,OAAAA,CAAAA,IAAAA,CACIO,GAAG,EAAIiE,+BAAS,CAATA,GAAS,CAATA,EAAkBjE,GAAG,CAAHA,UAAAA,GAHjC,iBAEIP,CADAqE,CADJ,CAMA,mBACI,gCAAY,SAAS,CAAEd,OAAO,CAA9B,mBACI,qDAAkB,MAAM,CAAE7C,OAAO,CAAjC,OAA0C,UAAU,CADxD,IACI,EADJ,cAEI,oDACK+D,eAAe,eACZ,+CACI,SAAS,CAAElB,OAAO,CADtB,MAEI,KAAK,CAFT,gBAGI,YAAY,CAHhB,mBAKI,2DACI,EAAE,CACEmB,aAAa,EAAIhE,OAAO,CAAxBgE,aAAAA,CAAAA,aACmBhE,OAAO,CAAPA,aAAAA,CADnBgE,OAAAA,CAAAA,GAAAA,CAFR,oCAOKhE,OAAO,CAdxB,IAOY,CALJ,CAFR,cAkBI,+CAAY,OAAO,CAAnB,QAA4B,SAAS,CAArC,OACK4D,sBAAsB,eACnB,sCACI,OAAO,CADX,QAEI,gBAAgB,CAFpB,eAGI,mBAAmB,CAL/B,mBAEQ,EAFR,CAQKC,mBAAmB,eAChB,mCACI,OAAO,CADX,QAEI,aAAa,CAFjB,eAGI,gBAAgB,CAZ5B,gBASQ,EATR,CAeK5C,OAAO,eACJ,iDACI,oBAAoB,CADxB,cAEI,0BAA0B,CAF9B,QAGI,cAAc,CAAEA,OAAO,CAH3B,OAII,MAAM,CAJV,YAKI,SAAS,CALb,eAMI,YAAY,CAtBxB,IAgBQ,EAhBR,CAyBK,CAAC,EAACmB,OAAD,OAACA,EAAAA,OAAD,SAACA,EAAAA,OAAO,CAAT,MAAC,CAAD,eACG,yCAAM,GAAG,CAAT,UAAsB,KAAK,CAA3B,MACKA,OADL,OACKA,EAAAA,OADL,SACKA,CADL,MACKA,CAAAA,OAAO,CAAPA,GAAAA,CAAa,0BACV,8CAAU,GAAG,UAAb,iBACI,uCAAmB,GAAG,CA/C9C,MA+CwB,EADJ,CADHA,CADL,CA1BR,CAlBJ,CAqDK,uBACG,CADH,wBAEG,CAFH,kCAGO,oEACI,aAAa,CAzD7B,aAwDY,EAxDZ,cA4DI,4DAAiB,MAAM,CAAEpC,OAAF,OAAEA,EAAAA,OAAF,SAAEA,CAAF,MAAEA,CAAAA,OAAO,CA9DxC,MA8DQ,EA5DJ,CAFJ,cAgEI,oDACKiB,OAAO,eACJ,kCACI,OAAO,CADX,QAEI,OAAO,CAFX,QAGI,IAAI,CAHR,YAII,UAAU,CAvE9B,UAmEgB,EAFR,CAhEJ,CADJ,CA6EH;;;;;;;;ACpJD,GAAM2B,CAAAA,iBAAM,CAAZ,aAEA,GAAMC,CAAAA,kBAAO,CAAG,CACZC,IAAI,CAAKF,iBAAL,CADR,MAAgB,CAAhB,CAIA,GAAMqB,CAAAA,UAAU,CAAGf,0BAAM,CAANA,oBAAM,CAANA,CAAa,UAAC,CAAD,KAAC,EAAD,WAAgB,CAC5C,MAAML,kBAAO,CAAb,MAAuB,CACnBW,YAAY,CAAEU,KAAK,CAALA,OAAAA,CAFU,CAEVA,CADK,CADqB,CAAhB,CAAhC,CAAmBhB,CAAnB,CAMe,0BAWZ,CACC,GAAM,mKAAN,MAYA,GAAMiB,CAAAA,OAAO,CAAGC,6BAAU,CAAC,CAA3B,YAA2B,CAAD,CAA1B,CACA,GAAMC,CAAAA,QAAQ,CAAGC,8BAAW,CAAC,CAA7B,YAA6B,CAAD,CAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAG/B,YAAY,GAApC,UACA,GAAMgC,CAAAA,eAAe,CAAGC,qCAAkB,CAACN,OAAD,OAACA,EAAAA,OAAD,SAACA,CAAD,MAACA,CAAAA,OAAO,CAAlD,MAA0C,CAA1C,CAEA,mBACI,gCAAY,SAAS,CAArB,KAAsB,OAAO,CAA7B,EAAkC,SAAS,CAAEtB,kBAAO,CAApD,MACK,kBACGsB,OAAO,CAAPA,GAAAA,CAAYO,MAAM,eACd,wDAAM,GAAG,CAAEA,MAAM,CAAjB,GAAsB,IAAI,CAA1B,oCACI,+CACI,MAAM,CADV,OAEI,eAAe,CAFnB,KAGI,eAAe,CAHnB,gBAII,YAAY,CAJhB,aAKI,YAAY,CAThC,kBAIgB,EADJ,CADJP,CAFR,CAaKI,eAAe,EACZF,QAAQ,CAARA,GAAAA,CAAarE,OAAO,EAAI,CACpB,mBACI,wDAAM,GAAG,CAAEA,OAAO,CAAlB,OAA2B,IAAI,CAA/B,oCACI,iCACI,OAAO,CADX,QAEI,aAAa,CAFjB,cAGI,eAAe,CAHnB,gBAII,cAAc,CAJlB,eAKI,mBAAmB,CALvB,oBAMI,gBAAgB,CANpB,iBAOI,iBAAiB,CAT7B,iBAEQ,EADJ,CADJ,CAhBhB,CAeYqE,CAdR,CADJ,CAgCH;;;;;;;;;;AC5Ec,wBAA+D,CAC1E,GAAM,iBAAN,MACA,GAAM,mBAAwB7F,oBAAU,CAAxC,6BAAwC,CAAxC,CACA,GAAM,gBAAoBA,oBAAU,CAApC,0BAAoC,CAApC,CACA,GAAMS,CAAAA,IAAI,CAAG0F,4BAAQ,CAAC,CAAtB,IAAsB,CAAD,CAArB,CACA,GAAMC,CAAAA,UAAU,SAAhB,KACA,GAAMjG,CAAAA,QAAQ,CAAGL,MAAM,EAAIA,MAAM,CAANA,OAAAA,CAAAA,UAAAA,EAA6B,CAAxD,EACA,GAAMkD,CAAAA,WAAW,CAAG,IAAM,qBACtB,YAAcjD,SAAS,CAACD,MAAD,OAACA,EAAAA,MAAD,SAACA,CAAD,MAACA,CAAD,iBAACA,MAAM,CAANA,OAAAA,CAAAA,UAAAA,CAAD,EAACA,CAAD,0CAACA,eAAAA,CAAxB,IAAwBA,EAAD,CAATC,CAAd,IACKA,CAAAA,SAAS,CAAC,OAAM,GAAN,YAAM,OAAN,gBAAM,CAAN,YAAVA,UAAS,CAATA,CACLQ,aAAa,CAACC,6CAAD,CAAbD,CAHJ,EAKA,mBACI,4CACI,KAAK,CACDJ,QAAQ,2CAFhB,yBAOI,6CACI,yCACI,OAAO,CADX,YAEI,SAAS,CAFb,UAGI,IAAI,CAHR,QAII,KAAK,CAAEkG,6BAAQ,CAJnB,IAImB,CAJnB,CAKI,IAAI,CAdpB,IASY,EADJ,CAPJ,CADJ,CAmBH;;;;ACrCD;AAEA;AAIe,iCAIZ,CACC,GAAM,yBAAN,MACA,GAAI,EAACC,OAAD,OAACA,EAAAA,OAAD,SAACA,EAAAA,OAAO,CAAZ,MAAI,CAAJ,CAAsB,YAEtB,GAAMC,CAAAA,KAAK,CAAGvF,IAAH,OAAGA,EAAAA,IAAH,SAAGA,CAAH,MAAGA,CAAAA,IAAI,CAAlB,WACA,GAAMN,CAAAA,KAAK,CAAX,cACA,mBACI,4CAAS,KAAK,CAAd,oBACI,yCACI,KAAK,CAAE,CAAE8F,cAAc,CAD3B,MACW,CADX,CAEI,IAAI,CAFR,0BAGI,SAAS,CAHb,IAII,SAAS,CAJb,KAKI,SAAS,CALb,UAMI,IAAI,CANR,QAOI,IAAI,cAAE,4CAPV,IAOU,CAPV,CAQI,KAAK,CAVjB,KAEQ,EADJ,CADJ,CAcH;;;;;;;;;;;;;;;;AClBc,yCAKZ,wBACC,GAAM,0BAAN,MACA,GAAM,iBAAgBvB,kBAAQ,CAA9B,CAA8B,CAA9B,CAEA,GAAM7C,CAAAA,IAAI,CAAGqE,6DAAuC,CAApD,YAAoD,CAApD,CACA,GAAMC,CAAAA,eAAe,CAAG,kBAGnB,CACDC,MAAM,CAANA,QAAM,CAANA,CAJJ,EAOA;AACA,GACI,OACA,EAACC,UAAD,OAACA,EAAAA,UAAD,SAACA,EAAD,oBAACA,UAAU,CAAX,cAACA,EAAD,2BAACA,EAAAA,kBAAAA,CADD,MACA,CADA,EAEA,EAAEtF,gCAAU,CAAVA,UAAU,CAAVA,EAA0BgE,+BAAS,CAAnChE,UAAmC,CAAnCA,EAAmDuF,6BAAO,CAHhE,UAGgE,CAA5D,CAHJ,CAKI,YAEJ,GAAIC,CAAAA,KAAK,CAAT,EACA,mBACI,8DACI,yCACI,KAAK,CADT,IAEI,QAAQ,CAFZ,gBAGI,aAHJ,8BAKK,sBACWC,CAAC,EAAI,CAAC,CADjB,OAEQA,CAAC,eACF,wCAAK,GAAG,CAAR,EAAa,KAAK,CATlC,CASgB,EAHP,CALL,CADJ,cAYI,6CAAU,KAAK,CAAf,IAAsB,KAAK,CAAED,KAA7B,iBACI,4CACI,KAAK,CAAE,IACHE,2BAAQ,iBAAmB,CACvBC,QAAQ,CADe,MAEvBC,WAAW,CAFY,MAGvBC,OAAO,CAHXH,IAA2B,CAAnB,CAARA,CAFR,QAQI,IAAI,CAtBpB,YAcY,EADJ,CAZJ,CADJ,CA2BH;;AC5DD;AAGA;AAUA,GAAM5C,CAAAA,0BAAM,CAAZ,sBAEA,GAAMC,CAAAA,2BAAO,CAAG,CACZC,IAAI,CAAKF,0BAAL,CADQ,OAEZgD,KAAK,CAAKhD,0BAAL,CAFO,QAGZiD,IAAI,CAAKjD,0BAAL,CAHR,MAAgB,CAAhB,CAMA,GAAMkD,CAAAA,IAAI,CAAG5C,0BAAM,CAANA,KAAM,CAANA,CAAc,UAAC,CAAD,KAAC,EAAD,WAAgB,CACvC,MAAML,2BAAO,CAAb,MAAuB,CACnBW,YAAY,CAAEU,KAAK,CAALA,OAAAA,CAFqB,CAErBA,CADK,CADgB,CAKvC,OAAOrB,2BAAO,CAAd,OAAyB,CACrB,UAAW,CAAEkD,aAAa,CANS,QAMxB,CADU,CALc,CASvC,OAAOlD,2BAAO,CAAd,MAAwB,CACpBQ,MAAM,CAAEa,KAAK,CAALA,OAAAA,CAVW,GAUXA,CADY,CATe,CAAhB,CAA3B,CAAahB,CAAb,CAcA,0BAA4D,CACxD,GAAM,SAAN,MAEA,GAAM8C,CAAAA,UAAU,CAAGC,mCAAgB,QAAnC,IAAmC,CAAnC,CAEA,mBACI,qDACI,0BAAI,SAAS,CAAEpD,2BAAO,CAAtB,OACKqD,MAAM,CAANA,IAAAA,GAAAA,GAAAA,EAA0BA,MAAM,CAAhCA,IAA0BA,CAD/B,kBAEI,gCAJZ,UAIY,CAFJ,CADJ,CADJ,CAUJ,4BAGG,CACC,GAAM,gBAAN,MAEA,GAAIC,CAAAA,WAAW,CAAGrB,OAAO,CAAPA,SAAAA,CAAkBsB,CAAC,EAAI,CAAC,CAACA,CAAC,CAA5C,YAAkBtB,CAAlB,CACA,GAAIqB,WAAW,CAAf,EAAqBA,WAAW,CAAGrB,OAAO,CAArBqB,MAAAA,CACrB,GAAME,CAAAA,YAAY,CAAGvB,OAAO,CAAPA,KAAAA,CAAAA,CAAAA,CAArB,WAAqBA,CAArB,CACA,GAAMwB,CAAAA,WAAW,CAAGxB,OAAO,CAAPA,KAAAA,CAApB,WAAoBA,CAApB,CAEA,mBACI,wCACK,CAAC,CAAD,oBAAW,8BADhB,KACgB,CADhB,CAEK,CAAC,CAACuB,YAAY,CAAd,qBACG,8BACKA,YAAY,CAAZA,GAAAA,CAAiBH,MAAM,eACpB,gCAAY,GAAG,CAAEA,MAAM,CAAvB,KAA8B,MAAM,CALpD,MAKgB,EADHG,CADL,CAHR,CASK,CAAC,CAACC,WAAW,CAAb,qBACG,qDACI,8BADJ,kBACI,CADJ,cAEI,8BACKA,WAAW,CAAXA,GAAAA,CAAgBJ,MAAM,eACnB,gCAAY,GAAG,CAAEA,MAAM,CAAvB,KAA8B,MAAM,CAf5D,MAewB,EADHI,CADL,CAFJ,CAVR,CADJ,CAwBJ,CAAe,mCAMZ,CACC,GAAM,gEAAN,MAQA,GAAI,CAAJ,WACI,mBACI,0CAAO,QAAQ,CAAf,2BAA2C9D,YAAY,CAAZA,QAAAA,CAA3C,EAA2CA,CAA3C,KAEK4C,UAAU,CAHnB,UACI,CADJ,CAKJ,GAAM,SAAN,WACA,GAAMmB,CAAAA,KAAK,CAAGzC,+BAAS,CAAvB,UAAuB,CAAvB,CAEA,mBACI,0BAAM,SAAS,CAAEjB,2BAAO,CAAxB,mBACI,0BAAI,EAAE,CAAKuC,UAAU,CAAf,IAAKA,CAAL,GAAKA,CAAmBA,UAAU,CAAxC,YACKA,UAAU,CADf,kBAEI,uCACI,IAAI,CADR,WAEI,SAAS,CAAEvC,2BAAO,CAFtB,KAGI,OAAO,CAAEuC,UAAU,CAL3B,MAEI,EAFJ,CAOKA,UAAU,CAAVA,UAAAA,GAAAA,SAAAA,EAAAA,aACG,2CACI,SAAS,CAAEvC,2BAAO,CADtB,KAEI,EAAE,CAAEuC,UAAU,CAFlB,WAGI,MAAM,UAAWA,UAAU,CAAVA,UAAAA,CAAAA,QAAAA,CAX7B,EAW6BA,CAHrB,EARR,cAcI,8BAAU,SAAS,CAAEvC,2BAAO,CAA5B,KAAmC,IAAI,CAAEuC,UAAU,CAdvD,IAcI,EAdJ,CAeKA,UAAU,CAAVA,QAAAA,EAAAA,aACG,yCACI,SAAS,CAAEvC,2BAAO,CADtB,KAEI,IAAI,CAFR,QAGI,KAAK,CAnBjB,UAgBQ,EAhBR,CAsBKuC,UAAU,CAAVA,OAAAA,EAAAA,aACG,yCACI,SAAS,CAAEvC,2BAAO,CADtB,KAEI,IAAI,CAFR,QAGI,KAAK,CA3BrB,SAwBY,EAvBR,CADJ,cA+BI,6CAAU,MAAM,CAAEuC,UAAU,CA/BhC,WA+BI,EA/BJ,CAgCK,CAAC,CAACoB,MAAM,CAAR,qBACG,iCAAa,OAAO,CAApB,OAA8B,KAAK,CAAED,KAAK,EAjClD,WAiCQ,EAjCR,CAmCK,CAAC,CAAD,yBACG,iCAAa,OAAO,CAAEE,UAAU,CAAhC,OAAyC,KAAK,CApCtD,QAoCQ,EApCR,CAsCK,CAAC,CAAD,6BACG,iCACI,OAAO,CAAEC,cAAc,CAD3B,OAEI,KAAK,CAzCjB,aAuCQ,EAvCR,cA4CI,+CACI,YAAY,CADhB,aAEI,UAAU,CAFd,WAGI,UAAU,CA/ClB,UA4CI,EA5CJ,CAiDKC,WAAW,EAAI7C,+BAAS,CAAxB6C,UAAwB,CAAxBA,EAAAA,aACG,gCACI,YAAY,CADhB,aAEI,iBAAiB,CAAEvB,UAAU,CApDzC,UAkDQ,EAlDR,CAuDKuB,WAAW,EAAI7G,gCAAU,CAAzB6G,UAAyB,CAAzBA,EAAAA,aACG,gCACI,YAAY,CADhB,aAEI,mBAAmB,CAAE,CAACvB,UAAU,CA1D5C,UA0DiC,CAFzB,EAxDR,CA6DKuB,WAAW,EAAItB,6BAAO,CAAtBsB,UAAsB,CAAtBA,EAAAA,aACG,gCACI,YAAY,CADhB,aAEI,gBAAgB,CAAE,CAACvB,UAAU,CAjE7C,UAiEkC,CAFtB,EA9DR,CADJ,CAsEH;;;;;;;;;;;ACrLM,2BAAmE,CACtE,GAAM,gBAAN,MAEA,OAAQ9F,aAAR,OAAQA,EAAAA,aAAR,SAAQA,CAAR,MAAQA,CAAAA,aAAa,CAArB,QACI,iBACI,mBACI,6GAAO,QAAQ,CAAf,sBACI,qHADJ,oBACI,CADJ,CADJ,gGACI,CADJ,CAOJ,mBACI,mBACI,6GAAO,QAAQ,CAAf,qBACI,qHADJ,sBACI,CADJ,CADJ,sDACI,CADJ,CAMJ,QACI,MAjBR,KAiBQ,CAjBR,CAqBJ,IAAMsH,CAAAA,+BAA+B,cAAGC,uCAAAA,CAAxC,WAAwCA,CAAxC,CAEA;;;;;;;;;;;;AC5BA,GAAMC,CAAAA,iBAAiB,cAAGC,2CAAI,CAAC,IAAM,qGAAP,CAA9B,CAEe,wBAKZ,CACC,mBACI,8HACI,mEAFR,KAEQ,CADJ,CADJ,CAKH;;;;;;;;;;;;;ACXc,uBAQZ,CACC,GAAM,+CAAN,MACA,GAAMC,CAAAA,CAAS,CAAG,0BAA8BC,KAA9B,GAAlB,MACA,GAAMC,CAAAA,SAAS,CAAGC,IAAI,eAAgBA,IAAI,GAAJA,KAAAA,CAAAA,IAAAA,CAAtC,IAAsB,CAAtB,CACA,mBACI,+GACI,qGACI,SAAS,CADb,UAEI,YAAY,CAFhB,SAGI,YAAY,CAAEC,QAAQ,EAH1B,EAII,OAAO,CAJX,QAKI,GAAG,CALP,IAMI,IAAI,CANR,MADJ,CACI,CADJ,CAWKC,OAAO,eAAI,iHAAY,OAAO,CAAnB,WAZpB,OAYoB,CAXhB,CADJ,CAeH;;;;;;;;;;;;AC3Bc,6BAAuC,CAClD,GAAM,qBAAoB5D,+CAAQ,CAAC,MAAK,GAAL,WAAK,OAAL,eAAK,CAAL,QAAnC,CAAkC,CAAlC,CACA6D,gDAAS,CACL,IACI/G,KADJ,OACIA,EAAAA,KADJ,SACIA,CADJ,MACIA,CAAAA,KAAK,CAALA,SAAAA,CAAAA,4EAAAA,CAAyB,IAAM,CAC3BgH,QAAQ,CAAChH,KAAK,CAAdgH,KAAQ,CAARA,CAHH,CAEDhH,CAFC,CAKL,CALJ+G,KAKI,CALK,CAATA,CAQA,aACH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Category.js","webpack://jacdac-docs/./src/components/IDChip.tsx","webpack://jacdac-docs/./src/components/ui/AutoGrid.tsx","webpack://jacdac-docs/./src/components/ServiceRegisters.tsx","webpack://jacdac-docs/./src/components/EventInput.tsx","webpack://jacdac-docs/./src/components/ServiceEvents.tsx","webpack://jacdac-docs/./src/components/CommandInput.tsx","webpack://jacdac-docs/./src/components/DecodedPacketItem.tsx","webpack://jacdac-docs/./src/components/ServiceCard.tsx","webpack://jacdac-docs/./src/components/devices/DeviceList.tsx","webpack://jacdac-docs/./src/components/KindChip.tsx","webpack://jacdac-docs/./src/components/PacketMembersChip.tsx","webpack://jacdac-docs/./src/components/specification/PacketSpecificationSource.tsx","webpack://jacdac-docs/./src/components/specification/PacketSpecification.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecificationStatusAlert.tsx","webpack://jacdac-docs/./src/components/ui/Markdown.tsx","webpack://jacdac-docs/./src/components/ui/Snippet.tsx","webpack://jacdac-docs/./src/jacdac/useEventCount.ts"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 2-5.5 9h11z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13.5h8v8H3z\"\n}, \"2\")], 'Category');\nexports.default = _default;","import React, { useContext } from \"react\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FingerprintIcon from \"@mui/icons-material/Fingerprint\"\nimport { Chip, IconButton } from \"@mui/material\"\nimport PacketsContext from \"./PacketsContext\"\nimport AppContext, { DrawerType } from \"./AppContext\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function IDChip(props: {\n    id: number | string\n    className?: string\n    filter?: string\n}) {\n    const { id, className, filter } = props\n    const { filter: packetFilter, setFilter: setPacketFilter } =\n        useContext(PacketsContext)\n    const { setDrawerType } = useContext(AppContext)\n\n    const ids =\n        typeof id === \"string\"\n            ? id\n            : `0x${id !== undefined ? (id as number).toString(16) : \"???\"}`\n    const filtered = packetFilter && packetFilter.indexOf(filter) > -1\n    const handleFilterClick = () => {\n        if (filtered) setPacketFilter(packetFilter?.replace(filter, \"\")?.trim())\n        else setPacketFilter(packetFilter?.trim() + \" \" + filter)\n        setDrawerType(DrawerType.Packets)\n    }\n    const icon = <FingerprintIcon />\n    const title = filtered ? `remove filter ${filter}` : `add filter ${filter}`\n    if (filter)\n        return (\n            <Tooltip\n                title={\n                    filtered\n                        ? `remove filter ${filter}`\n                        : `add filter ${filter}`\n                }\n            >\n                <span>\n                    <Chip\n                        className={className}\n                        size=\"small\"\n                        icon={\n                            <IconButton\n                                aria-label={title}\n                                onClick={handleFilterClick}\n                                size=\"small\"\n                            >\n                                {icon}\n                            </IconButton>\n                        }\n                        label={ids}\n                    />\n                </span>\n            </Tooltip>\n        )\n    else\n        return (\n            <Chip\n                aria-label={title}\n                className={className}\n                size=\"small\"\n                icon={icon}\n                title={`identifier ${ids}`}\n                label={ids}\n            />\n        )\n}\n","import { Grid, GridSpacing } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function AutoGrid(props: {\n    children: JSX.Element | JSX.Element[]\n    spacing?: GridSpacing\n}) {\n    const { children, spacing } = props\n    if (children && Array.isArray(children))\n        return (\n            <Grid container spacing={spacing}>\n                {(children as JSX.Element[]).map((child, i) => (\n                    <Grid item xs={12} key={child.key || i}>\n                        {child}\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    else return children as JSX.Element\n}\n","import React, { useMemo } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { isRegister } from \"../../jacdac-ts/src/jdom/spec\"\nimport RegisterInput from \"./RegisterInput\"\nimport useChange from \"../jacdac/useChange\"\nimport AutoGrid from \"./ui/AutoGrid\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport { SystemReg } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function ServiceRegisters(props: {\n    service: JDService\n    registerIdentifiers?: number[]\n    filter?: (register: JDRegister) => boolean\n    showRegisterName?: boolean\n    hideMissingValues?: boolean\n    showTrends?: boolean\n}) {\n    const {\n        service,\n        registerIdentifiers,\n        filter,\n        showRegisterName,\n        hideMissingValues,\n        showTrends,\n    } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers = useMemo(() => {\n        const packets = specification?.packets\n        const ids =\n            registerIdentifiers ||\n            packets?.filter(pkt => isRegister(pkt))?.map(pkt => pkt.identifier)\n        let r = ids?.map(id => service.register(id))?.filter(reg => !!reg) || []\n        if (filter) r = r.filter(filter)\n        return r\n    }, [specification, registerIdentifiers, filter])\n\n    return (\n        <AutoGrid spacing={1}>\n            {registers.map(register => (\n                <RegisterInput\n                    key={register.id}\n                    register={register}\n                    showRegisterName={showRegisterName}\n                    hideMissingValues={hideMissingValues}\n                    showTrend={\n                        showTrends && register.code === SystemReg.Reading\n                    }\n                    visible={true}\n                />\n            ))}\n        </AutoGrid>\n    )\n}\n","import React from \"react\"\nimport { JDEvent } from \"../../jacdac-ts/src/jdom/event\"\nimport { Typography, Badge } from \"@mui/material\"\nimport KindIcon from \"./KindIcon\"\nimport useEventCount from \"../jacdac/useEventCount\"\nimport DeviceName from \"./devices/DeviceName\"\n\nexport default function EventInput(props: {\n    event: JDEvent\n    showDeviceName?: boolean\n    showName?: boolean\n}) {\n    const { event, showName, showDeviceName } = props\n    const count = useEventCount(event)\n    const spec = event.specification\n\n    return (\n        <>\n            {showDeviceName && (\n                <Typography>\n                    <DeviceName device={event.service.device} />/\n                </Typography>\n            )}\n            {showName && spec && (\n                <Typography gutterBottom>{spec.name}</Typography>\n            )}\n            <Badge badgeContent={count} color=\"primary\">\n                <KindIcon kind={\"event\"} />\n            </Badge>\n        </>\n    )\n}\n","import React from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { isEvent } from \"../../jacdac-ts/src/jdom/spec\"\nimport EventInput from \"./EventInput\"\nimport AutoGrid from \"./ui/AutoGrid\"\n\nexport default function ServiceEvents(props: {\n    service: JDService\n    eventIdentifiers?: number[]\n    showEventName?: boolean\n}) {\n    const { service, eventIdentifiers, showEventName } = props\n    const spec = service.specification\n    const packets = spec.packets\n    let events = packets.filter(isEvent)\n    if (eventIdentifiers !== undefined)\n        events = events.filter(\n            event => eventIdentifiers.indexOf(event.identifier) > -1\n        )\n\n    return (\n        <AutoGrid spacing={1}>\n            {events.map(event => (\n                <EventInput\n                    key={`event${event.identifier}`}\n                    event={service.event(event.identifier)}\n                    showName={showEventName}\n                />\n            ))}\n        </AutoGrid>\n    )\n}\n","import React from \"react\"\nimport { Typography } from \"@mui/material\"\nimport { InPipeReader } from \"../../jacdac-ts/src/jdom/pipes\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport DeviceName from \"./devices/DeviceName\"\nimport { isReportOf } from \"../../jacdac-ts/src/jdom/spec\"\nimport { packArguments } from \"../../jacdac-ts/src/jdom/command\"\nimport {\n    DecodedPacket,\n    printPacket,\n    serviceName,\n} from \"../../jacdac-ts/src/jdom/pretty\"\nimport { Packet } from \"../../jacdac-ts/src/jdom/packet\"\nimport CmdButton from \"./CmdButton\"\nimport { PackedValues } from \"../../jacdac-ts/src/jdom/pack\"\nimport useBus from \"../jacdac/useBus\"\n\nfunction hasPipeReport(info: jdspec.PacketInfo) {\n    return info.fields.find(f => f.type == \"pipe\")\n}\n\nexport default function CommandInput(props: {\n    service: JDService\n    command: jdspec.PacketInfo\n    showDeviceName?: boolean\n    args?: PackedValues\n    setReports?: (reports: DecodedPacket[]) => void\n}) {\n    const { service, command, showDeviceName, args, setReports } = props\n    const bus = useBus()\n\n    const { specification } = service\n    const requiredArgLength =\n        command.fields.length - (hasPipeReport(command) ? 1 : 0)\n    const missingArguments = (args?.length || 0) !== requiredArgLength\n    const disabled = missingArguments\n    const reportSpec =\n        command.hasReport &&\n        specification.packets.find(p => isReportOf(command, p))\n    const handleClick = async mounted => {\n        const pkt = !args?.length\n            ? Packet.onlyHeader(command.identifier)\n            : packArguments(command, args)\n        if (setReports && reportSpec) {\n            const reportPacket = await service.sendCmdAwaitResponseAsync(pkt)\n            if (!mounted()) return\n            const decoded = reportPacket?.decoded\n            setReports([decoded])\n        } else if (setReports && hasPipeReport(command)) {\n            let inp: InPipeReader\n            try {\n                inp = new InPipeReader(bus)\n                const cmd = inp.openCommand(command.identifier)\n                await service.sendPacketAsync(cmd, true)\n                console.log(printPacket(cmd)) // keep this call, it sets up pretty to understand packages\n                const { output } = await inp.readAll()\n                const reports = output\n                    .filter(ot => !!ot.data?.length)\n                    .map(ot => ot?.decoded)\n                if (!mounted()) return\n                setReports(reports)\n            } finally {\n                inp?.unmount()\n            }\n        } else await service.sendPacketAsync(pkt, true)\n    }\n\n    return (\n        <CmdButton\n            trackName=\"command.input\"\n            trackProperties={{\n                service: serviceName(service.serviceClass),\n                serviceClass: service.serviceClass,\n            }}\n            variant=\"contained\"\n            disabled={disabled}\n            onClick={handleClick}\n        >\n            {showDeviceName && (\n                <Typography>\n                    <DeviceName device={service.device} />/\n                </Typography>\n            )}\n            {command.name.replace(/_/g, \" \")}\n        </CmdButton>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport { DecodedPacket } from \"../../jacdac-ts/src/jdom/pretty\"\nimport MembersInput from \"./fields/MembersInput\"\n\nexport default function DecodedPacketItem(props: { pkt: DecodedPacket }) {\n    const { pkt } = props\n    const { decoded, service } = pkt\n    const specifications = useMemo(() => decoded.map(d => d.info), [decoded])\n    const values = useMemo(() => decoded.map(d => d.value), [decoded])\n    return (\n        <MembersInput\n            serviceSpecification={service}\n            specifications={specifications}\n            values={values}\n        />\n    )\n}\n","import React, { useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@mui/material/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@mui/material/CardContent\"\n// tslint:disable-next-line: no-submodule-imports\nimport Typography from \"@mui/material/Typography\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport ServiceRegisters from \"./ServiceRegisters\"\nimport ServiceEvents from \"./ServiceEvents\"\nimport { isCommand } from \"../../jacdac-ts/src/jdom/spec\"\nimport { CardActions, List, ListItem } from \"@mui/material\"\nimport DeviceCardHeader from \"./devices/DeviceCardHeader\"\nimport { DeviceLostAlert } from \"./alert/DeviceLostAlert\"\nimport CommandInput from \"./CommandInput\"\nimport { DecodedPacket } from \"../../jacdac-ts/src/jdom/pretty\"\nimport DecodedPacketItem from \"./DecodedPacketItem\"\nimport ServiceSpecificationStatusAlert from \"./specification/ServiceSpecificationStatusAlert\"\nimport MembersInput from \"./fields/MembersInput\"\n\nconst PREFIX = \"ServiceCard\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n    bullet: `${PREFIX}bullet`,\n    title: `${PREFIX}title`,\n    pos: `${PREFIX}pos`,\n}\n\nconst StyledCard = styled(Card)({\n    [`&.${classes.root}`]: {\n        minWidth: 275,\n    },\n    [`& .${classes.bullet}`]: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n})\n\nexport default function ServiceCard(props: {\n    service: JDService\n    linkToService?: boolean\n    showServiceName?: boolean\n    showMemberName?: boolean\n    registerIdentifiers?: number[]\n    eventIdentifiers?: number[]\n    commandIdentifier?: number\n}) {\n    const {\n        service,\n        linkToService,\n        registerIdentifiers,\n        showServiceName,\n        showMemberName,\n        eventIdentifiers,\n        commandIdentifier,\n    } = props\n    const { specification } = service\n    const [reports, setReports] = useState<DecodedPacket[]>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [commandArgs, setCommandArgs] = useState<any[]>([])\n\n    const hasCommandIdentifier = commandIdentifier !== undefined\n    const hasRegisterIdentifiers = !!registerIdentifiers?.length\n    const hasEventIdentifiers = !!eventIdentifiers?.length\n    const command =\n        commandIdentifier !== undefined &&\n        specification?.packets.find(\n            pkt => isCommand(pkt) && pkt.identifier === commandIdentifier\n        )\n\n    return (\n        <StyledCard className={classes.root}>\n            <DeviceCardHeader device={service.device} showAvatar={true} />\n            <CardContent>\n                {showServiceName && (\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        <Link\n                            to={\n                                linkToService && service.specification\n                                    ? `/services/${service.specification.shortId}/`\n                                    : \"/clients/javascript/jdom/service\"\n                            }\n                        >\n                            {service.name}\n                        </Link>\n                    </Typography>\n                )}\n                <Typography variant=\"body2\" component=\"div\">\n                    {hasRegisterIdentifiers && (\n                        <ServiceRegisters\n                            service={service}\n                            showRegisterName={showMemberName}\n                            registerIdentifiers={registerIdentifiers}\n                        />\n                    )}\n                    {hasEventIdentifiers && (\n                        <ServiceEvents\n                            service={service}\n                            showEventName={showMemberName}\n                            eventIdentifiers={eventIdentifiers}\n                        />\n                    )}\n                    {command && (\n                        <MembersInput\n                            serviceSpecification={specification}\n                            serviceMemberSpecification={command}\n                            specifications={command.fields}\n                            values={commandArgs}\n                            setValues={setCommandArgs}\n                            showDataType={true}\n                        />\n                    )}\n                    {!!reports?.length && (\n                        <List key={\"reports\"} dense>\n                            {reports?.map((report, ri) => (\n                                <ListItem key={`report${ri}`}>\n                                    <DecodedPacketItem pkt={report} />\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n                </Typography>\n                {!hasCommandIdentifier &&\n                    !hasRegisterIdentifiers &&\n                    !hasEventIdentifiers && (\n                        <ServiceSpecificationStatusAlert\n                            specification={specification}\n                        />\n                    )}\n                <DeviceLostAlert device={service?.device} />\n            </CardContent>\n            <CardActions>\n                {command && (\n                    <CommandInput\n                        service={service}\n                        command={command}\n                        args={commandArgs}\n                        setReports={setReports}\n                    />\n                )}\n            </CardActions>\n        </StyledCard>\n    )\n}\n","import React from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Grid } from \"@mui/material\"\nimport DeviceCard from \"./DeviceCard\"\nimport ServiceCard from \"../ServiceCard\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport useDevices from \"../hooks/useDevices\"\nimport useServices from \"../hooks/useServices\"\n\nconst PREFIX = \"DeviceList\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        marginBottom: theme.spacing(1),\n    },\n}))\n\nexport default function DeviceList(props: {\n    serviceClass?: number\n    linkToService?: boolean\n    registerIdentifiers?: number[]\n    eventIdentifiers?: number[]\n    commandIdentifier?: number\n    showServiceName?: boolean\n    showMemberName?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showServiceButtons?: boolean\n}) {\n    const {\n        serviceClass,\n        linkToService,\n        registerIdentifiers,\n        showServiceName,\n        showMemberName,\n        showFirmware,\n        showTemperature,\n        showServiceButtons,\n        eventIdentifiers,\n        commandIdentifier,\n    } = props\n    const devices = useDevices({ serviceClass })\n    const services = useServices({ serviceClass })\n\n    const hasServiceClass = serviceClass !== undefined\n    const gridBreakpoints = useGridBreakpoints(devices?.length)\n\n    return (\n        <StyledGrid container spacing={2} className={classes.root}>\n            {!hasServiceClass &&\n                devices.map(device => (\n                    <Grid key={device.id} item {...gridBreakpoints}>\n                        <DeviceCard\n                            device={device}\n                            showDescription={true}\n                            showTemperature={showTemperature}\n                            showFirmware={showFirmware}\n                            showServices={showServiceButtons}\n                        />\n                    </Grid>\n                ))}\n            {hasServiceClass &&\n                services.map(service => {\n                    return (\n                        <Grid key={service.nodeId} item {...gridBreakpoints}>\n                            <ServiceCard\n                                service={service}\n                                linkToService={linkToService}\n                                showServiceName={showServiceName}\n                                showMemberName={showMemberName}\n                                registerIdentifiers={registerIdentifiers}\n                                eventIdentifiers={eventIdentifiers}\n                                commandIdentifier={commandIdentifier}\n                            />\n                        </Grid>\n                    )\n                })}\n        </StyledGrid>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { Chip } from \"@mui/material\"\nimport KindIcon, { kindName } from \"./KindIcon\"\nimport PacketsContext from \"./PacketsContext\"\nimport AppContext, { DrawerType } from \"./AppContext\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function KindChip(props: { kind: string; className?: string }) {\n    const { kind, className } = props\n    const { filter, setFilter } = useContext(PacketsContext)\n    const { setDrawerType } = useContext(AppContext)\n    const icon = KindIcon({ kind })\n    const chipFilter = `kind:${kind}`\n    const filtered = filter && filter.indexOf(chipFilter) > -1\n    const handleClick = () => {\n        if (filtered) setFilter(filter?.replace(chipFilter, \"\")?.trim())\n        else setFilter(filter?.trim() + \" \" + chipFilter)\n        setDrawerType(DrawerType.Packets)\n    }\n    return (\n        <Tooltip\n            title={\n                filtered\n                    ? `remove filter ${chipFilter}`\n                    : `add filter ${chipFilter}`\n            }\n        >\n            <span>\n                <Chip\n                    onClick={handleClick}\n                    className={className}\n                    size=\"small\"\n                    label={kindName(kind)}\n                    icon={icon}\n                />\n            </span>\n        </Tooltip>\n    )\n}\n","import React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport Chip from \"@mui/material/Chip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport CategoryIcon from \"@mui/icons-material/Category\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function PacketMembersChip(props: {\n    spec: jdspec.PacketInfo\n    members: jdspec.PacketMember[]\n    className?: string\n}) {\n    const { members, className, spec } = props\n    if (!members?.length) return null\n\n    const label = spec?.packFormat\n    const title = \"pack format\"\n    return (\n        <Tooltip title={title}>\n            <Chip\n                style={{ textDecoration: \"none\" }}\n                href=\"/reference/pack-format/\"\n                component=\"a\"\n                clickable\n                className={className}\n                size=\"small\"\n                icon={<CategoryIcon />}\n                label={label}\n            />\n        </Tooltip>\n    )\n}\n","import React, { useState } from \"react\"\nimport { Tabs, Tab } from \"@mui/material\"\nimport TabPanel from \"../ui/TabPanel\"\nimport Snippet from \"../ui/Snippet\"\nimport { packInfo } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    isCommand,\n    isEvent,\n    isRegister,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PaperBox from \"../ui/PaperBox\"\n\nexport default function PacketSpecificationSource(props: {\n    serviceClass: number\n    packetInfo: jdspec.PacketInfo\n    reportInfo?: jdspec.PacketInfo\n    pipeReportInfo?: jdspec.PacketInfo\n}) {\n    const { serviceClass, packetInfo } = props\n    const [tab, setTab] = useState(0)\n\n    const info = serviceSpecificationFromClassIdentifier(serviceClass)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    // TODO: render commands\n    if (\n        !info ||\n        !packetInfo?.fields?.length ||\n        !(isRegister(packetInfo) || isCommand(packetInfo) || isEvent(packetInfo))\n    )\n        return null\n\n    let index = 0\n    return (\n        <PaperBox>\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"View specification formats\"\n            >\n                {[\"TypeScript\"]\n                    .filter(n => !!n)\n                    .map(n => (\n                        <Tab key={n} label={n} />\n                    ))}\n            </Tabs>\n            <TabPanel value={tab} index={index++}>\n                <Snippet\n                    value={() =>\n                        packInfo(info, packetInfo, {\n                            isStatic: false,\n                            useBooleans: false,\n                            useJDOM: true,\n                        }).buffers\n                    }\n                    mode={\"typescript\"}\n                />\n            </TabPanel>\n        </PaperBox>\n    )\n}\n","import {\n    isRegister,\n    isEvent,\n    isCommand,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport { styled } from \"@mui/material/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport Chip from \"@mui/material/Chip\"\nimport DeviceList from \"../devices/DeviceList\"\nimport IDChip from \"../IDChip\"\nimport KindChip from \"../KindChip\"\nimport PacketMembersChip from \"../PacketMembersChip\"\nimport Markdown from \"../ui/Markdown\"\nimport { prettyMemberUnit } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport PacketSpecificationSource from \"./PacketSpecificationSource\"\n\nconst PREFIX = \"PacketSpecification\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n    field: `${PREFIX}field`,\n    chip: `${PREFIX}chip`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        marginBottom: theme.spacing(1),\n    },\n\n    [`& .${classes.field}`]: {\n        \"& > div\": { verticalAlign: \"middle\" },\n    },\n\n    [`& .${classes.chip}`]: {\n        margin: theme.spacing(0.5),\n    },\n}))\n\nfunction MemberType(props: { member: jdspec.PacketMember }) {\n    const { member } = props\n\n    const helperText = prettyMemberUnit(member, true)\n\n    return (\n        <>\n            <li className={classes.field}>\n                {member.name !== \"_\" && `${member.name}: `}\n                <code>{helperText}</code>\n            </li>\n        </>\n    )\n}\n\nfunction MembersType(props: {\n    members: jdspec.PacketMember[]\n    title?: string\n}) {\n    const { members, title } = props\n\n    let repeatIndex = members.findIndex(m => !!m.startRepeats)\n    if (repeatIndex < 0) repeatIndex = members.length\n    const beforeRepeat = members.slice(0, repeatIndex)\n    const afterRepeat = members.slice(repeatIndex)\n\n    return (\n        <>\n            {!!title && <h4>{title}</h4>}\n            {!!beforeRepeat.length && (\n                <ul>\n                    {beforeRepeat.map(member => (\n                        <MemberType key={member.name} member={member} />\n                    ))}\n                </ul>\n            )}\n            {!!afterRepeat.length && (\n                <>\n                    <h5>starts repeating</h5>\n                    <ul>\n                        {afterRepeat.map(member => (\n                            <MemberType key={member.name} member={member} />\n                        ))}\n                    </ul>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default function PacketSpecification(props: {\n    serviceClass: number\n    packetInfo: jdspec.PacketInfo\n    reportInfo?: jdspec.PacketInfo\n    pipeReportInfo?: jdspec.PacketInfo\n    showDevices?: boolean\n}) {\n    const {\n        serviceClass,\n        packetInfo,\n        reportInfo,\n        pipeReportInfo,\n        showDevices,\n    } = props\n\n    if (!packetInfo)\n        return (\n            <Alert severity=\"error\">{`Unknown member ${serviceClass.toString(\n                16\n            )}:${packetInfo.identifier}`}</Alert>\n        )\n    const { fields } = packetInfo\n    const isCmd = isCommand(packetInfo)\n\n    return (\n        <Root className={classes.root}>\n            <h3 id={`${packetInfo.kind}:${packetInfo.identifier}`}>\n                {packetInfo.name}\n                <PacketMembersChip\n                    spec={packetInfo}\n                    className={classes.chip}\n                    members={packetInfo.fields}\n                />\n                {packetInfo.identifier !== undefined && (\n                    <IDChip\n                        className={classes.chip}\n                        id={packetInfo.identifier}\n                        filter={`pkt:0x${packetInfo.identifier.toString(16)}`}\n                    />\n                )}\n                <KindChip className={classes.chip} kind={packetInfo.kind} />\n                {packetInfo.optional && (\n                    <Chip\n                        className={classes.chip}\n                        size=\"small\"\n                        label=\"optional\"\n                    />\n                )}\n                {packetInfo.derived && (\n                    <Chip\n                        className={classes.chip}\n                        size=\"small\"\n                        label=\"derived\"\n                    />\n                )}\n            </h3>\n            <Markdown source={packetInfo.description} />\n            {!!fields.length && (\n                <MembersType members={fields} title={isCmd && \"Arguments\"} />\n            )}\n            {!!reportInfo && (\n                <MembersType members={reportInfo.fields} title=\"Report\" />\n            )}\n            {!!pipeReportInfo && (\n                <MembersType\n                    members={pipeReportInfo.fields}\n                    title=\"Pipe report\"\n                />\n            )}\n            <PacketSpecificationSource\n                serviceClass={serviceClass}\n                packetInfo={packetInfo}\n                reportInfo={reportInfo}\n            />\n            {showDevices && isCommand(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    commandIdentifier={packetInfo.identifier}\n                />\n            )}\n            {showDevices && isRegister(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    registerIdentifiers={[packetInfo.identifier]}\n                />\n            )}\n            {showDevices && isEvent(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    eventIdentifiers={[packetInfo.identifier]}\n                />\n            )}\n        </Root>\n    )\n}\n","import { AlertTitle } from \"@mui/material\"\nimport React from \"react\"\nimport Alert from \"../ui/Alert\"\n\nexport function StatusAlert(props: { specification: jdspec.ServiceSpec }) {\n    const { specification } = props\n\n    switch (specification?.status) {\n        case \"deprecated\":\n            return (\n                <Alert severity=\"error\">\n                    <AlertTitle>Service deprecated</AlertTitle>\n                    This service should not be added to new modules and might\n                    not be supported in future releases.\n                </Alert>\n            )\n        case \"experimental\":\n            return (\n                <Alert severity=\"info\">\n                    <AlertTitle>Experimental service</AlertTitle>\n                    This service specification may change in the future.\n                </Alert>\n            )\n        default:\n            return null\n    }\n}\n\nconst ServiceSpecificationStatusAlert = React.memo(StatusAlert)\n\nexport default ServiceSpecificationStatusAlert\n","import React, { lazy } from \"react\"\nimport Suspense from \"./Suspense\"\nconst SuspensedMarkdown = lazy(() => import(\"./SuspensedMarkdown\"))\n\nexport default function Markdown(props: {\n    source: string\n    className?: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    components?: Partial<any>\n}) {\n    return (\n        <Suspense>\n            <SuspensedMarkdown {...props} />\n        </Suspense>\n    )\n}\n","import { Typography } from \"@mui/material\"\nimport React, { ReactNode } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string)\n    mode?: string\n    download?: string\n    actions?: ReactNode\n    url?: string\n    caption?: string | JSX.Element | JSX.Element[]\n    copy?: boolean\n}) {\n    const { value, mode, download, url, caption, actions, copy } = props\n    const v: string = typeof value === \"function\" ? value() : value\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return (\n        <>\n            <CodeBlock\n                className={className}\n                downloadName={download}\n                downloadText={download && v}\n                actions={actions}\n                url={url}\n                copy={copy}\n            >\n                {v}\n            </CodeBlock>\n            {caption && <Typography variant=\"caption\">{caption}</Typography>}\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { JDEvent } from \"../../jacdac-ts/src/jdom/event\"\nimport { CHANGE } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function useEventCount(event: JDEvent) {\n    const [count, setCount] = useState(event?.count || 0)\n    useEffect(\n        () =>\n            event?.subscribe(CHANGE, () => {\n                setCount(event.count)\n            }),\n        [event]\n    )\n\n    return count\n}\n"],"names":["filter","setFilter","useContext","ids","id","filtered","packetFilter","handleFilterClick","setPacketFilter","setDrawerType","DrawerType","icon","title","children","Array","child","specification","useChange","spec","registers","useMemo","packets","registerIdentifiers","pkt","isRegister","r","service","reg","register","showTrends","SystemReg","count","useEventCount","event","showDeviceName","showName","events","eventIdentifiers","info","f","bus","useBus","requiredArgLength","command","hasPipeReport","missingArguments","disabled","reportSpec","p","isReportOf","handleClick","args","Packet","packArguments","setReports","reportPacket","mounted","decoded","inp","cmd","console","printPacket","reports","output","ot","serviceName","serviceClass","specifications","d","values","PREFIX","classes","root","bullet","pos","StyledCard","styled","minWidth","display","margin","transform","fontSize","marginBottom","useState","hasCommandIdentifier","commandIdentifier","hasRegisterIdentifiers","hasEventIdentifiers","isCommand","showServiceName","linkToService","StyledGrid","theme","devices","useDevices","services","useServices","hasServiceClass","gridBreakpoints","useGridBreakpoints","device","KindIcon","chipFilter","kindName","members","label","textDecoration","serviceSpecificationFromClassIdentifier","handleTabChange","setTab","packetInfo","isEvent","index","n","packInfo","isStatic","useBooleans","useJDOM","field","chip","Root","verticalAlign","helperText","prettyMemberUnit","member","repeatIndex","m","beforeRepeat","afterRepeat","isCmd","fields","reportInfo","pipeReportInfo","showDevices","ServiceSpecificationStatusAlert","React","SuspensedMarkdown","lazy","v","value","className","mode","download","caption","useEffect","setCount"],"sourceRoot":""}