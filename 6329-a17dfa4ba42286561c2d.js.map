{"version":3,"file":"6329-a17dfa4ba42286561c2d.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardRainGauge.tsx"],"sourcesContent":["import React from \"react\"\nimport { RainGaugeReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport { RainGaugeServer } from \"../../../jacdac-ts/src/servers/raingaugeserver\"\nimport useChange from \"../../jacdac/useChange\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { useId } from \"react\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport { roundWithPrecision } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useRegister from \"../hooks/useRegister\"\nimport DashboardRegisterValueFallback from \"./DashboardRegisterValueFallback\"\n\nconst TILT = 15\n\nexport default function DashbaordRainGauge(props: DashboardServiceProps) {\n    const { service } = props\n\n    const precipitationRegister = useRegister(\n        service,\n        RainGaugeReg.Precipitation\n    )\n    const [precipitation] = useRegisterUnpackedValue<[number]>(\n        precipitationRegister,\n        props\n    )\n    const clipId = useId()\n    const server = useServiceServer<RainGaugeServer>(service)\n    const tiltCount = useChange(server, h => h?.tiltCount)\n    const level = useChange(server, h => h?.level)\n    const tiltAngle =\n        tiltCount !== undefined ? (tiltCount % 2 ? -TILT : TILT) : 0\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, active, textPrimary } = useWidgetTheme(color)\n    const a = useThrottledValue(tiltAngle, 45)\n    const l = useThrottledValue(level !== undefined ? level : 0.5, 1)\n    const clickeable = !!server\n    const handleClick = async (event: React.PointerEvent<SVGRectElement>) => {\n        event.preventDefault()\n        event.stopPropagation()\n        await server?.rain(0.25)\n        await precipitationRegister.refresh()\n    }\n    const buttonProps = useSvgButtonProps<SVGRectElement>(\n        `rain level ${Math.round(25 + level * 100)}%`,\n        handleClick\n    )\n\n    const w = 128\n    const h = 64\n    const bw = w / 2\n    const bh = h / 3\n    const bx = (w - bw) / 2\n    const by = h - bh - 24\n    const sw = 1\n    const ty = h - 4\n    const fs = 8\n\n    if (tiltAngle === undefined)\n        return (\n            <DashboardRegisterValueFallback register={precipitationRegister} />\n        )\n\n    return (\n        <SvgWidget width={w} height={h}>\n            <defs>\n                <clipPath id={clipId}>\n                    <rect\n                        transform={`rotate(${-a}, ${w / 2}, ${by + bh})`}\n                        x={0}\n                        y={by + bh * (1 - l)}\n                        width={w}\n                        height={h}\n                    />\n                </clipPath>\n            </defs>\n            <g transform={`rotate(${a}, ${w / 2}, ${by + bh})`}>\n                <rect\n                    x={bx}\n                    y={by}\n                    tabIndex={0}\n                    width={bw}\n                    height={bh}\n                    strokeWidth={sw}\n                    stroke={active}\n                    fill={background}\n                    {...buttonProps}\n                    className={clickeable ? \"clickeable\" : undefined}\n                    role={clickeable ? \"button\" : undefined}\n                />\n                <rect\n                    x={bx}\n                    y={by}\n                    width={bw}\n                    height={bh}\n                    stroke={active}\n                    fill={active}\n                    aria-label={\"water\"}\n                    clipPath={`url(#${clipId})`}\n                    pointerEvents=\"none\"\n                    style={{ userSelect: \"none\" }}\n                />\n            </g>\n            <text\n                x={w / 2}\n                y={ty}\n                fontSize={fs}\n                textAnchor=\"middle\"\n                fill={textPrimary}\n                aria-label={`precipitation ${roundWithPrecision(\n                    precipitation || 0,\n                    1\n                )} millimeters`}\n            >\n                {roundWithPrecision(precipitation || 0, 1)}mm\n            </text>\n        </SvgWidget>\n    )\n}\n"],"names":["TILT","precipitationRegister","useRegister","RainGaugeReg","useRegisterUnpackedValue","clipId","useId","server","useServiceServer","tiltCount","useChange","h","level","tiltAngle","color","useWidgetTheme","a","useThrottledValue","l","clickeable","handleClick","event","buttonProps","useSvgButtonProps","Math","w","bw","bh","bx","by","sw","ty","fs","userSelect","roundWithPrecision","precipitation"],"sourceRoot":""}