{"version":3,"file":"9797-5bdb84b9e909d89a5a5f.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAcA,GAAMA,CAAAA,WAAW,cAAGC,2CAAI,CAAC,IAAM,+IAAP,CAAxB,CAEe,+BAAuD,CAClE,GAAM,mBAAN,MACA,GAAMC,CAAAA,MAAM,CAAGC,4EAAgB,CAA/B,OAA+B,CAA/B,CACA,GAAMC,CAAAA,cAAc,CAAGC,uEAAW,SAAUC,6FAAV,CAAlC,CACA,GAAM,iDACFC,iDAAU,CADd,qEACc,CADd,CAGA;AACAC,gDAAS,CACL,IACIN,MADJ,OACIA,EAAAA,MADJ,SACIA,CADJ,MACIA,CAAAA,MAAM,CAANA,SAAAA,CAIGO,0GAJHP,CAI2B,UAAC,oBAAD,MAAC,EAAD,WACvBQ,CAAAA,QADuB,OACvBA,EAAAA,QADuB,SACvBA,CADuB,MACvBA,CAAAA,QAAQ,oBADe,MACf,CADe,CAN1B,CAEDR,CAFC,CASL,CATJM,MASI,CATK,CAATA,CAYA,GAAMG,CAAAA,YAAY,qIAAG,YAAqB,CACtC,UAAYC,2BAA2B,GAAG;AAC1C,GAAMC,CAAAA,GAAG,CAAT,EACA,GAAMC,CAAAA,MAAM,CAAG,QAAf,EACA,GAAMC,CAAAA,IAAI,CAAID,MAAM,CAAP,GAACA,CAAd,EACA,GAAME,CAAAA,QAAQ,CAAd,IACA,GAAMC,CAAAA,IAAI,CAAGC,0EAAM,eAA0C,aAA7D,QAA6D,CAA1C,CAAnB,CAKA,KAAMC,CAAAA,OAAO,CAAPA,YAAAA,CAAqBC,iGAArBD,CAAN,IAAMA,CAAN,CAXc,SAAZR,SAAAA,CAAAA,YAAAA,CAAY,EAAZA,CAAY,sCAAlB,CAAkB,EAAlB,CAaA,GAAMU,CAAAA,YAAY,CAAG,IAAMV,YAAY,CAAvC,GAAuC,CAAvC,CAEA,mBACI,kGACKT,MAAM,EAAI,CAAVA,SAAAA,EAAAA,aACG,mHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,mBACI,kHAAO,QAAQ,CAAf,yDAEI,6HACI,aADJ,gBAEI,OAAO,CAFX,aAGI,IAAI,CAHR,sBAKI,gIAVpB,IAUoB,CALJ,CAFJ,CADJ,CAFR,cAeI,mHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,KAAc,cAAd,mBACI,iIACI,8DAAa,QAAQ,CAjBjC,YAiBY,EADJ,CADJ,CAfJ,CAoBKoB,QAAQ,eACL,mHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,iBACI,uIAAc,QAAQ,CAAtB,gBAvBhB,KAuBgB,EADJ,CArBR,CADJ,CA4BH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardBuzzer.tsx"],"sourcesContent":["import { Grid } from \"@mui/material\"\nimport React, { lazy, useContext, useEffect } from \"react\"\nimport { BuzzerCmd, BuzzerReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { BuzzerServer } from \"../../../jacdac-ts/src/servers/buzzerserver\"\nimport Suspense from \"../ui/Suspense\"\nimport useRegister from \"../hooks/useRegister\"\nimport { Alert } from \"@mui/material\"\nimport { IconButton } from \"gatsby-theme-material-ui\"\nimport VolumeUpIcon from \"@mui/icons-material/VolumeUp\"\nimport WebAudioContext from \"../ui/WebAudioContext\"\nimport VolumeWidget from \"../widgets/VolumeWidget\"\nconst PianoWidget = lazy(() => import(\"../widgets/PianoWidget\"))\n\nexport default function DashboardBuzzer(props: DashboardServiceProps) {\n    const { service, expanded } = props\n    const server = useServiceServer<BuzzerServer>(service)\n    const volumeRegister = useRegister(service, BuzzerReg.Volume)\n    const { playTone, onClickActivateAudioContext, activated } =\n        useContext(WebAudioContext)\n\n    // listen for playTone commands from the buzzer\n    useEffect(\n        () =>\n            server?.subscribe<{\n                frequency: number\n                duration: number\n                volume: number\n            }>(BuzzerServer.PLAY_TONE, ({ frequency, duration, volume }) =>\n                playTone?.(frequency, duration, volume)\n            ),\n        [server]\n    )\n\n    const sendPlayTone = async (f: number) => {\n        if (server) onClickActivateAudioContext() // enable audio context within click handler\n        const vol = 1\n        const period = 1000000 / f\n        const duty = (period * vol) / 2\n        const duration = 400\n        const data = jdpack<[number, number, number]>(\"u16 u16 u16\", [\n            period,\n            duty,\n            duration,\n        ])\n        await service.sendCmdAsync(BuzzerCmd.PlayTone, data)\n    }\n    const handleUnlock = () => sendPlayTone(400)\n\n    return (\n        <>\n            {server && !activated && (\n                <Grid item xs>\n                    <Alert severity=\"warning\">\n                        Click to activate sounds. &nbsp;\n                        <IconButton\n                            aria-label=\"unlock sounds\"\n                            onClick={handleUnlock}\n                            size=\"large\"\n                        >\n                            <VolumeUpIcon />\n                        </IconButton>\n                    </Alert>\n                </Grid>\n            )}\n            <Grid item xs aria-hidden={true}>\n                <Suspense>\n                    <PianoWidget playTone={sendPlayTone} />\n                </Suspense>\n            </Grid>\n            {expanded && (\n                <Grid item xs={12}>\n                    <VolumeWidget register={volumeRegister} {...props} />\n                </Grid>\n            )}\n        </>\n    )\n}\n"],"names":["PianoWidget","lazy","server","useServiceServer","volumeRegister","useRegister","BuzzerReg","useContext","useEffect","BuzzerServer","playTone","sendPlayTone","onClickActivateAudioContext","vol","period","duty","duration","data","jdpack","service","BuzzerCmd","handleUnlock","expanded"],"sourceRoot":""}