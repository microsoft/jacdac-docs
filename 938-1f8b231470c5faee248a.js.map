{"version":3,"file":"938-1f8b231470c5faee248a.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/ec30/EC30Editor.tsx","webpack://jacdac-docs/./src/components/enclosure/ec30.ts","webpack://jacdac-docs/./src/components/ui/SliderWithLabel.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Grid } from \"@mui/material\"\nimport React, { lazy, useId, useState } from \"react\"\nimport { generateEC30EnclosureModel } from \"../enclosure/ec30\"\nimport SliderWithLabel from \"../ui/SliderWithLabel\"\nimport Suspense from \"../ui/Suspense\"\nconst EC30Card = lazy(() => import(\"./EC30Card\"))\n\nexport default function EC30Editor() {\n    const [gridWidth, setGridWith] = useState(2)\n    const [gridHeight, setGridHeight] = useState(2)\n    const [connectors, setConnectors] = useState({\n        l: 1,\n        r: 1,\n    })\n    const id = useId()\n    const gridHeightId = id + \"-height\"\n    const gridWidthId = id + \"-width\"\n    const lconnectorId = id + \"-l-connectors\"\n    const rconnectorId = id + \"-r-connectors\"\n\n    const handleGridWidth: any = (\n        event: React.ChangeEvent<unknown>,\n        value: number | number[]\n    ) => setGridWith(value as number)\n    const handleGridHeight: any = (\n        event: React.ChangeEvent<unknown>,\n        value: number | number[]\n    ) => {\n        const v = value as number\n        setGridHeight(v)\n        setConnectors({\n            l: Math.min(connectors.l, v - 1),\n            r: Math.min(connectors.r, v - 1),\n        })\n    }\n    const handleLeftConnector: any = (\n        event: React.ChangeEvent<unknown>,\n        value: number | number[]\n    ) => setConnectors({ ...connectors, l: value as number })\n    const handleRightConnector: any = (\n        event: React.ChangeEvent<unknown>,\n        value: number | number[]\n    ) => setConnectors({ ...connectors, r: value as number })\n\n    const c = Object.entries(connectors)\n        .map(([key, value]) =>\n            value > 0 ? `${key}${value > 1 ? value : \"\"}` : \"\"\n        )\n        .join(\"\")\n    const model = generateEC30EnclosureModel(gridWidth, gridHeight, c, 1.6)\n    return (\n        <Grid container spacing={2}>\n            <Grid item>\n                <SliderWithLabel\n                    id={gridWidthId}\n                    label={`grid width: ${gridWidth * 10}mm`}\n                    value={gridWidth}\n                    onChange={handleGridWidth}\n                    min={1}\n                    max={12}\n                />\n            </Grid>\n            <Grid item>\n                <SliderWithLabel\n                    id={gridHeightId}\n                    label={`grid height: ${gridHeight * 10}mm`}\n                    value={gridHeight}\n                    onChange={handleGridHeight}\n                    min={2}\n                    max={12}\n                />\n            </Grid>\n            <Grid item>\n                <SliderWithLabel\n                    id={lconnectorId}\n                    label={`left connectors: ${connectors.l || 0}`}\n                    value={connectors.l}\n                    onChange={handleLeftConnector}\n                    min={1}\n                    max={gridHeight - 1}\n                />\n            </Grid>\n            <Grid item>\n                <SliderWithLabel\n                    id={rconnectorId}\n                    label={`right connectors: ${connectors.r || 0}`}\n                    value={connectors.r}\n                    onChange={handleRightConnector}\n                    min={0}\n                    max={gridHeight - 1}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Suspense>\n                    <EC30Card model={model} showSave={true} />\n                </Suspense>\n            </Grid>\n        </Grid>\n    )\n}\n","import type {\n    EnclosureModel,\n    EnclosureOptions,\n} from \"../../workers/cad/dist/node_modules/enclosurecad\"\n\nexport const DEFAULT_OPTIONS: EnclosureOptions = {\n    legs: {\n        type: \"well\",\n    },\n    cover: {},\n}\n\nexport function isEC30(shape: jdspec.Shape) {\n    return typeof shape === \"string\" && /^ec30_/.test(shape)\n}\n\nexport function toEC30(gridWidth: number, gridHeight: number, connectors = \"\") {\n    return `ec30_${gridWidth}x${gridHeight}_${connectors}`\n}\n\nexport function generateEC30EnclosureModel(\n    gridWidth: number,\n    gridHeight: number,\n    connectors = \"\",\n    depth = 6\n): EnclosureModel {\n    const width = gridWidth * 10\n    const height = gridHeight * 10\n    const c = 8\n    const boxWidth = width + c\n    const boxHeight = height + c\n    return {\n        name: `${width}x${height}`,\n        grid: {\n            width: gridWidth,\n            height: gridHeight,\n            connectors,\n        },\n        box: {\n            width: boxWidth,\n            height: boxHeight,\n            depth,\n        },\n        rings: [\n            {\n                x: width >> 1,\n                y: height >> 1,\n            },\n            {\n                x: width >> 1,\n                y: -(height >> 1),\n            },\n            {\n                x: -(width >> 1),\n                y: -(height >> 1),\n            },\n            {\n                x: -(width >> 1),\n                y: height >> 1,\n            },\n        ],\n        components: [\n            {\n                x: -(width >> 1) + 1.5,\n                y: 0,\n                type: \"led\",\n            },\n            {\n                x: (width >> 1) - 1.5,\n                y: 0,\n                type: \"led\",\n            },\n            {\n                x: 0,\n                y: -(height >> 1) + 1.5,\n                type: \"led\",\n            },\n            {\n                x: 0,\n                y: (height >> 1) - 1.5,\n                type: \"led\",\n            },\n        ],\n        connectors: [\n            {\n                x: 0,\n                y: -(width >> 1) + 2,\n                dir: \"bottom\",\n                type: \"jacdac\",\n            },\n            {\n                x: 0,\n                y: (width >> 1) - 2,\n                dir: \"top\",\n                type: \"jacdac\",\n            },\n            {\n                x: -(width >> 1) + 2,\n                y: 0,\n                dir: \"left\",\n                type: \"jacdac\",\n            },\n            {\n                x: (width >> 1) - 2,\n                y: 0,\n                dir: \"right\",\n                type: \"jacdac\",\n            },\n        ],\n    }\n}\n\nexport function shapeToEC30(shape: jdspec.Shape, depth = 7) {\n    if (typeof shape === \"string\") {\n        const m = /^ec30_(\\d+)x(\\d+)_([lrup\\d]+)$/.exec(shape)\n        if (m) {\n            const w = Number(m[1])\n            const h = Number(m[2])\n            const c = m[3]\n            return generateEC30EnclosureModel(w, h, c, depth)\n        }\n    }\n    return undefined\n}\n","import { Slider, SliderProps, Typography } from \"@mui/material\"\nimport React from \"react\"\nimport { useId } from \"react\"\n\nexport default function SliderWithLabel(\n    props: {\n        label?: string\n    } & SliderProps\n) {\n    const { label, ...others } = props\n    const labelId = useId()\n    const sliderId = labelId + \"sliderId\"\n\n    return (\n        <>\n            <Typography id={labelId} variant=\"caption\" gutterBottom>\n                {label}\n            </Typography>\n            <Slider\n                id={sliderId}\n                aria-labelledby={labelId}\n                aria-label={label}\n                valueLabelDisplay=\"auto\"\n                {...others}\n            />\n        </>\n    )\n}\n"],"names":["EC30Card","lazy","useState","l","r","id","useId","gridHeightId","gridWidthId","lconnectorId","rconnectorId","handleGridWidth","setGridWith","handleGridHeight","v","setGridHeight","setConnectors","Math","connectors","handleLeftConnector","handleRightConnector","c","Object","value","model","generateEC30EnclosureModel","gridWidth","gridHeight","DEFAULT_OPTIONS","legs","type","cover","depth","width","height","boxWidth","boxHeight","name","grid","box","rings","x","y","components","dir","m","w","Number","h","others","labelId","sliderId"],"sourceRoot":""}