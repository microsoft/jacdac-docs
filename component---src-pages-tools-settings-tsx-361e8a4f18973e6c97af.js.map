{"version":3,"file":"component---src-pages-tools-settings-tsx-361e8a4f18973e6c97af.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD,SAAe;;;;;;;;ACZF;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD,SAAe;;;;;;;;ACZF;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwE;AAC5B;AACpD;AACP,SAAS,uCAAoB;AAC7B;AACA,2BAA2B,yCAAsB;AACjD,mEAAe,kEAAkB;;;;ACNyB;AAC0C;AACpG;AAC+B;AACI;AACX;AAC8C;AAChC;AACc;AACc;AAClB;AAChD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,iCAAc,QAAQ,0BAA0B;AACzD;AACA,wBAAwB,0BAAM;AAC9B;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iCAAiC,gBAAgB;AACjD,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qBAAqB,8BAAQ,GAAG;AAChC;AACA,GAAG;AACH;AACA,sBAAsB,mBAAI,kBAAkB,8BAAQ;AACpD;AACA,eAAe,yBAAI;AACnB;AACA;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CA0BvC,CAAC;AACF,4DAAe,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChF6D;AAC5B;AACpD;AACP,SAAS,uCAAoB;AAC7B;AACA,yBAAyB,yCAAsB;AAC/C,+DAAe,gEAAgB;;;;ACN2B;AAC0C;AACpG;AAC+B;AACI;AACX;AAC8C;AACR;AACxB;AACc;AACvB;AACY;AACI;AACN;AACE;AACM;AAChB;AAC+B;AACd;AACE;AAClD;AACA,YAAY,oBAAK;AACjB,UAAU,0BAAW;AACrB,YAAY,4BAAa;AACzB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,iCAAc,QAAQ,wBAAwB;AACvD;AACA,sBAAsB,0BAAM,CAAC,0BAAW;AACxC;AACA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,MAAM,KAAqC,EAAE,EAI1C;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAK;AAClB,6CAA6C,GAAG;AAChD,wCAAwC,GAAG;AAC3C;AACA,oCAAoC,mBAAI,iBAAiB,8BAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,oBAAK,gBAAgB,8B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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Delete.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/SystemUpdateAlt.js","webpack://jacdac-docs/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/CardContent/CardContent.js","webpack://jacdac-docs/./node_modules/@mui/material/TextField/textFieldClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/TextField/TextField.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/hooks/useServiceProviderFromServiceClass.ts","webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/components/ui/LoadingProgress.tsx","webpack://jacdac-docs/./src/jacdac/useServiceClient.ts","webpack://jacdac-docs/./src/components/SettingsCard.tsx","webpack://jacdac-docs/./src/pages/tools/settings.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 16.5 4-4h-3v-9h-2v9H8l4 4zm9-13h-6v1.99h6v14.03H3V5.49h6V3.5H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2z\"\n}), 'SystemUpdateAlt');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@mui/material\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useDevices from \"../hooks/useDevices\"\nimport { UIFlags } from \"../../jacdac/providerbus\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useDevices({ serviceClass, ignoreInfrastructure: true })\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if ((!UIFlags.connect && !transports.length) || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full=\"always\" transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { useEffect } from \"react\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport useBus from \"../../jacdac/useBus\"\n\nexport default function useServiceProviderFromServiceClass(\n    serviceClass: number\n): void {\n    const bus = useBus()\n\n    // run once\n    useEffect(() => {\n        const devices = bus.devices({ serviceClass })\n        const def =\n            !devices.length &&\n            serviceProviderDefinitionFromServiceClass(serviceClass)\n        const provider = def && addServiceProvider(bus, def)\n        return () => bus.removeServiceProvider(provider)\n    }, [serviceClass])\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import { CircularProgress } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function LoadingProgress(props: { size?: string }) {\n    const { size } = props\n    return (\n        <CircularProgress\n            disableShrink\n            variant=\"indeterminate\"\n            size={size || \"1em\"}\n            aria-label=\"loading\"\n        />\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(\n    service: JDService,\n    factory: (service: JDService) => T,\n    deps: React.DependencyList = []\n) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client\n}\n","import { Card, CardActions, CardContent, Grid, TextField } from \"@mui/material\"\nimport React, {\n    ChangeEvent,\n    lazy,\n    useCallback,\n    useContext,\n    useState,\n} from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport DeviceCardHeader from \"./devices/DeviceCardHeader\"\nimport useServiceClient from \"../jacdac/useServiceClient\"\nimport { SettingsClient } from \"../../jacdac-ts/src/jdom/clients/settingsclient\"\nimport { useChangeAsync } from \"../jacdac/useChange\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from \"@mui/icons-material/Delete\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@mui/icons-material/Add\"\nimport CmdButton from \"./CmdButton\"\nimport { useId } from \"react\"\nimport LoadingProgress from \"./ui/LoadingProgress\"\nimport SwitchWithLabel from \"./ui/SwitchWithLabel\"\nimport { bufferToString } from \"../../jacdac-ts/src/jdom/utils\"\nimport { randomDeviceId } from \"../../jacdac-ts/src/jdom/random\"\nimport { Button } from \"gatsby-material-ui-components\"\nimport ServiceManagerContext from \"./ServiceManagerContext\"\nimport Suspense from \"./ui/Suspense\"\nimport SystemUpdateAltIcon from \"@mui/icons-material/SystemUpdateAlt\"\nimport useSnackbar from \"./hooks/useSnackbar\"\nimport useAnalytics from \"./hooks/useAnalytics\"\n\nconst ImportButton = lazy(() => import(\"./ImportButton\"))\n\nfunction SettingRow(props: {\n    client: SettingsClient\n    name: string\n    value?: string\n    mutable: boolean\n    showSecrets: boolean\n    autoKey: boolean\n}) {\n    const { client, name, value, mutable, autoKey } = props\n    const isSecret = name[0] == \"$\"\n    const displayName = isSecret ? name.slice(1) : name\n    const handleComponentDelete = async () => {\n        await client.deleteValue(name)\n    }\n    const keyId = useId()\n    const valueId = keyId + \"-value\"\n    const nameError = \"\"\n    const valueError = \"\"\n    return (\n        <Grid item xs={12}>\n            <Grid container spacing={1}>\n                {!autoKey && (\n                    <Grid item>\n                        <TextField\n                            id={keyId}\n                            error={!!nameError}\n                            variant=\"outlined\"\n                            label=\"key\"\n                            helperText={nameError}\n                            value={displayName}\n                            disabled={true}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs>\n                    <TextField\n                        id={valueId}\n                        fullWidth={true}\n                        error={!!valueError}\n                        variant=\"outlined\"\n                        helperText={valueError}\n                        value={isSecret ? \"...\" : value}\n                        disabled={true}\n                    />\n                </Grid>\n                {mutable && (\n                    <Grid item>\n                        <CmdButton\n                            trackName=\"settings.delete\"\n                            title=\"Delete settings\"\n                            onClick={handleComponentDelete}\n                            icon={<DeleteIcon />}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction AddSettingRow(props: {\n    client: SettingsClient\n    keyPrefix: string\n    showSecrets: boolean\n    autoKey: boolean\n}) {\n    const { client, keyPrefix, showSecrets, autoKey } = props\n    const [name, setName] = useState(\"\")\n    const [value, setValue] = useState(\"\")\n    const [secret, setSecret] = useState(showSecrets)\n    const keyId = useId()\n    const valueId = keyId + \"-value\"\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setName(ev.target.value.trim())\n    }\n    const handleValueChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setValue(ev.target.value)\n    }\n    const handleChecked = (ev, checked: boolean) => {\n        setSecret(checked)\n    }\n    const handleAdd = async mounted => {\n        const keyName = autoKey ? randomDeviceId() : name\n        const key = `${secret ? \"$\" : \"\"}${keyPrefix || \"\"}${keyName}`\n        await client.setStringValue(key, value)\n        if (!mounted()) return\n        setName(\"\")\n        setValue(\"\")\n        setSecret(showSecrets)\n    }\n    const keyError = \"\"\n    const valueError = \"\"\n\n    return (\n        <Grid item xs={12}>\n            <Grid container spacing={1} alignContent=\"center\">\n                {!autoKey && (\n                    <Grid item>\n                        <TextField\n                            id={keyId}\n                            error={!!keyError}\n                            variant=\"outlined\"\n                            label=\"Add key\"\n                            helperText={keyError}\n                            value={name}\n                            onChange={handleNameChange}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs>\n                    <TextField\n                        id={valueId}\n                        fullWidth={true}\n                        error={!!valueError}\n                        variant=\"outlined\"\n                        label=\"value\"\n                        helperText={valueError}\n                        value={value}\n                        onChange={handleValueChange}\n                    />\n                </Grid>\n                {showSecrets && (\n                    <Grid item>\n                        <SwitchWithLabel\n                            checked={secret}\n                            onChange={handleChecked}\n                            label=\"Secret\"\n                        />\n                    </Grid>\n                )}\n                <Grid item>\n                    <CmdButton\n                        trackName=\"settings.add\"\n                        variant=\"contained\"\n                        disabled={\n                            (!autoKey && !name) || !!keyError || !!valueError\n                        }\n                        title=\"Add setting\"\n                        onClick={handleAdd}\n                        icon={<AddIcon />}\n                    />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction ImportSettingsButton(props: { client: SettingsClient }) {\n    const { client } = props\n    const { setError } = useSnackbar()\n\n    const handleFilesUploaded = async (files: File[]) => {\n        for (const file of files) {\n            try {\n                const text = await file.text()\n                const json = JSON.parse(text)\n                if (Array.isArray(json)) {\n                    for (const entry of json as {\n                        key: string\n                        value: string\n                    }[]) {\n                        const { key, value } = entry\n                        if (key) await client.setStringValue(key, value)\n                    }\n                }\n            } catch (e) {\n                console.warn(e)\n                setError(`invalid file ${file.name}`)\n            }\n        }\n    }\n    return (\n        <Suspense>\n            <ImportButton\n                icon={false}\n                text=\"Import\"\n                onFilesUploaded={handleFilesUploaded}\n                acceptedFiles={[\"application/json\"]}\n            />\n        </Suspense>\n    )\n}\n\nexport default function SettingsCard(props: {\n    service: JDService\n    mutable?: boolean\n    keyPrefix?: string\n    showSecrets?: boolean\n    autoKey?: boolean\n}) {\n    const { service, mutable, keyPrefix = \"\", showSecrets, autoKey } = props\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const { trackError } = useAnalytics()\n    const factory = useCallback(srv => new SettingsClient(srv), [])\n    const client = useServiceClient(service, factory)\n    const values = useChangeAsync(\n        client,\n        async c => {\n            try {\n                const keys = await c?.list()\n                return keys\n                    ?.filter(\n                        ({ key }) => !keyPrefix || key.startsWith(keyPrefix)\n                    )\n                    .map(({ key, value }) => ({\n                        key,\n                        value: bufferToString(value),\n                    }))\n            } catch (e) {\n                trackError(e)\n                console.debug(e)\n                return []\n            }\n        },\n        [keyPrefix]\n    )\n\n    const secrets = values?.filter(value => showSecrets && value.key[0] === \"$\")\n    const publics = values?.filter(value => value.key[0] !== \"$\")\n\n    const handleClear = async () => await client?.clear()\n    const handleExport = () =>\n        fileStorage.saveText(\n            \"settings.json\",\n            JSON.stringify(publics || {}, null, 2)\n        )\n\n    if (!client) return <LoadingProgress /> // wait till loaded\n\n    return (\n        <Card>\n            <DeviceCardHeader device={service.device} showAvatar={true} />\n            <CardContent>\n                <Grid container spacing={2}>\n                    {mutable && (\n                        <AddSettingRow\n                            client={client}\n                            keyPrefix={keyPrefix}\n                            showSecrets={showSecrets}\n                            autoKey={autoKey}\n                        />\n                    )}\n                    {publics?.map(({ key, value }) => (\n                        <SettingRow\n                            key={key}\n                            name={key}\n                            value={value}\n                            client={client}\n                            mutable={mutable}\n                            showSecrets={showSecrets}\n                            autoKey={autoKey}\n                        />\n                    ))}\n                    {!!secrets?.length && (\n                        <Grid item xs={12}>\n                            Secrets\n                        </Grid>\n                    )}\n                    {secrets?.map(({ key, value }) => (\n                        <SettingRow\n                            key={key}\n                            name={key}\n                            value={value}\n                            client={client}\n                            mutable={mutable}\n                            showSecrets={showSecrets}\n                            autoKey={autoKey}\n                        />\n                    ))}\n                </Grid>\n            </CardContent>\n            <CardActions>\n                <Grid container spacing={1} direction=\"row\">\n                    {mutable && (\n                        <Grid item>\n                            <CmdButton\n                                variant=\"outlined\"\n                                trackName=\"settings.clearall\"\n                                title=\"Clear all settings\"\n                                icon={<DeleteIcon />}\n                                onClick={handleClear}\n                            >\n                                Clear\n                            </CmdButton>\n                        </Grid>\n                    )}\n                    <Grid item>\n                        <Button\n                            variant=\"outlined\"\n                            title=\"export\"\n                            disabled={!values}\n                            onClick={handleExport}\n                            startIcon={<SystemUpdateAltIcon />}\n                        >\n                            Export\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <ImportSettingsButton client={client} />\n                    </Grid>\n                </Grid>\n            </CardActions>\n        </Card>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { Grid } from \"@mui/material\"\nimport { SRV_SETTINGS } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport SettingsCard from \"../../components/SettingsCard\"\nimport useServices from \"../../components/hooks/useServices\"\nimport useServiceProviderFromServiceClass from \"../../components/hooks/useServiceProviderFromServiceClass\"\nimport {\n    useLocationSearchParamBoolean,\n    useLocationSearchParamString,\n} from \"../../components/hooks/useLocationSearchParam\"\n\nexport const frontmatter = {\n    title: \"Device Settings\",\n    description: \"List and update settings on devices.\",\n}\nimport CoreHead from \"../../components/shell/Head\"\nexport const Head = (props) => <CoreHead {...props} {...frontmatter} />\n\nexport default function Page() {\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(SRV_SETTINGS)\n    const services = useServices({ serviceClass: SRV_SETTINGS })\n    const keyPrefix = useLocationSearchParamString(\"prefix\")\n    const autoKey = useLocationSearchParamBoolean(\"autokey\", false)\n    const showSecrets = useLocationSearchParamBoolean(\"secrets\", true)\n\n    return (\n        <>\n            <h1>Device Settings</h1>\n            <p>\n                Configure <Link to=\"/services/settings/\">settings</Link>{\" \"}\n                services.\n            </p>\n            <ConnectAlert serviceClass={SRV_SETTINGS} />\n            <Grid container spacing={1}>\n                {services.map(service => (\n                    <Grid key={service.nodeId} item xs={12} lg={6}>\n                        <SettingsCard\n                            service={service}\n                            mutable={true}\n                            keyPrefix={keyPrefix}\n                            showSecrets={showSecrets}\n                            autoKey={autoKey}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n            <h2>Advanced</h2>\n            <p>\n                You can use various URL argument to modify the behavior of this\n                page.\n            </p>\n            <ul>\n                <li>\n                    <code>prefix=JD</code>, will prefix and filter keys with{\" \"}\n                    <code>JD</code>.\n                </li>\n                <li>\n                    <code>autokey</code>, will automatically generate random\n                    keys for entries. Default is false.\n                </li>\n                <li>\n                    <code>secrets=0</code>, disables secrets\n                </li>\n            </ul>\n        </>\n    )\n}\n"],"names":["useContext","devices","useDevices","ignoreInfrastructure","spec","serviceSpecificationFromClassIdentifier","UIFlags","transports","bus","useBus","useEffect","def","serviceProviderDefinitionFromServiceClass","provider","addServiceProvider","meta","useStaticQuery","metaTitle","title","pageContext","site","metaDescription","description","data","name","content","size","deps","useState","c","service","factory","setClient","ImportButton","lazy","isSecret","displayName","handleComponentDelete","client","keyId","useId","valueId","nameError","valueError","mutable","handleNameChange","ev","setName","handleValueChange","setValue","handleChecked","setSecret","handleAdd","keyName","autoKey","randomDeviceId","key","secret","keyPrefix","mounted","keyError","showSecrets","useSnackbar","handleFilesUploaded","text","file","json","JSON","Array","console","setError","useAnalytics","useCallback","srv","useServiceClient","values","useChangeAsync","keys","value","bufferToString","trackError","secrets","publics","handleClear","handleExport","fileStorage","frontmatter","Head","props","useServiceProviderFromServiceClass","services","useServices","serviceClass","SRV_SETTINGS","useLocationSearchParamString","useLocationSearchParamBoolean"],"sourceRoot":""}