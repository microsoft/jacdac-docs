{"version":3,"file":"3511-944eccf8609ba8d9990f.js","mappings":"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,mBAAI,CAAC,4CAAoB;AAC/C;AACA,2BAA2B,mBAAI,eAAe,8BAAQ;AACtD;AACA;AACA;AACA;AACA,6BAA6B,yBAAI;AACjC,iBAAiB,yBAAI;AACrB,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CA0EvC,CAAC;AACF,sDAAe,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjQgE;AAC5B;AACpD;AACP,SAAS,uCAAoB;AAC7B;AACA,0BAA0B,yCAAsB;AAChD,+DAAe,iEAAiB;;;;ACNoE;AAC1C;AAC1D;AAC+B;AACI;AACX;AACa;AACiC;AACzB;AACP;AACa;AACQ;AACpB;AACyB;AAChB;AACE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gFAAgF,6BAAU,OAAO;AACjG;AACA;AACA,SAAS,iCAAc,QAAQ,yBAAyB;AACxD;AACA,uBAAuB,0BAAM,CAAC,yBAAU;AACxC;AACA,CAAC,KAAK,8BAAQ;AACd;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD,wBAAwB,0BAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qCAAqC,gCAAa;AAClD;AACA;AACA;AACA;AACA,GAAG;AACH,yBAAyB,iCAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,sBAA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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/FiberManualRecord.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/VideoSettings.js","webpack://jacdac-docs/./node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/FormControlLabel/FormControlLabel.js","webpack://jacdac-docs/./node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/MenuItem/menuItemClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/MenuItem/MenuItem.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/switchBaseClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/SwitchBase.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/svg-icons/CheckBox.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","webpack://jacdac-docs/./node_modules/@mui/material/Checkbox/checkboxClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/Checkbox/Checkbox.js","webpack://jacdac-docs/./src/components/ui/MediaRecorderButton.tsx","webpack://jacdac-docs/./src/components/ui/WebCam.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 6h18v5h2V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9v-2H3V6z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12 9 8v8zm7.71 6.43c.03-.29.04-.58.01-.86l1.07-.85c.1-.08.12-.21.06-.32l-1.03-1.79c-.06-.11-.19-.15-.31-.11l-1.28.5c-.23-.17-.48-.31-.75-.42l-.2-1.36c-.02-.13-.12-.22-.25-.22h-2.07c-.12 0-.23.09-.25.21l-.2 1.36c-.26.11-.51.26-.74.42l-1.28-.5c-.12-.05-.25 0-.31.11l-1.03 1.79c-.06.11-.04.24.06.32l1.07.86c-.03.29-.04.58-.01.86l-1.07.85c-.1.08-.12.21-.06.32l1.03 1.79c.06.11.19.15.31.11l1.27-.5c.23.17.48.31.75.42l.2 1.36c.02.12.12.21.25.21h2.07c.12 0 .23-.09.25-.21l.2-1.36c.26-.11.51-.26.74-.42l1.28.5c.12.05.25 0 .31-.11l1.03-1.79c.06-.11.04-.24-.06-.32l-1.06-.85zM19 19.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}, \"1\")], 'VideoSettings');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useEffect, useRef, useState } from \"react\"\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\"\nimport StopIcon from \"@mui/icons-material/Stop\"\nimport { downloadUrl } from \"../../../jacdac-ts/src/embed/filestorage\"\nimport IconButtonWithProgress from \"./IconButtonWithProgress\"\n\nexport function supportsMediaRecorder() {\n    return typeof MediaRecorder !== \"undefined\"\n}\n\nasync function downloadBlob(blob: Blob, name: string) {\n    const url = URL.createObjectURL(blob)\n    console.debug(`webcam: download video`, { blob, url })\n    await downloadUrl(url, name)\n    window.URL.revokeObjectURL(url)\n}\n\nexport function MediaRecorderButton(props: { stream: MediaStream }) {\n    const { stream } = props\n    const [recording, setRecording] = useState(false)\n    const recorderRef = useRef<MediaRecorder>(null)\n\n    const startRecording = async () => {\n        console.debug(`webcam: start recording`)\n        const chunks: Blob[] = []\n        const options = {\n            mimeType: \"video/webm;codecs=H264\",\n        }\n        const recorder = (recorderRef.current = new MediaRecorder(\n            stream,\n            options\n        ))\n        recorder.ondataavailable = (e: BlobEvent) => {\n            console.debug(`webcam: recording chunk`, { data: e.data })\n            e.data.size && chunks.push(e.data)\n        }\n\n        const download = () => {\n            console.debug(`webcam: download webm (chunks: ${chunks.length})`, {\n                chunks,\n            })\n            const blob = new Blob(chunks, {\n                type: \"video/webm\",\n            })\n            downloadBlob(blob, \"recording.webm\")\n        }\n\n        recorder.onstop = download\n        recorder.onerror = download\n        recorder.start()\n        setRecording(true)\n    }\n\n    const stopRecording = () => {\n        try {\n            if (recorderRef.current?.state === \"recording\") {\n                console.debug(`webcam: stop recording`)\n                recorderRef.current?.stop()\n            }\n        } catch (e) {\n            console.debug(e)\n        }\n        recorderRef.current = undefined\n        setRecording(false)\n    }\n    useEffect(() => {\n        stopRecording()\n        return () => stopRecording()\n    }, [stream])\n\n    return (\n        <IconButtonWithProgress\n            indeterminate={recording}\n            disabled={!stream}\n            title={recording ? \"Stop recording\" : \"Start recording\"}\n            onClick={recording ? stopRecording : startRecording}\n        >\n            {recording ? <StopIcon /> : <FiberManualRecordIcon />}\n        </IconButtonWithProgress>\n    )\n}\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport {\n    CardContent,\n    FormControlLabel,\n    FormControl,\n    MenuItem,\n    Select,\n    SelectChangeEvent,\n    Checkbox,\n    Grid,\n} from \"@mui/material\"\nimport React, {\n    CSSProperties,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport useMounted from \"../hooks/useMounted\"\nimport AppContext from \"../AppContext\"\nimport { Alert } from \"@mui/material\"\nimport FullscreenIcon from \"@mui/icons-material/Fullscreen\"\nimport DraggableCard from \"./DraggableCard\"\nimport VideoSettingsIcon from \"@mui/icons-material/VideoSettings\"\nimport {\n    MediaRecorderButton,\n    supportsMediaRecorder,\n} from \"./MediaRecorderButton\"\n\nexport default function WebCam() {\n    const { setShowWebCam } = useContext(AppContext)\n    const [devices, setDevices] = useState<MediaDeviceInfo[]>()\n    const [deviceId, setDeviceId] = useLocalStorage(\"webcam_deviceid\", \"\")\n    const [working, setWorking] = useState(false)\n    const [flip, setFlip] = useLocalStorage(\"webcam_flip\", false)\n    const streamRef = useRef<MediaStream>()\n    const videoRef = useRef<HTMLVideoElement>()\n    const [settingsOpen, setSettingsOpen] = useState(false)\n    const mounted = useMounted()\n\n    const supportsFullScreen =\n        typeof document !== \"undefined\" && !!document.fullscreenEnabled\n\n    const handleClose = async () => await setShowWebCam(false)\n    const handleSettings = () => {\n        console.debug(`toggle settings`, { settingsOpen })\n        setSettingsOpen(!settingsOpen)\n    }\n    const handleFlipChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFlip(event.target.checked)\n    }\n    const handleDeviceChange = (\n        ev: SelectChangeEvent<string>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) => setDeviceId(ev.target.value)\n    const handleFullScreen = () => videoRef.current?.requestFullscreen()\n    const stop = () => {\n        const stream = streamRef.current\n        if (stream) {\n            console.debug(`webcam: stop`)\n            try {\n                const tracks = stream.getTracks()\n                if (tracks) tracks.forEach(track => track.stop())\n            } catch (e) {\n                console.debug(e)\n            }\n            streamRef.current = undefined\n        }\n        const video = videoRef.current\n        if (video) {\n            try {\n                video.srcObject = undefined\n            } catch (e) {\n                console.debug(e)\n            }\n        }\n    }\n\n    // start camera\n    useEffectAsync(async () => {\n        stop()\n\n        console.debug(`webcam: start '${deviceId || \"?\"}'`)\n        try {\n            setWorking(true)\n            stop()\n            const filter: any | MediaStreamConstraints = {\n                video: {\n                    width: { ideal: 1920 },\n                    height: { ideal: 1080 },\n                    focusMode: \"manual\",\n                    exposureMode: \"manual\",\n                    whiteBalanceMode: \"manual\",\n                },\n                audio: false,\n            }\n            if (deviceId)\n                (filter.video as MediaTrackConstraints).advanced = [\n                    { deviceId: deviceId },\n                ]\n\n            const stream = await navigator.mediaDevices.getUserMedia(filter)\n            // const track = stream.getVideoTracks()[0]\n            // console.log({\n            //     capabilities: track.getCapabilities(),\n            //     constraints: track.getConstraints(),\n            //     settings: track.getSettings(),\n            // })\n            streamRef.current = stream\n            const video = videoRef.current\n            video.srcObject = stream\n            await video.play()\n\n            console.debug(`webcam: play started`)\n        } catch (e) {\n            console.debug(`webcam: play failed`)\n            console.error(e)\n            setSettingsOpen(true)\n        } finally {\n            setWorking(false)\n        }\n    }, [deviceId])\n\n    const updateDevices = async () => {\n        console.debug(`webcam: update devices`)\n        try {\n            // enumerate devices\n            const devices = await navigator.mediaDevices.enumerateDevices()\n            const webcams = devices.filter(\n                device => device.kind == \"videoinput\"\n            )\n            if (mounted()) setDevices(webcams)\n        } catch (e) {\n            console.debug(e)\n            if (mounted()) setDevices([])\n        }\n    }\n\n    useEffectAsync(async () => {\n        if (settingsOpen) await updateDevices()\n    }, [settingsOpen])\n\n    useEffect(() => {\n        navigator.mediaDevices.addEventListener(\"devicechange\", updateDevices)\n        return () =>\n            navigator.mediaDevices.removeEventListener(\n                \"devicechange\",\n                updateDevices\n            )\n    })\n\n    // cleanup\n    useEffect(() => stop, [])\n\n    const style: CSSProperties = {\n        transform: flip ? \"rotate(180deg)\" : undefined,\n    }\n\n    return (\n        <DraggableCard\n            onClose={handleClose}\n            title={\n                settingsOpen && (\n                    <Grid container spacing={1}>\n                        {devices && (\n                            <Grid item>\n                                <FormControl variant=\"outlined\" size=\"small\">\n                                    <Select\n                                        title=\"select a webcam\"\n                                        onChange={handleDeviceChange}\n                                        value={deviceId || \"\"}\n                                        disabled={working}\n                                    >\n                                        {devices?.map(({ deviceId, label }) => (\n                                            <MenuItem\n                                                key={deviceId}\n                                                value={deviceId}\n                                            >\n                                                {label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <FormControlLabel\n                                label=\"rotate 180\"\n                                control={\n                                    <Checkbox\n                                        checked={flip}\n                                        size=\"small\"\n                                        onChange={handleFlipChange}\n                                    />\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                )\n            }\n            actionItems={\n                <>\n                    {supportsMediaRecorder() && (\n                        <Grid item>\n                            <MediaRecorderButton stream={streamRef.current} />\n                        </Grid>\n                    )}\n                    {supportsFullScreen && (\n                        <Grid item>\n                            <IconButtonWithTooltip\n                                size=\"large\"\n                                onClick={handleFullScreen}\n                                title=\"full screen\"\n                                disabled={working}\n                            >\n                                <FullscreenIcon />\n                            </IconButtonWithTooltip>\n                        </Grid>\n                    )}\n                    <Grid item>\n                        <IconButtonWithTooltip\n                            size=\"large\"\n                            onClick={handleSettings}\n                            title=\"Settings\"\n                        >\n                            <VideoSettingsIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                </>\n            }\n            alert={\n                working && (\n                    <CardContent>\n                        <Alert severity=\"info\">starting camera...</Alert>\n                    </CardContent>\n                )\n            }\n        >\n            <video\n                autoPlay\n                playsInline\n                ref={videoRef}\n                muted={true}\n                title=\"webcam\"\n                style={style}\n            />\n        </DraggableCard>\n    )\n}\n"],"names":["downloadBlob","url","URL","console","downloadUrl","window","useState","recorderRef","useRef","startRecording","chunks","options","mimeType","recorder","e","data","download","blob","type","setRecording","stopRecording","useEffect","recording","useContext","useLocalStorage","streamRef","videoRef","mounted","useMounted","supportsFullScreen","document","handleClose","setShowWebCam","handleSettings","setSettingsOpen","handleFlipChange","event","setFlip","handleDeviceChange","ev","setDeviceId","handleFullScreen","stop","stream","tracks","track","video","useEffectAsync","deviceId","setWorking","filter","width","ideal","height","focusMode","exposureMode","whiteBalanceMode","audio","navigator","updateDevices","devices","webcams","device","setDevices","style","transform","flip","settingsOpen","supportsMediaRecorder","working"],"sourceRoot":""}