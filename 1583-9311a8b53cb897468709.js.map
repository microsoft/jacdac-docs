{"version":3,"file":"1583-9311a8b53cb897468709.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardPlanarPosition.tsx"],"sourcesContent":["import React, { PointerEvent, useEffect, useRef, useState } from \"react\"\nimport { PlanarPositionReg } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { PlanarPositionServer } from \"../../../jacdac-ts/src/servers/planarpositionserver\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport DashboardRegisterValueFallback from \"./DashboardRegisterValueFallback\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\n\nconst HORIZON = 16\n\nexport default function DashboardButton(props: DashboardServiceProps) {\n    const { service } = props\n    const svgRef = useRef<SVGSVGElement>(undefined)\n    const positionRegister = useRegister(service, PlanarPositionReg.Position)\n    const [x, y] = useRegisterUnpackedValue<[number, number]>(\n        positionRegister,\n        props\n    )\n    const [points, setPoints] = useState<number[][]>([])\n    const server = useServiceServer<PlanarPositionServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { controlBackground, active, textProps } = useWidgetTheme(color)\n\n    useEffect(() => setPoints([]), [positionRegister]) // clear points on new register\n    useEffect(\n        () =>\n            setPoints(pts =>\n                x === undefined ? [] : [...pts, [x, y]].slice(-HORIZON)\n            ),\n        [x, y]\n    ) // append new points\n\n    const n = points.length\n    const [xn, yn] = points[n - 1] || [0, 0]\n    const min = points.reduce(\n        (prev, curr) => [\n            Math.min(prev[0], curr[0]),\n            Math.min(prev[1], curr[1]),\n        ],\n        [0, 0]\n    )\n    const max = points.reduce(\n        (prev, curr) => [\n            Math.min(prev[0], curr[0]),\n            Math.min(prev[1], curr[1]),\n        ],\n        [0, 0]\n    )\n    const width = Math.max(64, max[0] - min[0])\n\n    const handlePointerMove = (ev: PointerEvent<SVGRectElement>) => {\n        const svg = svgRef.current\n        const pt = svg.createSVGPoint()\n        pt.x = ev.clientX\n        pt.y = ev.clientY\n        const svgP = pt.matrixTransform(svg.getScreenCTM().inverse())\n        const [cx, cy] = server.reading.values()\n        server.move(svgP.x - cx + (width >> 1), svgP.y - cy + (width >> 1))\n    }\n\n    if (x === undefined || y === undefined)\n        return <DashboardRegisterValueFallback register={positionRegister} />\n\n    const tvalue = `${Math.round(x)}mm, ${Math.round(y)}mm`\n    return (\n        <SvgWidget svgRef={svgRef} width={width} height={width} size=\"12rem\">\n            <rect\n                fill={controlBackground}\n                rx={2}\n                x={0}\n                y={0}\n                width={width}\n                height={width}\n                onPointerMove={server ? handlePointerMove : undefined}\n                style={{ cursor: server ? \"pointer\" : undefined }}\n            />\n            <g transform={`translate(${-width >> 1}, ${-width >> 1})`}>\n                <path\n                    d={`${points\n                        .map((p, i) => `${i ? `L` : `M`} ${p[0]} ${p[1]}`)\n                        .join(\" \")}`}\n                    stroke={active}\n                    strokeWidth=\"2\"\n                    fill=\"none\"\n                />\n                <circle cx={xn} cy={yn} r=\"4\" fill={active} />\n            </g>\n            <text\n                x={width >> 1}\n                y={width >> 1}\n                {...textProps}\n                aria-label={tvalue}\n                fontSize=\"0.4rem\"\n            >\n                {tvalue}\n            </text>\n        </SvgWidget>\n    )\n}\n"],"names":["HORIZON","svgRef","useRef","positionRegister","useRegister","PlanarPositionReg","useRegisterUnpackedValue","useState","server","useServiceServer","color","useWidgetTheme","useEffect","setPoints","pts","x","n","points","min","Math","prev","curr","max","width","handlePointerMove","ev","svg","pt","svgP","y","tvalue","cursor","i","p"],"sourceRoot":""}