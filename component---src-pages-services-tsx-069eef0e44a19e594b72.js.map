{"version":3,"file":"component---src-pages-services-tsx-069eef0e44a19e594b72.js","mappings":";;;;;;;;;;;;;;;;AAAoG;AAC1C;AAC1D;AAC+B;AACI;AACX;AAC8C;AAClC;AACE;AACc;AACM;AACV;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,SAAS,8DAAc,QAAQ,4EAAsB;AACrD;AACA,oBAAoB,oEAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,uFAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD,oCAAoC,mCAAmC,WAAW,4DAAK;AACvF,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,uFAAQ,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sCAAsC;AACnE;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,uFAAQ,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sCAAsC;AACpE;AACA;AACA,CAAC;AACD;AACA,CAAC,KAAK,uFAAQ,GAAG;AACjB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD,uBAAuB,oEAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,uFAAQ;AACd;AACA,uBAAuB,kBAAkB;AACzC,wBAAwB,kBAAkB;AAC1C,CAAC;AACD,sBAAsB,kBAAkB;AACxC,yBAAyB,kBAAkB;AAC3C,CAAC;AACD,6BAA6B,6CAAgB;AAC7C,gBAAgB,0EAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MA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;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,sBAAsB,uDAAK,mBAAmB,uFAAQ;AACtD,eAAe,0DAAI;AACnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAqDvC,CAAC;AACF,yDAAe,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtK4D;AAC5B;AACpD;AACP,SAAS,uCAAoB;AAC7B;AACA,yBAAyB,yCAAsB;AAC/C,+DAAe,gEAAgB;;;;ACN2B;AAC0C;AACpG;AAC+B;AACI;AACX;AAC8C;AACR;AACxB;AACc;AACvB;AACY;AACI;AACN;AACE;AACM;AAChB;AAC+B;AACd;AACE;AAClD;AACA,YAAY,oBAAK;AACjB,UAAU,0BAAW;AACrB,YAAY,4BAAa;AACzB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,iCAAc,QAAQ,wBAAwB;AACvD;AACA,sBAAsB,0BAAM,CAAC,0BAAW;AACxC;AACA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,MAAM,KAAqC,EAAE,EAI1C;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sources":["webpack://jacdac-docs/./node_modules/@mui/material/Divider/Divider.js","webpack://jacdac-docs/./node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/InputAdornment/InputAdornment.js","webpack://jacdac-docs/./node_modules/@mui/material/ListItemText/ListItemText.js","webpack://jacdac-docs/./node_modules/@mui/material/TextField/textFieldClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/TextField/TextField.js","webpack://jacdac-docs/./src/components/icons/MakeCodeIcon.tsx","webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/components/ui/ChipList.tsx","webpack://jacdac-docs/./src/components/ui/FilterChip.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecificationList.tsx","webpack://jacdac-docs/./src/pages/services.tsx"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import { SvgIcon, SvgIconProps } from \"@mui/material\"\nimport React from \"react\"\n\nexport default (props: SvgIconProps) => (\n    <SvgIcon titleAccess=\"MakeCode logo\" {...props}>\n        <path\n            d=\"M4.703 2.615s-.505.05-.72.15a3.011 3.011 0 00-.391.221c-.22.12-.42.266-.6.444-.52.516-.795 1.2-.834 2.05a6.857 6.857 0 00-.066.961V8.36a5.117 5.117 0 01-.137 1.032 1.73 1.73 0 01-.4.773 2.006 2.006 0 00-.15.149 6.534 6.534 0 01-.848.617c-.303.196-.481.474-.537.83v.017c-.01.07-.017.14-.018.215L0 12.006v.008c0 .08.003.156.012.226h.002c.024.214.082.378.177.492.129.153.345.328.649.52.304.192.552.398.74.62.19.221.332.549.428.985.037.17.065.54.084 1.106v1.514c0 .285.023.542.056.787.001.047 0 .092.002.14.007.587.135 1.107.385 1.559.25.453.604.803 1.063 1.05.458.248.978.372 1.56.372h14.139c.262 0 .505-.05.72-.15.139-.064.267-.14.391-.221.218-.12.42-.266.6-.444.52-.516.795-1.2.834-2.05.042-.299.066-.618.066-.963v-1.918c.014-.372.059-.715.137-1.03.078-.314.213-.572.4-.775a1.98 1.98 0 00.15-.146c.2-.179.48-.384.848-.618.303-.196.481-.475.537-.832l.002-.015a1.66 1.66 0 00.018-.217V11.988c0-.08-.004-.156-.012-.226h-.002c-.024-.214-.082-.378-.177-.492-.129-.153-.345-.328-.649-.52a3.208 3.208 0 01-.74-.62c-.19-.221-.332-.55-.428-.987-.037-.17-.065-.538-.084-1.104V6.523c0-.285-.023-.542-.056-.787-.001-.047 0-.092-.002-.14-.007-.587-.135-1.107-.385-1.559a2.598 2.598 0 00-1.063-1.05c-.458-.248-.978-.372-1.56-.372H4.703zm1.22 1.24c.307 0 .533.058.673.172.115.096.168.24.168.453a.885.885 0 01-.069.36.501.501 0 01-.142.201.346.346 0 01-.18.07c-.31.042-.543.095-.713.164a1.03 1.03 0 00-.543.536c-.093.201-.149.47-.174.818-.022.301-.033.725-.033 1.293-.012.796-.058 1.422-.137 1.861-.07.398-.206.74-.4 1.02-.197.282-.499.552-.898.804l-.616.39.618.386c.286.18.52.368.695.558.166.18.304.407.414.672.115.277.2.614.248 1.004.051.413.076.908.076 1.47 0 .587.013 1.025.037 1.34.03.367.094.64.196.835.123.236.303.403.537.496.168.067.395.114.693.148a.404.404 0 01.268.16c.081.1.123.259.123.471 0 .308-.064.608-.84.608-.477 0-.898-.094-1.25-.282a2.006 2.006 0 01-.813-.785 2.402 2.402 0 01-.31-1.197c-.048-2.666-.098-3.199-.139-3.37-.115-.472-.286-.83-.525-1.097a3.373 3.373 0 00-.776-.633c-.216-.13-.375-.254-.47-.369-.027-.032-.088-.136-.088-.416 0-.288.09-.471.293-.596.454-.28.781-.522.998-.746.244-.251.415-.565.51-.931.084-.328.132-.788.148-1.407.015-.58.03-1.305.049-2.177.016-.706.229-1.25.654-1.666.426-.416.988-.618 1.719-.618zm12.153 0c.477 0 .898.095 1.25.282.348.185.612.442.813.785.2.343.305.746.31 1.197.048 2.666.098 3.199.139 3.37.115.472.286.83.525 1.097.216.24.476.452.776.633.217.131.376.255.47.369.027.032.088.136.088.416 0 .287-.09.471-.293.596-.454.28-.78.522-.998.746-.243.25-.415.565-.51.931-.084.328-.132.788-.148 1.407-.015.58-.03 1.305-.049 2.177-.016.706-.229 1.25-.654 1.666-.426.416-.988.618-1.719.618-.307 0-.533-.058-.672-.172-.116-.096-.168-.24-.168-.453 0-.135.021-.253.069-.36a.512.512 0 01.14-.201.353.353 0 01.182-.07c.31-.042.543-.095.713-.164.238-.099.424-.284.54-.538.094-.201.152-.468.177-.816.021-.301.033-.727.033-1.295.012-.796.058-1.42.137-1.86.07-.397.204-.74.398-1.019.196-.281.499-.552.898-.804l.616-.39-.616-.386a3.412 3.412 0 01-.695-.558 2.275 2.275 0 01-.416-.672 3.871 3.871 0 01-.246-1.004 12.22 12.22 0 01-.078-1.47c0-.587-.012-1.025-.037-1.34-.03-.367-.092-.64-.194-.835a1.021 1.021 0 00-.539-.496 2.76 2.76 0 00-.691-.148.4.4 0 01-.268-.16c-.082-.1-.123-.259-.123-.471 0-.308.064-.608.84-.608zm-6.29 1.348c.052-.005.341-.005.394 0v.01a1.524 1.524 0 011.287 1.457c0 .62-.332.891-.332.916-.33.346-.123.744.467.695 0 0 2.4.012 2.445 0a.576.576 0 01.422.555l-.002 2.574c-.106.3-.396.36-.658.111-.025 0-.296-.332-.916-.332a1.521 1.521 0 00-1.457 1.286h-.008a4.897 4.897 0 000 .394h.008a1.524 1.524 0 001.457 1.287c.62 0 .89-.332.916-.332.27-.256.557-.225.658.112v2.783a.562.562 0 01-.563.562H8.061a.561.561 0 01-.563-.562V8.836c0-.261.18-.492.422-.555.046.012 2.443 0 2.443 0 .659.032.798-.349.469-.695 0-.025-.332-.296-.332-.916a1.521 1.521 0 011.285-1.457v-.01z\"\n            strokeWidth=\".75\"\n        />\n    </SvgIcon>\n)\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import { styled } from \"@mui/material/styles\"\nimport React, { ReactNode } from \"react\"\n\nconst PREFIX = \"ChipList\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n}\n\nconst Root = styled(\"span\")(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexWrap: \"wrap\",\n        \"& > *\": {\n            margin: theme.spacing(0.5),\n        },\n    },\n}))\n\nexport default function ChipList(props: { children: ReactNode }) {\n    const { children } = props\n\n    if (!children) return null\n\n    return <Root className={classes.root}>{children}</Root>\n}\n","import React from \"react\"\nimport { Chip } from \"@mui/material\"\n\nexport default function FilterChip(props: {\n    label: string\n    value: boolean\n    icon?: JSX.Element\n    onClick: () => void\n}) {\n    const { label, value, icon, onClick } = props\n    const descr = value\n        ? `Disable ${label} filter`\n        : `Filter by ${label} support`\n    return (\n        <Chip\n            label={label}\n            aria-label={descr}\n            title={descr}\n            icon={icon}\n            variant={value ? undefined : \"outlined\"}\n            color={value ? \"secondary\" : undefined}\n            onClick={onClick}\n        />\n    )\n}","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React, { ReactNode } from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}hr`,\n    start: `${PREFIX}start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: ReactNode\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n","import {\n    Chip,\n    Grid,\n    List,\n    ListItem,\n    ListItemText,\n    Typography,\n} from \"@mui/material\"\nimport React, { useMemo } from \"react\"\nimport { isInfrastructure } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { ellipseFirstSentence } from \"../../../jacdac-ts/src/jdom/utils\"\nimport GridHeader from \"../ui/GridHeader\"\nimport { Link, ListItemButton } from \"gatsby-theme-material-ui\"\nimport MakeCodeIcon from \"../icons/MakeCodeIcon\"\nimport {\n    SERVICE_MIXIN_NODE_NAME,\n    VIRTUAL_DEVICE_NODE_NAME,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { serviceProviderDefinitionFromServiceClass } from \"../../../jacdac-ts/src/servers/servers\"\nimport KindIcon from \"../KindIcon\"\nimport ChipList from \"../ui/ChipList\"\nimport JacdacIcon from \"../icons/JacdacIcon\"\nimport { resolveMakecodeServiceFromClassIdentifier } from \"../makecode/services\"\nimport { isMixinService } from \"../../../jacdac-ts/jacdac-spec/spectool/jdutils\"\nimport useDeviceCatalog from \"../devices/useDeviceCatalog\"\nimport useChange from \"../../jacdac/useChange\"\n\nfunction ServiceSpecificatinListItemText(props: {\n    service: jdspec.ServiceSpec\n}) {\n    const { service } = props\n    const { classIdentifier, name, notes, tags } = service\n    const makecode = resolveMakecodeServiceFromClassIdentifier(classIdentifier)\n    const simulator = serviceProviderDefinitionFromServiceClass(classIdentifier)\n    const deviceCatalog = useDeviceCatalog()\n    const deviceSpecifications = useChange(deviceCatalog, _ =>\n        _.specificationsForService(classIdentifier)\n    )\n    const device = !!deviceSpecifications?.length\n    const mixin = isMixinService(classIdentifier)\n\n    return (\n        <ListItemText\n            key={classIdentifier}\n            disableTypography={true}\n            primary={name}\n            secondary={\n                <ChipList>\n                    <Typography variant=\"caption\">\n                        {ellipseFirstSentence(notes[\"short\"])}\n                    </Typography>\n                    {tags?.map(tag => (\n                        <Chip key={tag} size=\"small\" label={tag} />\n                    ))}\n                    {mixin && (\n                        <Chip\n                            icon={<KindIcon kind={SERVICE_MIXIN_NODE_NAME} />}\n                            size=\"small\"\n                            label=\"mixin\"\n                        />\n                    )}\n                    {simulator && (\n                        <Chip\n                            icon={<KindIcon kind={VIRTUAL_DEVICE_NODE_NAME} />}\n                            size=\"small\"\n                            label=\"simulator\"\n                        />\n                    )}\n                    {device && (\n                        <Chip\n                            icon={<JacdacIcon />}\n                            size=\"small\"\n                            label=\"devices\"\n                        />\n                    )}\n                    {makecode && (\n                        <Chip\n                            icon={<MakeCodeIcon />}\n                            size=\"small\"\n                            label=\"MakeCode\"\n                        />\n                    )}\n                </ChipList>\n            }\n        />\n    )\n}\n\nexport default function ServiceSpecificationList(props: {\n    services: jdspec.ServiceSpec[]\n    title?: string\n    count?: number\n    infrastructure?: boolean\n    status?: jdspec.StabilityStatus[]\n}) {\n    const { services, title, count, status, infrastructure } = props\n    const specs = useMemo(() => {\n        let r = services\n        if (status !== undefined)\n            r = r.filter(spec => status.indexOf(spec.status) > -1)\n        if (infrastructure !== undefined)\n            r = r.filter(spec => isInfrastructure(spec) == infrastructure)\n        r.sort((l, r) => l.name.localeCompare(r.name))\n        if (count !== undefined) r = r.slice(0, count)\n        return r\n    }, [services, count, status, infrastructure])\n\n    if (!specs?.length) return null\n\n    return (\n        <Grid container spacing={1}>\n            {title && <GridHeader title={title} count={specs.length} />}\n            <Grid item>\n                <List component=\"div\">\n                    {specs.map(node => (\n                        <ListItemButton\n                            key={node.shortId}\n                            to={`/services/${node.shortId}`}\n                            style={{ textDecoration: \"none\" }}\n                        >\n                            <ServiceSpecificatinListItemText service={node} />\n                        </ListItemButton>\n                    ))}\n                </List>\n            </Grid>\n        </Grid>\n    )\n}\n","import { Divider, Grid, InputAdornment, TextField } from \"@mui/material\"\nimport React, { useMemo, useState } from \"react\"\nimport ServiceSpecificationList from \"../components/specification/ServiceSpecificationList\"\nimport { useDebounce } from \"use-debounce\"\nimport SearchIcon from \"@mui/icons-material/Search\"\nimport ChipList from \"../components/ui/ChipList\"\nimport { isSensor, serviceSpecifications } from \"../../jacdac-ts/src/jdom/spec\"\nimport { arrayConcatMany, unique } from \"../../jacdac-ts/src/jdom/utils\"\nimport MakeCodeIcon from \"../components/icons/MakeCodeIcon\"\nimport KindIcon from \"../components/KindIcon\"\nimport { serviceProviderDefinitionFromServiceClass } from \"../../jacdac-ts/src/servers/servers\"\nimport JacdacIcon from \"../components/icons/JacdacIcon\"\nimport SpeedIcon from \"@mui/icons-material/Speed\"\nimport {\n    SERVICE_MIXIN_NODE_NAME,\n    VIRTUAL_DEVICE_NODE_NAME,\n} from \"../../jacdac-ts/src/jdom/constants\"\nimport { useId } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { resolveMakecodeServiceFromClassIdentifier } from \"../components/makecode/services\"\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\"\nimport { isMixinService } from \"../../jacdac-ts/jacdac-spec/spectool/jdutils\"\nimport useDeviceCatalog from \"../components/devices/useDeviceCatalog\"\nimport FilterChip from \"../components/ui/FilterChip\"\n\nimport CoreHead from \"../components/shell/Head\"\nexport const Head = props => <CoreHead {...props} title=\"Services\" />\n\ninterface ServiceFilter {\n    query: string\n    tag?: string\n    sensors?: boolean\n    makeCode?: boolean\n    mixin?: boolean\n    simulators?: boolean\n    devices?: boolean\n    test?: boolean\n}\n\nexport default function ServiceCatalog() {\n    const [filter, setFilter] = useState<ServiceFilter>({\n        query: \"\",\n    })\n    const [deboundedFilter] = useDebounce(filter, 200)\n    const { query, tag, makeCode, mixin, simulators, devices, sensors, test } =\n        filter\n    const deviceCatalog = useDeviceCatalog()\n    const searchId = useId()\n    const allTags = useMemo(\n        () =>\n            unique(\n                arrayConcatMany(\n                    serviceSpecifications().map(srv => [srv.group, ...srv.tags])\n                ).filter(t => !!t)\n            ),\n        []\n    )\n    const services = useMemo(() => {\n        const m = query.toLowerCase().trim()\n        let r = serviceSpecifications()\n        if (m) {\n            const filter = (s: string) => s?.toLowerCase().indexOf(m) > -1\n            r = r.filter(\n                srv =>\n                    filter(srv.name) ||\n                    filter(srv.notes[\"short\"]) ||\n                    m.indexOf(srv.classIdentifier.toString()) > -1 ||\n                    m.indexOf(srv.classIdentifier.toString(16)) > -1\n            )\n        }\n        if (tag) {\n            r = r.filter(srv => srv.group === tag || srv.tags.indexOf(tag) > -1)\n        }\n        if (makeCode)\n            r = r.filter(\n                srv =>\n                    !!resolveMakecodeServiceFromClassIdentifier(\n                        srv.classIdentifier\n                    )\n            )\n        if (mixin) r = r.filter(srv => isMixinService(srv.classIdentifier))\n        if (simulators)\n            r = r.filter(\n                srv =>\n                    !!serviceProviderDefinitionFromServiceClass(\n                        srv.classIdentifier\n                    )\n            )\n        if (devices)\n            r = r.filter(\n                srv =>\n                    !!deviceCatalog.specificationsForService(\n                        srv.classIdentifier\n                    )?.length\n            )\n        if (sensors) r = r.filter(srv => isSensor(srv))\n        return r\n    }, [deboundedFilter])\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n        setFilter({\n            ...filter,\n            query: event.target.value,\n        })\n    const handleTagClick = (t: string) => () => {\n        setFilter({ ...filter, tag: tag === t ? \"\" : t })\n    }\n    const handleMakeCodeClick = () =>\n        setFilter({ ...filter, makeCode: !makeCode })\n    const handleMixinClick = () => setFilter({ ...filter, mixin: !mixin })\n    const handleTestClick = () => setFilter({ ...filter, test: !test })\n    const handleSimulatorClick = () =>\n        setFilter({ ...filter, simulators: !simulators })\n    const handleDevicesClick = () => setFilter({ ...filter, devices: !devices })\n    const handleSensorsClick = () => setFilter({ ...filter, sensors: !sensors })\n\n    return (\n        <>\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <TextField\n                        id={searchId}\n                        margin=\"normal\"\n                        type=\"search\"\n                        size=\"small\"\n                        variant=\"outlined\"\n                        label=\"Search services\"\n                        aria-label=\"Search services\"\n                        fullWidth={true}\n                        value={query}\n                        onChange={handleChange}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <ChipList>\n                        {allTags.map(t => (\n                            <FilterChip\n                                key={t}\n                                label={t}\n                                onClick={handleTagClick(t)}\n                                value={tag === t}\n                            />\n                        ))}\n                        <Divider orientation=\"vertical\" flexItem />\n                        <FilterChip\n                            label=\"Sensors\"\n                            icon={<SpeedIcon />}\n                            value={sensors}\n                            onClick={handleSensorsClick}\n                        />\n                        <FilterChip\n                            label=\"Simulator\"\n                            icon={<KindIcon kind={VIRTUAL_DEVICE_NODE_NAME} />}\n                            value={simulators}\n                            onClick={handleSimulatorClick}\n                        />\n                        <FilterChip\n                            label=\"Devices\"\n                            icon={<JacdacIcon />}\n                            onClick={handleDevicesClick}\n                            value={devices}\n                        />\n                        <FilterChip\n                            label=\"Mixin\"\n                            icon={<KindIcon kind={SERVICE_MIXIN_NODE_NAME} />}\n                            value={mixin}\n                            onClick={handleMixinClick}\n                        />\n                        <FilterChip\n                            label=\"MakeCode\"\n                            icon={<MakeCodeIcon />}\n                            value={makeCode}\n                            onClick={handleMakeCodeClick}\n                        />\n                        <FilterChip\n                            label=\"Test\"\n                            icon={<CheckCircleIcon />}\n                            value={test}\n                            onClick={handleTestClick}\n                        />\n                    </ChipList>\n                </Grid>\n                {!services.length && (\n                    <Grid item>\n                        There are no services matching this request.\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <ServiceSpecificationList\n                        title=\"Stable\"\n                        status={[\"stable\"]}\n                        infrastructure={false}\n                        services={services}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <ServiceSpecificationList\n                        title=\"Release Candidate\"\n                        status={[\"rc\"]}\n                        infrastructure={false}\n                        services={services}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <ServiceSpecificationList\n                        title=\"Experimental\"\n                        status={[\"experimental\"]}\n                        infrastructure={false}\n                        services={services}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <ServiceSpecificationList\n                        title=\"Jacdac\"\n                        infrastructure={true}\n                        services={services}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <ServiceSpecificationList\n                        title=\"Deprecated\"\n                        status={[\"deprecated\"]}\n                        infrastructure={false}\n                        services={services}\n                    />\n                </Grid>\n            </Grid>\n            <h2>See Also</h2>\n            <ul>\n                <li>\n                    Add a new service using the{\" \"}\n                    <Link to=\"/tools/service-editor/\">\n                        Service Specification Editor\n                    </Link>\n                    .\n                </li>\n                <li>\n                    See the{\" \"}\n                    <Link to=\"/tools/service-status/\">service status</Link> page\n                    for the current level of support a services .\n                </li>\n            </ul>\n        </>\n    )\n}\n"],"names":["props","meta","useStaticQuery","metaTitle","title","pageContext","site","metaDescription","description","data","name","content","PREFIX","classes","root","Root","styled","display","justifyContent","flexWrap","margin","theme","descr","value","hr","start","StyledGrid","background","marginBottom","width","clsx","action","variant","count","makecode","resolveMakecodeServiceFromClassIdentifier","simulator","serviceProviderDefinitionFromServiceClass","deviceCatalog","useDeviceCatalog","deviceSpecifications","useChange","_","device","mixin","isMixinService","ellipseFirstSentence","notes","tags","tag","specs","useMemo","r","status","spec","infrastructure","isInfrastructure","l","node","textDecoration","Head","setFilter","useState","query","useDebounce","test","searchId","useId","allTags","unique","arrayConcatMany","serviceSpecifications","srv","t","services","m","filter","s","isSensor","handleChange","event","handleTagClick","handleMakeCodeClick","makeCode","handleMixinClick","handleTestClick","handleSimulatorClick","simulators","handleDevicesClick","devices","handleSensorsClick","sensors","startAdornment","VIRTUAL_DEVICE_NODE_NAME","SERVICE_MIXIN_NODE_NAME"],"sourceRoot":""}