{"version":3,"file":"5937-db74572b94dd2eb81155.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/widgets/LEDMatrixWidget.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDotMatrix.tsx","webpack://jacdac-docs/./src/components/hooks/useArrowKeys.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigation.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigationProps.ts"],"sourcesContent":["import React, { SVGProps, useEffect, useRef, useState } from \"react\"\nimport SvgWidget from \"./SvgWidget\"\nimport useWidgetTheme from \"./useWidgetTheme\"\nimport useFireKey from \"../hooks/useFireKey\"\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport { getBit, toggleBit } from \"../../../jacdac-ts/src/jdom/utils\"\n\nexport default function LEDMatrixWidget(props: {\n    leds: Uint8Array\n    brightness: number\n    rows: number\n    columns: number\n    color?: \"primary\" | \"secondary\"\n    onChange?: (newLeds: Uint8Array) => void\n    dots?: boolean\n}) {\n    const {\n        leds,\n        brightness = 0.5,\n        rows,\n        columns,\n        color = \"primary\",\n        onChange,\n        dots,\n    } = props\n    const [currentLeds, setCurrentLeds] = useState(leds)\n    const widgetRef = useRef<SVGGElement>()\n    const { background, controlBackground, active } = useWidgetTheme(color)\n    const navProps = useKeyboardNavigationProps(widgetRef.current)\n\n    // grad new leds value\n    useEffect(() => setCurrentLeds(leds), [leds])\n\n    // no data about layout\n    if (rows === undefined || columns === undefined) return <LoadingProgress />\n\n    const widgetSize = `clamp(6rem, 16vw, 16vh)`\n\n    // compute size\n    const minOpacity = 0.6\n    const pw = 8\n    const ph = 8\n    const ps = 0.5\n    const pr = dots ? 4 : 2\n    const m = 2\n    const w = columns * pw + (columns + 1) * m\n    const h = rows * ph + (rows + 1) * m\n\n    const column_size = (rows + 7) >> 3\n\n    const handleLedClick =\n        (bitindex: number) => (ev: React.PointerEvent<SVGRectElement>) => {\n            if (ev && !ev.buttons) return\n            let newLeds = currentLeds.slice(0)\n            // ensure that newLeds has the right size\n            const n = columns * column_size\n            if (newLeds.length !== n) {\n                if (newLeds.length > n) newLeds = newLeds.slice(0, n)\n                else {\n                    const temp = new Uint8Array(n)\n                    temp.set(newLeds, 0)\n                    newLeds = temp\n                }\n            }\n            toggleBit(newLeds, bitindex)\n            setCurrentLeds(newLeds)\n            onChange?.(newLeds)\n        }\n\n    // add leds\n    const render = () => {\n        const boxEls: JSX.Element[] = []\n        const ledEls: JSX.Element[] = []\n        const onFill = active\n        const onStroke = undefined\n        const offFill = controlBackground\n        const offStroke = \"transparent\"\n        const ledProps: SVGProps<SVGRectElement> = {\n            className: \"clickeable\",\n            role: \"button\",\n            tabIndex: 0,\n        }\n\n        let y = m\n        for (let row = 0; row < rows; row++) {\n            let x = m\n            for (let col = 0; col < columns; col++) {\n                const box = (\n                    <rect\n                        key={`b${row}-${col}`}\n                        x={x}\n                        y={y}\n                        width={pw}\n                        height={ph}\n                        rx={pr}\n                        ry={pr}\n                        fill={controlBackground}\n                    />\n                )\n                boxEls.push(box)\n\n                const bitindex = row + col * column_size * 8\n                const on = getBit(currentLeds ?? new Uint8Array(0), bitindex)\n                const handleClick = handleLedClick(bitindex)\n                const fireClick = useFireKey(handleClick)\n\n                ledEls.push(\n                    <rect\n                        key={`l${row}-${col}`}\n                        x={x}\n                        y={y}\n                        width={pw}\n                        height={ph}\n                        rx={pr}\n                        ry={pr}\n                        fill={on ? onFill : offFill}\n                        stroke={on ? onStroke : offStroke}\n                        strokeWidth={ps}\n                        {...ledProps}\n                        aria-label={`led ${row}, ${col} ${on ? \"on\" : \"off\"}`}\n                        onPointerDown={handleClick}\n                        onPointerEnter={handleClick}\n                        onKeyDown={fireClick}\n                    />\n                )\n                x += pw + m\n            }\n            y += ph + m\n        }\n        return { boxEls, ledEls }\n    }\n\n    const { boxEls, ledEls } = render()\n    return (\n        <SvgWidget size={widgetSize} width={w} height={h}>\n            <rect\n                x={0}\n                y={0}\n                width={w}\n                height={h}\n                rx={2}\n                ry={2}\n                fill={background}\n            />\n            <g ref={widgetRef} {...navProps}>\n                {boxEls}\n                {ledEls.length && (\n                    <g opacity={minOpacity + brightness * (1 - minOpacity)}>\n                        {ledEls}\n                    </g>\n                )}\n            </g>\n        </SvgWidget>\n    )\n}\n","import React from \"react\"\nimport {\n    DotMatrixReg,\n    DotMatrixVariant,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useChange from \"../../jacdac/useChange\"\nimport LEDMatrixWidget from \"../widgets/LEDMatrixWidget\"\nimport useRegister from \"../hooks/useRegister\"\nimport { Grid } from \"@mui/material\"\nimport RegisterInput from \"../RegisterInput\"\nimport DashboardRegisterValueFallback from \"./DashboardRegisterValueFallback\"\n\nexport default function DashboardDotMatrixDisplay(\n    props: DashboardServiceProps\n) {\n    const { service, expanded } = props\n\n    const dotsRegister = useRegister(service, DotMatrixReg.Dots)\n    const brightnessRegister = useRegister(service, DotMatrixReg.Brightness)\n    const rowsRegister = useRegister(service, DotMatrixReg.Rows)\n    const columnsRegister = useRegister(service, DotMatrixReg.Columns)\n    const variantRegister = useRegister(service, DotMatrixReg.Variant)\n\n    const [dots] = useRegisterUnpackedValue<[Uint8Array]>(dotsRegister, props)\n    const [brightness = 0] = useRegisterUnpackedValue<[number]>(\n        brightnessRegister,\n        props\n    )\n    const [rows] = useRegisterUnpackedValue<[number]>(rowsRegister, props)\n    const [columns] = useRegisterUnpackedValue<[number]>(columnsRegister, props)\n    const [variant] = useRegisterUnpackedValue<[DotMatrixVariant]>(\n        variantRegister,\n        props\n    )\n    const server = useServiceServer(service)\n    const color = server ? \"secondary\" : \"primary\"\n    useChange(server)\n    const handleChange = (newLeds: Uint8Array) => {\n        dotsRegister.sendSetAsync(newLeds, true)\n    }\n\n    if (rows === undefined || columns === undefined)\n        return (\n            <DashboardRegisterValueFallback\n                register={rows === undefined ? rowsRegister : columnsRegister}\n            />\n        )\n\n    return (\n        <Grid\n            container\n            spacing={1}\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n        >\n            <Grid item xs={12}>\n                <LEDMatrixWidget\n                    leds={dots}\n                    brightness={brightness}\n                    rows={rows}\n                    columns={columns}\n                    color={color}\n                    onChange={handleChange}\n                    dots={variant === DotMatrixVariant.Braille}\n                />\n            </Grid>\n            {expanded && (\n                <Grid item xs={12}>\n                    <RegisterInput\n                        register={brightnessRegister}\n                        showRegisterName={true}\n                        visible={props.visible}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { KeyboardEvent } from \"react\"\nimport { keyCodeFromEvent } from \"./useFireKey\"\n\nconst PAGE_DOWN = 34\nconst PAGE_UP = 33\nconst HOME = 36\nconst END = 35\nconst LEFT_KEY = 37\nconst UP_KEY = 38\nconst RIGHT_KEY = 39\nconst DOWN_KEY = 40\n\nexport default function useArrowKeys(options: {\n    onLeft?: (offset: number) => void\n    onRight?: (offset: number) => void\n    onUp?: (offset: number) => void\n    onDown?: (offset: number) => void\n    symmetric?: boolean\n}) {\n    const { onLeft, onUp, onRight, onDown, symmetric } = options\n\n    if (!onLeft && !onUp && !onRight && !onDown) return undefined\n\n    const handlers = {\n        [LEFT_KEY]: onLeft,\n        [RIGHT_KEY]: onRight,\n        [UP_KEY]: onUp || (symmetric && onRight),\n        [DOWN_KEY]: onDown || (symmetric && onLeft),\n    }\n\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e)\n        const handler = handlers[charCode]\n        if (handler) {\n            e.preventDefault()\n            handler()\n        }\n    }\n}\n","export default function useKeyboardNavigation(\n    parentRef: Element,\n    wrap = false\n) {\n    const query = '[tabindex=\"0\"]'\n    const onMove = (offset: number) => () => {\n        const focusable = Array.from<SVGElement>(\n            parentRef?.querySelectorAll(query) || []\n        )\n        if (focusable.length) {\n            const me = focusable.findIndex(f => f === document.activeElement)\n            // don't wrap\n            if (\n                !wrap &&\n                ((me === 0 && offset < 0) ||\n                    (me === focusable.length - 1 && offset > 0))\n            )\n                return\n            const next = (me + offset + focusable.length) % focusable.length\n            focusable[next].focus()\n        }\n    }\n    return onMove\n}\n","import useArrowKeys from \"./useArrowKeys\"\nimport useKeyboardNavigation from \"./useKeyboardNavigation\"\n\nexport default function useKeyboardNavigationProps(\n    parentRef: Element,\n    vertical?: boolean\n) {\n    const onMove = useKeyboardNavigation(parentRef)\n\n    const onKeyDown = useArrowKeys({\n        onLeft: !vertical && onMove(-1),\n        onRight: !vertical && onMove(1),\n        onDown: vertical && onMove(1),\n        onUp: vertical && onMove(-1),\n    })\n\n    return {\n        onKeyDown: parentRef && onKeyDown,\n    }\n}\n"],"names":["brightness","color","useState","widgetRef","useRef","useWidgetTheme","navProps","useKeyboardNavigationProps","useEffect","setCurrentLeds","rows","columns","widgetSize","minOpacity","pw","ph","ps","pr","dots","m","w","h","column_size","handleLedClick","bitindex","ev","newLeds","currentLeds","n","temp","toggleBit","onChange","render","boxEls","ledEls","onFill","onStroke","offFill","offStroke","ledProps","className","role","tabIndex","y","row","x","col","box","on","getBit","handleClick","fireClick","useFireKey","dotsRegister","useRegister","DotMatrixReg","brightnessRegister","rowsRegister","columnsRegister","variantRegister","useRegisterUnpackedValue","server","useServiceServer","useChange","handleChange","variant","DotMatrixVariant","expanded","props","PAGE_DOWN","PAGE_UP","HOME","END","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","handlers","onUp","symmetric","onDown","e","charCode","keyCodeFromEvent","handler","wrap","query","onMove","offset","focusable","Array","me","f","document","next","useKeyboardNavigation","onKeyDown","useArrowKeys","onLeft","onRight","vertical","parentRef"],"sourceRoot":""}