{"version":3,"file":"5457-70c08a88a1f551313998.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Sync.js","webpack://jacdac-docs/./src/components/CmdButton.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardRealTimeClock.tsx","webpack://jacdac-docs/./src/components/hooks/useMounted.ts"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Sync');\nexports.default = _default;","import { darken, lighten } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React, { CSSProperties, ReactNode, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ErrorIcon from \"@mui/icons-material/Error\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport useAnalytics, { EventProperties } from \"./hooks/useAnalytics\"\nimport useMounted from \"./hooks/useMounted\"\nimport clsx from \"clsx\"\nimport useSnackbar from \"./hooks/useSnackbar\"\nimport useBus from \"../jacdac/useBus\"\nimport OptionalTooltip from \"./widgets/OptionalTooltip\"\n\nconst PREFIX = \"CmdButton\"\n\nconst classes = {\n    ack: `${PREFIX}Ack`,\n    error: `${PREFIX}Error`,\n}\n\nconst Root = styled(\"span\")(({ theme }) => ({\n    [`& .${classes.ack}`]: {\n        color: \"#fff\",\n        fontWeight: theme.typography.fontWeightMedium,\n        backgroundColor: theme.palette.success.main,\n    },\n\n    [`& .${classes.error}`]: {\n        color: \"#fff\",\n        backgroundColor: (theme.palette.mode === \"light\" ? lighten : darken)(\n            theme.palette.error.main,\n            0.6\n        ),\n    },\n}))\n\nconst ACK_RESET_DELAY = 500\nconst ERROR_RESET_DELAY = 2000\n\nexport default function CmdButton(props: {\n    onClick: (mounted: () => boolean) => Promise<void>\n    className?: string\n    style?: CSSProperties\n    title?: string\n    children?: ReactNode\n    icon?: JSX.Element\n    size?: \"small\" | \"large\" | undefined\n    variant?: \"outlined\" | \"contained\" | undefined\n    disabled?: boolean\n    disableReset?: boolean\n    autoRun?: boolean\n    trackName?: string\n    trackProperties?: EventProperties\n    ackResetDelay?: number\n    color?:\n        | \"inherit\"\n        | \"primary\"\n        | \"secondary\"\n        | \"error\"\n        | \"info\"\n        | \"success\"\n        | \"warning\"\n}) {\n    const {\n        onClick,\n        className,\n        style,\n        children,\n        icon,\n        title,\n        disabled,\n        disableReset,\n        autoRun,\n        trackName,\n        trackProperties,\n        ackResetDelay,\n        color,\n        ...others\n    } = props\n    const bus = useBus()\n    const { setError: setAppError } = useSnackbar()\n\n    const [working, setWorking] = useState(false)\n    const [ack, setAck] = useState(false)\n    const [error, setError] = useState(undefined)\n    const { trackEvent } = useAnalytics()\n    const mounted = useMounted()\n\n    const _disabled = disabled || working\n\n    const run = async () => {\n        if (working) return // already working\n\n        if (trackName) trackEvent(\"cmd.\" + trackName, trackProperties)\n        try {\n            setError(undefined)\n            setAck(false)\n            setWorking(true)\n            await onClick(mounted)\n            if (!mounted()) return\n            setAck(true)\n            if (!disableReset) {\n                await bus.delay(ackResetDelay || ACK_RESET_DELAY)\n                if (!mounted()) return\n                setAck(false)\n            }\n        } catch (e) {\n            if (!mounted()) return\n            setAppError(e)\n            setError(e)\n            if (!disableReset) {\n                await bus.delay(ERROR_RESET_DELAY)\n                if (!mounted()) return\n                setError(undefined)\n            }\n        } finally {\n            if (mounted()) setWorking(false)\n        }\n    }\n\n    const handleClick = async (ev: React.MouseEvent<HTMLButtonElement>) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n        run()\n    }\n\n    const statusIcon = error ? <ErrorIcon /> : undefined\n    const modeClassName = error ? classes.error : ack ? classes.ack : undefined\n    const elClassName = clsx(className, modeClassName)\n\n    // run once\n    useEffect(() => {\n        if (autoRun && mounted()) run()\n    }, [autoRun])\n\n    return (\n        <Root>\n            {!children && icon ? (\n                <IconButtonWithTooltip\n                    className={elClassName}\n                    style={style}\n                    onClick={handleClick}\n                    aria-label={title}\n                    title={title}\n                    disabled={_disabled}\n                    color={color}\n                    {...others}\n                >\n                    {statusIcon || icon}\n                </IconButtonWithTooltip>\n            ) : (\n                <OptionalTooltip title={title} placement=\"bottom\">\n                    <Button\n                        className={elClassName}\n                        style={style}\n                        startIcon={icon}\n                        endIcon={statusIcon}\n                        onClick={handleClick}\n                        aria-label={title}\n                        title=\"\"\n                        disabled={_disabled}\n                        color={color}\n                        {...others}\n                    >\n                        {children}\n                    </Button>\n                </OptionalTooltip>\n            )}\n        </Root>\n    )\n}\n","import React from \"react\"\nimport {\n    RealTimeClockCmd,\n    RealTimeClockReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { RealTimeClockReadingType } from \"../../../jacdac-ts/src/servers/realtimeclockserver\"\nimport { Grid, Typography } from \"@mui/material\"\nimport useRegister from \"../hooks/useRegister\"\nimport SyncIcon from \"@mui/icons-material/Sync\"\nimport CmdButton from \"../CmdButton\"\nimport DashboardRegisterValueFallback from \"./DashboardRegisterValueFallback\"\n\nexport default function DashboardRealTimeClock(props: DashboardServiceProps) {\n    const { service, expanded } = props\n\n    const localTimeRegister = useRegister(service, RealTimeClockReg.LocalTime)\n    const [year, month, dayOfMonth, dayOfWeek, hour, min, seconds] =\n        useRegisterUnpackedValue<RealTimeClockReadingType>(\n            localTimeRegister,\n            props\n        )\n    const handleSync = async () => {\n        const now = new Date()\n        const year = now.getFullYear()\n        const month = now.getMonth() + 1\n        const dayOfMonth = now.getDate()\n        const dayOfWeek = now.getDay()\n        const hour = now.getHours()\n        const min = now.getMinutes()\n        const second = now.getSeconds()\n        await service.sendCmdPackedAsync(RealTimeClockCmd.SetTime, [\n            year,\n            month,\n            dayOfMonth,\n            dayOfWeek,\n            hour,\n            min,\n            second,\n        ])\n    }\n\n    if (year === undefined)\n        return <DashboardRegisterValueFallback register={localTimeRegister} />\n\n    const t = new Date(year, month - 1, dayOfMonth, hour, min, seconds)\n    const date = t.toLocaleDateString()\n    const time = t.toLocaleTimeString()\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <Grid container spacing={1} direction=\"column\">\n                    <Grid item>\n                        <Typography\n                            align=\"left\"\n                            tabIndex={0}\n                            role=\"timer\"\n                            aria-label={date}\n                            variant=\"subtitle2\"\n                        >\n                            {date}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography\n                            align=\"center\"\n                            tabIndex={0}\n                            role=\"timer\"\n                            aria-label={time}\n                            variant=\"subtitle1\"\n                        >\n                            {time}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {expanded && (\n                <Grid item>\n                    <CmdButton\n                        title=\"Sync time\"\n                        onClick={handleSync}\n                        icon={<SyncIcon />}\n                    >\n                        Sync\n                    </CmdButton>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { useEffect, useRef } from \"react\"\n\nexport default function useMounted(): () => boolean {\n    const mounted = useRef(false)\n    useEffect(() => {\n        mounted.current = true\n        return () => {\n            mounted.current = false\n        }\n    }, [])\n    return () => mounted.current\n}\n"],"names":["PREFIX","classes","ack","error","Root","styled","color","fontWeight","theme","backgroundColor","ACK_RESET_DELAY","ERROR_RESET_DELAY","others","bus","useBus","setError","useSnackbar","useState","useAnalytics","mounted","useMounted","_disabled","disabled","run","trackEvent","setAck","setWorking","onClick","ackResetDelay","setAppError","handleClick","ev","statusIcon","modeClassName","elClassName","clsx","useEffect","autoRun","localTimeRegister","useRegister","RealTimeClockReg","useRegisterUnpackedValue","handleSync","now","year","month","dayOfMonth","dayOfWeek","hour","min","second","service","RealTimeClockCmd","t","date","time","expanded","useRef"],"sourceRoot":""}