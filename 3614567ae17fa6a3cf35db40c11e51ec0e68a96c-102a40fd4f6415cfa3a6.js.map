{"version":3,"file":"3614567ae17fa6a3cf35db40c11e51ec0e68a96c-102a40fd4f6415cfa3a6.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwE;AAC5B;AACpD;AACP,SAAS,uCAAoB;AAC7B;AACA,2BAA2B,yCAAsB;AACjD,mEAAe,kEAAkB;;;;ACNyB;AAC0C;AACpG;AAC+B;AACI;AACX;AAC8C;AAChC;AACc;AACc;AAClB;AAChD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,iCAAc,QAAQ,0BAA0B;AACzD;AACA,wBAAwB,0BAAM;AAC9B;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iCAAiC,gBAAgB;AACjD,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qBAAqB,8BAAQ,GAAG;AAChC;AACA,GAAG;AACH;AACA,sBAAsB,mBAAI,kBAAkB,8BAAQ;AACpD;AACA,eAAe,yBAAI;AACnB;AACA;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CA0BvC,CAAC;AACF,4DAAe,WAAW;;;;;;;;;;;;;;;ACzEnB,+BAAsD,CACzD,GAAM,SAAN,MACA,GAAMA,CAAAA,IAAI,CAAGC,2EAAc,CAAC,4EAAD,2EAAC,CAAD,QAAwBC,GAAG,EAAI,CAAC,EAACA,GAAD,OAACA,EAAAA,GAAD,SAACA,EAAAA,GAAG,CAA/D,IAA2D,CAAhC,CAA3B,CACA,GAAMC,CAAAA,QAAQ,CAAGC,sEAAS,QAEtBC,CAAC,EAAI,EAAC,GAAD,OAAC,OAAD,WAAC,CAAD,aAAiB,CAAC,EAACA,CAAD,OAACA,EAAAA,CAAD,SAACA,EAAAA,CAAC,CAF7B,eAE2B,CAFD,CAA1B,CAIA,GAAI,OAAJ,SAAuB,YACvB,mBAAO,6GAAO,QAAQ,CAAf,QAAP,gBAAO,CAAP,CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BCJD,GAAMC,CAAAA,KAAiE,CAAG,CACtE,kCAAY,CACR,CAACC,wEAAD,EAAqC,IAF7C,+BACgB,CAD0D,CAA1E,CAMA,GAAMC,CAAAA,UAAwD,CAAG,CAC7D,CAACD,0DAAD,EAD6D,OAE7D,CAACA,kEAAD,EAF6D,OAG7D,CAACA,gEAAD,EAHJ,MAAiE,CAAjE,CAMe,+BAIb,+CACE,GAAM,UAAN,MAAoBE,IAApB,kEACA,GAAM,eAAN,QACA,GAAM,kBAAuBC,gCAAa,SAA1C,IAA0C,CAA1C,CACA,GACI,CAACC,IAAI,GAAKJ,oDAATI,EACGA,IAAI,GAAKJ,0DADZI,EAEGA,IAAI,GAAKJ,kEAFb,GAGAK,UAAU,GAJd,EAMI,YACJ,GAAMC,CAAAA,QAAQ,CAAGL,UAAU,CAAVA,IAAU,CAAVA,EAAjB,UACA,mBACI,0CAAO,QAAQ,CAAf,UACK,CAAC,CAAD,mBACG,+CAAY,OAAO,CAAnB,WACKM,2BAAQ,CACL,2BAAK,CAAL,YAAK,CAAL,wMACIP,wCAAiB,CADrB,IACqB,CADrB,EAJhB,GAGqB,CADb,CAFR,CAUK,CAAC,CAAD,yBACG,+CAAY,OAAO,CAAnB,8BACqBK,UAAU,CAAVA,QAAAA,CAbjC,EAaiCA,CADrB,CAXR,CADJ,CAkBH;;;;;;;;;;;;;;;;;;ACtDc,gCAAoD,CAC/D,MAAOX,CAAAA,iCAAc,wCAAuBI,CAAC,EAAIA,CAAJ,OAAIA,EAAAA,CAAJ,SAAIA,CAAJ,MAAIA,CAAAA,CAAC,CAAlD,IAAqB,CAArB,CACH;;;;ACID,GAAMU,CAAAA,gBAAgB,cAAGC,cAAI,CAAC,IAAM,+IAAP,CAA7B,CAEA,GAAMC,CAAAA,eAAe,CAArB,GAEA,GAAMC,CAAAA,UAAU,CAAGC,0BAAM,CAANA,qBAAM,CAANA,CAAe,CAC9BC,aAAa,CADjB,MAAkC,CAAfD,CAAnB,CAIe,2BAAoD,CAC/D,GAAM,UAAN,MAEA,GAAM,mDAAkDE,kBAAQ,CAAhE,KAAgE,CAAhE,CACA,GAAMC,CAAAA,WAAW,CAAGC,uCAApB,GACA,GAAMC,CAAAA,IAAI,CAAGC,cAAc,CAA3B,OAA2B,CAA3B,CACA,GAAMC,CAAAA,UAAU,CAAG,IAAMC,uBAAuB,CAAhD,IAAgD,CAAhD,CACA,GAAMC,CAAAA,WAAW,CAAG,IAAMD,uBAAuB,CAAjD,KAAiD,CAAjD,CAEA,GAAME,CAAAA,iBAAiB,CAAGzB,4BAAS,aAE/BC,CAAC,EAAIA,CAAJ,OAAIA,EAAAA,CAAJ,SAAIA,CAAJ,MAAIA,CAAAA,CAAC,CAADA,iBAAAA,CAF0B,OAE1BA,CAF0B,CAG/B,CAHJ,OAGI,CAH+B,CAAnC,CAKA;AACA,GAAI,CAAJ,kBAAwB,YAExB,GAAMyB,CAAAA,IAAI,CAAGC,6BAAU,CAAVA,IAAU,CAAVA,CACPC,gCAAa,CADND,IACM,CADNA,CAEPE,yBAAO,CAACC,sCAAc,CAAf,IAAe,CAAf,CAAPD,eAAO,CAAPA,EAFN,MAGA,mBACI,qDACI,gCACI,KAAK,CAAET,IAAI,EADf,0BAEI,IAAI,CAFR,QAGI,OAAO,CAHX,YADJ,IACI,CADJ,CAQKW,oBAAoB,eACjB,8DACI,sCAAkB,OAAO,CAAzB,QAAoC,OAAO,CAX3D,WAWgB,EADJ,CATR,CADJ,CAgBH;;;;;;;;sFC1Cc,gDAKA,CACX,GAAM,kCAAN,MAA8C1B,IAA9C,kGACA,GAAM,eAAN,QACA,GAAM2B,CAAAA,YAAY,CAAGC,kCAAe,SAApC,IAAoC,CAApC,CACA,GAAMC,CAAAA,IAAI,CAAGC,uDAAoB,CAAjC,YAAiC,CAAjC,CACA,GAAMC,CAAAA,SAAuB,CAAG,CAC5BC,WAAW,CAAEC,8BAAW,CADI,YACJ,CADI,CAE5BC,KAAK,CAFT,UAAgC,CAAhC,CAIA,mBACI,0CAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,EAA4B,UAAU,CAAtC,UACKL,IAAI,eACD,0CAAM,IAAI,CAAV,mBACI,4CAAS,KAAK,CAAEI,8BAAW,CAA3B,YAA2B,CAA3B,eACI,oCAAU,QAAQ,CAAlB,mBACKE,uBAAa,MALlC,SAKkC,CADlB,CADJ,CADJ,CAFR,cAUI,0CAAM,IAAI,CAAV,KAAW,EAAE,CAAb,mBACI,iCAAa,OAAO,CAX5B,OAWQ,EADJ,CAVJ,CAaKR,YAAY,eACT,0CAAM,IAAI,CAAV,mBACI,+CACI,SAAS,CADb,oBAEI,OAAO,CAFX,UAGI,SAAS,CAHb,OAII,KAAK,CAAE,CAAES,KAAK,CAJlB,OAIW,CAJX,EAfZ,YAeY,CADJ,CAdR,CAyBKC,QAAQ,GAARA,SAAAA,EAAAA,aACG,0CAAM,IAAI,CAAV,mBACI,0CAAM,IAAI,CAAV,mBACI,0DACI,IAAI,CADR,QAEI,KAAK,CACDA,QAAQ,sBAHhB,qBAOI,OAAO,CAPX,6BASI,wCAtCxB,IAsCwB,CATJ,CADJ,CADJ,CA1BR,CADJ,CA6CH;;iEC9Dc,0CAEA,CACX,GAAM,qBAAN,MAAgCrC,IAAhC,4FACA,GAAM,eAAN,QACA,GAAMsC,CAAAA,UAAU,CAAGC,KAAK,CAALA,UAAAA,EAAoBC,mDAAgB,CAAvD,YAAuD,CAAvD,CACA,GAAM,2BAA0B5B,kBAAQ,CACpC,8BADJ,SAAwC,CAAxC,CAGA,GAAM6B,CAAAA,eAAe,cAAG,mDAAiB,OAAO,CAAxB,SAAxB,IAAwB,EAAxB,CACA,GAAMC,CAAAA,cAAc,CAAG,IAAMC,WAAW,CAACC,CAAC,EAAI,CAA9C,CAAwC,CAAxC,CACAC,mBAAS,CAAC,IAAM,CACZF,WAAW,CAAC,8BAAZA,SAAW,CAAXA,CADK,EAEN,YAFHE,UAEG,CAFM,CAATA,CAIA,mBACI,0CAAM,IAAI,CAAV,mBACI,6EAEI,QAAQ,CAFZ,SAGI,cAAc,CAJtB,cACI,GADJ,8BAOI,mFAAmC,QAAQ,CARnD,QAQQ,GAPJ,CADJ,CAWH;;;;AC7Bc,oDAG0B,CACrC,GAAM,qBAAoBjC,kBAA1B,GACA,GAAM,CACFkC,SAAS,CADP,EAEFC,IAAI,CAFF,KAGFC,UAAU,CAHR,wBAKFC,OAAO,EALX,GAOA,GAAMC,CAAAA,MAAM,CAAG,MAAK,GAAL,WAAK,OAAL,eAAK,CAAL,iBAAf,kBAEA,GAAMC,CAAAA,WAAW,CAAG,MAAgD,IAA/C,QAA+C,KAChEC,QAAQ,CAARA,KAAQ,CAARA,CADJ,EAIA,mBAAS,CAAC,IAAM,CACZ,GAAMC,CAAAA,IAAI,CAAGC,UAAH,OAAGA,EAAAA,UAAH,SAAGA,CAAH,MAAGA,CAAAA,UAAU,CAAvB,QAAiC;AACjC,GAAMC,CAAAA,YAAY,CAAG,CAAC,CAACC,MAAM,CAA7B,qBAEA,GAAI,uBAA2B,CAA/B,KAAsC,OAEtC,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,UAAuB,CAAvB,CACA,GAAMC,CAAAA,QAAQ,CAAG,qCAAjB,cAAiB,CAAjB,CAEA;AACAA,QAAQ,CAARA,OAAAA,CAAAA,IAAAA,EAEA,MAAO,IAAMA,QAAQ,CAArB,UAAaA,EAAb,CAZK,EAaN,sCAbH,MAaG,CAbM,CAAT,CAeA,aACH;;;;;;;;;;;;;;;;AChCc,yCAIZ,CACC,GAAM,8BAAN,MACA,GAAMC,CAAAA,WAAW,CAAGC,uCAAoB,CAAxC,MAAwC,CAAxC,CAEA,mBACI,+CACI,KAAK,CAAE,CAAEC,aAAa,CAD1B,CACW,CADX,CAEI,MAAM,CAAEC,UAAU,eAAI,iDAAc,MAAM,CAF9C,MAE0B,EAF1B,CAGI,MAAM,cACF,kDACI,MAAM,CADV,OAEI,QAAQ,CAFZ,KAGI,YAAY,CAHhB,KAII,SAAS,CAJb,UAKI,YAAY,CATxB,KAIQ,EAJR,CAYI,KAAK,cAAE,+CAAY,WAAW,CAAvB,MAAgC,MAAM,CAZjD,MAYW,EAZX,CAaI,SAAS,cACL,wCACKH,WAAW,eACR,+CAAY,OAAO,CAAnB,UAA8B,YAAY,CAA1C,MAjBpB,WAiBoB,CAFR,CAdR,EADJ,CAyBH;;ACpBD,GAAMI,CAAAA,gBAAgB,cAAGxD,cAAI,CAAC,IAAM,qGAAP,CAA7B,CACA,GAAMyD,CAAAA,qBAAqB,cAAGzD,cAAI,CAC9B,IAAM,qGADwB,CAAlC,CAIA,GAAM0D,CAAAA,eAAe,CAAG,mMAAxB,mCAAwB,CAAxB,CAUe,+BAIb,CACE,GAAM,6GAAN,MAYA,GAAM5C,CAAAA,IAAI,CAAG6C,gCAAa,CAA1B,MAA0B,CAA1B,CACA,GAAMC,CAAAA,QAAQ,CAAGxE,4BAAS,QAASC,CAAC,EAChCA,CADgC,OAChCA,EAAAA,CADgC,SAChCA,CADgC,MAChCA,CAAAA,CAAC,CAADA,QAAAA,CAAY,CAAEwE,aAAa,CAA3BxE,IAAY,CAAZA,EAAAA,MAAAA,CACIyE,OAAO,EACHJ,eAAe,CAAfA,OAAAA,CAAwBI,OAAO,CAA/BJ,YAAAA,EAAAA,CAAAA,EACA,CAACI,OAAO,CADRJ,OAAAA,GAEC,gBAAkBK,aAAa,CAL5C,OAK4C,CAFhCL,CAFRrE,CADsB,CAA1B,CASA;AACA,GAAM2E,CAAAA,cAAc,CAAGC,gBAAvB,GACA,GAAMC,CAAAA,YAAY,CAAGC,uBAAuB,CAA5C,cAA4C,CAA5C,CACA,GAAMC,CAAAA,OAAO,CACTC,aAAa,EAAI,CAAjBA,YAAAA,EAAkC,CAAC,CAACH,YAAY,CADpD,eAGA,GAAMI,CAAAA,cAAc,CAAGC,qBAAW,CAC9B,iBACI,0CACI,GAAG,CADP,eAEI,SAAS,CAFb,MAGI,SAAS,CAHb,KAII,OAAO,CAJX,EAKI,cAAc,CALlB,SAMI,UAAU,CANd,WAOI,YAAY,CAPhB,iBASKX,QATL,OASKA,EAAAA,QATL,SASKA,CATL,MASKA,CAAAA,QAAQ,CAARA,GAAAA,CAAcE,OAAO,eAClB,gDACI,GAAG,CAAEA,OAAO,CADhB,OAEI,OAAO,CAFX,QAGI,QAAQ,CAHZ,SAII,OAAO,CAJX,QAKI,OAAO,CALX,QAMI,UAAU,CAlBI,UAYlB,EADHF,CATL,CAF0B,CAuB9B,CAACY,oCAAY,CAAb,QAAa,CAAb,iBAvBJ,UAuBI,CAvB8B,CAAlC,CA0BA,GAAI,CAAJ,WACI,mBACI,0CAAO,KAAK,CAAE,CAAEC,OAAO,CAAvB,QAAc,CAAd,CAAqC,OAAO,CAA5C,yBACI,mCAFR,IAEQ,CADJ,CADJ,CAMJ,mBACI,yCAAM,YAAN,SAAyB,4BAAzB,yBACI,+CACI,MAAM,CADV,OAEI,UAAU,CAFd,WAGI,SAAS,CAJjB,SACI,EADJ,cAMI,gDAAa,KAAK,CAAE,CAAEC,UAAU,CAAhC,CAAoB,CAApB,eACI,4DAAiB,MAAM,CAD3B,MACI,EADJ,cAEI,6CAAU,QAAQ,CAAlB,mBACI,2CAAuB,MAAM,CAHrC,MAGQ,EADJ,CAFJ,CAKKC,oBAAoB,eACjB,8DACI,sCAAkB,MAAM,CAPpC,MAOY,EADJ,CANR,cAUI,mCAjBZ,IAiBY,CAVJ,CANJ,CADJ,CAqBH;;;;;;;;;;;;;;;;;yBCjHc,mCAKb,CACE,GAAM,SAAN,MAAmBC,KAAnB,+HACA,GAAM,aAAiBC,iDAAU,CAAjC,6DAAiC,CAAjC,CACA,GAAMC,CAAAA,WAA4B,CAAG1F,sEAAS,QAE1C,IAAM,CACF,GAAM2F,CAAAA,gBAAgB,CAAGC,MAAM,CAANA,QAAAA,GAAAA,GAAAA,CAEhBC,GAAG,EAAI,CACR,MACIC,CAAAA,yFAAsB,CAAtBA,GAAsB,CAAtBA,GACCD,GAAG,CAAHA,eAAAA,EACDA,GAAG,CADFA,aAAAA,EAEDA,GAAG,CAFFA,iBAAAA,CAAAA,CAAAA,CAFL,CACIC,CADJ,CAHiBF,CAAAA,EAAAA,MAAAA,CAYb,OAAkBG,CAAC,CAZNH,CAAAA,CAAzB,CAAyBA,CAAzB,CAcA,GAAID,gBAAgB,CAAhBA,CAAAA,EAAwBK,UAAU,GAAKC,uEAA3C,CACI,MAAO,CAAEC,EAAE,CAAJ,GAAUC,EAAE,CAAZ,GAAkBC,EAAE,CAApB,GAA0BC,EAAE,CAA5B,EAAiCC,EAAE,CAD9C,CACW,CAAP,CADJ,IAEK,IAAIX,gBAAgB,EAApB,EACD,MAAO,CAAEO,EAAE,CAAJ,GAAUC,EAAE,CAAZ,GAAkBC,EAAE,CAApB,EAAyBC,EAAE,CAA3B,EAAgCC,EAAE,CADxC,CACM,CAAP,CADC,IAEA,IAAIX,gBAAgB,EAApB,EACD,MAAO,CAAEO,EAAE,CAAJ,GAAUC,EAAE,CAAZ,EAAiBC,EAAE,CAAnB,EAAwBC,EAAE,CAA1B,EAA+BC,EAAE,CADvC,CACM,CAAP,CADC,IAGD,OAAO,CACHJ,EAAE,CADC,EAEHC,EAAE,CAFC,EAGHC,EAAE,CAHC,EAIHC,EAAE,CAJC,EAKHC,EAAE,CALN,MAAO,CAAP,CAxBkC,EAgC1C,CAhC0C,UAgC1C,CAhC0C,CAiC1C,OACIC,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAATD,EAAAA,EACAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CADTD,EAAAA,EAEAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAFTD,EAAAA,EAGAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAHTD,EAAAA,EAIAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAJTD,EAAAA,EAKAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAvCjB,EAA8C,CAA9C,CA0CA;AACA,mBACI,gIAAM,IAAI,CAAV,gCACI,kIAAiB,MAAM,CAAvB,QAFR,KAEQ,EADJ,CADJ,CAKH;;;;;;;;;;;;;AC1Dc,yCAGb,CACE,GAAMC,CAAAA,oBAAoB,CAAGC,uEAAW,SAAUC,yGAAV,CAAxC,CACA,GAAM,eAAiBC,4FAAwB,sBAA/C,OAA+C,CAA/C,CAIA,oBACH;;;;;;;;;;;;;ACXc,+BAAmD,CAC9D,GAAMC,CAAAA,GAAG,CAAGC,mEAAZ,GACA,GAAM,iBAAgB7F,+CAAQ,CAAoB4F,GAAG,CAArD,WAA8B,CAA9B,CACA3D,gDAAS,CACL,IAAM2D,GAAG,CAAHA,SAAAA,CAAAA,yFAAAA,CAAmC,IAAME,MAAM,CAACF,GAAG,CADpD,WACgD,CAA/CA,CADD,CAEL,CAFJ3D,GAEI,CAFK,CAATA,CAIA,WACH;;;;;;;;;;;;;ACPc,uCAGb,CACE,GAAM8D,CAAAA,QAAQ,CAAGN,uEAAW,SAAUC,qGAAV,CAA5B,CACA,GAAM,CAACpG,IAAI,CAAL,EAAWC,UAAU,CAArB,GAA6BoG,4FAAwB,UAA3D,OAA2D,CAA3D,CAIA,MAAO,MAAP,UAAO,CAAP,CACH;;;;;;;;;;;;;;;;;ACbD,GAAMK,CAAAA,MAAM,CAAZ,aAEA,GAAMC,CAAAA,OAAO,CAAG,CACZC,EAAE,CAAKF,MAAL,CADU,KAEZG,KAAK,CAAKH,MAAL,CAFT,OAAgB,CAAhB,CAKA,GAAMI,CAAAA,UAAU,CAAGtG,0EAAM,CAANA,+DAAM,CAANA,CAAa,UAAC,CAAD,KAAC,EAAD,WAAgB,CAC5C,OAAOmG,OAAO,CAAd,IAAsB,CAClBI,UAAU,CAAEC,KAAK,CAALA,OAAAA,CAAAA,IAAAA,CADM,SAElBC,YAAY,CAH4B,OACtB,CADsB,CAM5C,OAAON,OAAO,CAAd,OAAyB,CACrBO,KAAK,CAAEF,KAAK,CAALA,OAAAA,CAPiB,CAOjBA,CADc,CANmB,CAAhB,CAAhC,CAAmBxG,CAAnB,CAWe,0BAKZ,CACC,GAAM,6BAAN,MAEA,mBACI,6DAAY,IAAI,CAAhB,KAAiB,EAAE,CAAnB,iBACI,kHACI,SAAS,CADb,KAEI,SAAS,CAFb,MAGI,OAAO,CAHX,EAII,cAAc,CAJlB,SAKI,UAAU,CALd,uBAOI,kHAAM,IAAI,CAAV,mBACI,uDAAI,SAAS,CAAE2G,yDAAI,CAACR,OAAO,CAAR,GAAaA,OAAO,CAR/C,KAQ2B,CAAnB,EADJ,CAPJ,cAUI,kHAAM,IAAI,CAAV,MACKS,MAAM,eACH,iHAAK,SAAS,CAAd,OAAsB,EAAE,CAAxB,GAFR,MAEQ,CAFR,cAMI,iHACI,SAAS,CADb,OAEI,OAAO,CAAEC,OAAO,EAFpB,aANJ,KAMI,CANJ,CAYKC,KAAK,GAALA,SAAAA,EAAAA,aACG,iHAAK,SAAS,CAAd,OAAsB,EAAE,CAAxB,kBACI,iHAAM,KAAK,CAxB3B,KAwBgB,EADJ,CAbR,CAVJ,cA4BI,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,mBACI,uDAAI,SAAS,CAAEX,OAAO,CA/BtC,EA+BgB,EADJ,CA5BJ,CADJ,CADJ,CAoCH;;;;;;;;;;;;AChED;AACA;AACA;AACA,GACe,gCAIZ,CACC,GAAM,gCAAN,QACA,GAAML,CAAAA,GAAG,CAAGC,4DAAZ,GAEA;AACA5D,gDAAS,CAAC,IAAM,CACZ,GAAM4E,CAAAA,MAAsB,CAA5B,GACA,aAAe,CACXjB,GAAG,CAAHA,SAAAA,CAAAA,IAAAA,CACAiB,MAAM,CAANA,IAAAA,CAAY,IAAM,CACdjB,GAAG,CAAHA,SAAAA,CAAAA,KAAAA,CADJiB,CAAAA,EAIJ,YAAa,CACTjB,GAAG,CAAHA,OAAAA,CAAAA,IAAAA,CACAiB,MAAM,CAANA,IAAAA,CAAY,IAAM,CACdjB,GAAG,CAAHA,OAAAA,CAAAA,KAAAA,CADJiB,CAAAA,EAIJ,gBAAiB,CACbjB,GAAG,CAAHA,WAAAA,CAAAA,IAAAA,CACAiB,MAAM,CAANA,IAAAA,CAAY,IAAM,CACdjB,GAAG,CAAHA,WAAAA,CAAAA,KAAAA,CADJiB,CAAAA,EAIJ,OAAO,IAAMA,MAAM,CAANA,OAAAA,CAAeC,KAAK,EAAIA,KAArC,EAAaD,CAAb,CApBK,EAqBN,qBArBH5E,SAqBG,CArBM,CAATA,CAsBA,WACH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Edit.js","webpack://jacdac-docs/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/CardContent/CardContent.js","webpack://jacdac-docs/./src/components/alert/DeviceLostAlert.tsx","webpack://jacdac-docs/./src/components/services/StatusCodeAlert.tsx","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItemHeader.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/services/useInstanceName.ts","webpack://jacdac-docs/./src/components/services/useRoleManagerClient.ts","webpack://jacdac-docs/./src/components/services/useStatusCode.ts","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/jacdac/useBusWithMode.ts"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React from \"react\"\nimport { LOST, FOUND } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\nimport Alert from \"../ui/Alert\"\n\nexport function DeviceLostAlert(props: { device: JDDevice }) {\n    const { device } = props\n    const lost = useEventRaised([LOST, FOUND], device, dev => !!dev?.lost)\n    const flashing = useChange(\n        device,\n        _ => _?.bootloader || !!_?.firmwareUpdater\n    )\n    if (!lost || flashing) return null\n    return <Alert severity=\"info\">Device lost...</Alert>\n}\n","import React from \"react\"\nimport { Typography } from \"@mui/material\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { RegisterOptions } from \"../../jacdac/useRegisterValue\"\nimport useStatusCode from \"./useStatusCode\"\nimport {\n    SRV_WIFI,\n    SystemStatusCodes,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport Alert from \"../ui/Alert\"\n\nconst codes: Record<number, Record<number, (srv: JDService) => string>> = {\n    [SRV_WIFI]: {\n        [SystemStatusCodes.WaitingForInput]: () =>\n            \"Waiting for WiFi credentials.\",\n    },\n}\nconst severities: Record<number, \"error\" | \"warning\" | \"info\"> = {\n    [SystemStatusCodes.Sleeping]: \"info\",\n    [SystemStatusCodes.Initializing]: \"info\",\n    [SystemStatusCodes.Calibrating]: \"info\",\n}\n\nexport default function StatusCodeAlert(\n    props: {\n        service: JDService\n    } & RegisterOptions\n) {\n    const { service, ...rest } = props\n    const { serviceClass } = service\n    const { code, vendorCode } = useStatusCode(service, rest)\n    if (\n        (code === SystemStatusCodes.Ready ||\n            code === SystemStatusCodes.Sleeping ||\n            code === SystemStatusCodes.Initializing) &&\n        vendorCode === 0\n    )\n        return null\n    const severity = severities[code] || \"warning\"\n    return (\n        <Alert severity={severity}>\n            {!!code && (\n                <Typography variant=\"caption\">\n                    {humanify(\n                        codes[serviceClass]?.[code]?.(service) ||\n                            SystemStatusCodes[code] ||\n                            \"?\"\n                    )}\n                </Typography>\n            )}\n            {!!vendorCode && (\n                <Typography variant=\"caption\">\n                    vendor error: 0x{vendorCode.toString(16)}\n                </Typography>\n            )}\n        </Alert>\n    )\n}\n","import { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\n\nexport default function useServiceRole(service: JDService): string {\n    return useEventRaised(ROLE_CHANGE, service, _ => _?.role)\n}\n","import { Button, styled } from \"@mui/material\"\nimport React, { lazy, useState } from \"react\"\nimport { isDeviceId, shortDeviceId } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { ellipse } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useChange from \"../../jacdac/useChange\"\nimport Suspense from \"../ui/Suspense\"\nimport useRoleManagerClient from \"./useRoleManagerClient\"\nimport useServiceRole from \"./useServiceRole\"\nimport { escapeRoleName } from \"../../../jacdac-ts/src/jdom/rolemanager\"\nconst SelectRoleDialog = lazy(() => import(\"../dialogs/SelectRoleDialog\"))\n\nconst MAX_NAME_LENGTH = 20\n\nconst RoleButton = styled(Button)({\n    textTransform: \"none\",\n})\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n\n    const [showSelectRoleDialog, setShowSelectRoleDialog] = useState(false)\n    const roleManager = useRoleManagerClient()\n    const role = useServiceRole(service)\n    const handleOpen = () => setShowSelectRoleDialog(true)\n    const handleClose = () => setShowSelectRoleDialog(false)\n\n    const hasRoleForService = useChange(\n        roleManager,\n        _ => _?.hasRoleForService(service),\n        [service]\n    )\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService) return null\n\n    const name = isDeviceId(role)\n        ? shortDeviceId(role)\n        : ellipse(escapeRoleName(role), MAX_NAME_LENGTH) || \"...\"\n    return (\n        <>\n            <RoleButton\n                title={role || \"Choose role for service\"}\n                size=\"small\"\n                onClick={handleOpen}\n            >\n                {name}\n            </RoleButton>\n            {showSelectRoleDialog && (\n                <Suspense>\n                    <SelectRoleDialog service={service} onClose={handleClose} />\n                </Suspense>\n            )}\n        </>\n    )\n}\n","import { Grid, SvgIconProps, Tooltip, Typography } from \"@mui/material\"\nimport React, { createElement, Suspense } from \"react\"\nimport {\n    dashboardServiceIcon,\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport useInstanceName from \"../services/useInstanceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport EditIcon from \"@mui/icons-material/Edit\"\nimport { serviceName } from \"../../../jacdac-ts/src/jdom/pretty\"\n\nexport default function DashboardServiceWidgetItemHeader(\n    props: {\n        toggleExpanded: () => void\n    } & React.Attributes &\n        DashboardServiceProps\n): JSX.Element {\n    const { service, expanded, toggleExpanded, ...rest } = props\n    const { serviceClass } = service\n    const instanceName = useInstanceName(service, rest)\n    const icon = dashboardServiceIcon(serviceClass)\n    const iconProps: SvgIconProps = {\n        titleAccess: serviceName(serviceClass),\n        color: \"disabled\",\n    }\n    return (\n        <Grid container spacing={1} alignItems=\"center\">\n            {icon && (\n                <Grid item>\n                    <Tooltip title={serviceName(serviceClass)}>\n                        <Suspense fallback={null}>\n                            {createElement(icon, iconProps)}\n                        </Suspense>\n                    </Tooltip>\n                </Grid>\n            )}\n            <Grid item xs>\n                <ServiceRole service={service} />\n            </Grid>\n            {instanceName && (\n                <Grid item>\n                    <Typography\n                        className=\"no-pointer-events\"\n                        variant=\"caption\"\n                        component=\"span\"\n                        style={{ float: \"right\" }}\n                    >\n                        {instanceName}\n                    </Typography>\n                </Grid>\n            )}\n            {expanded !== undefined && (\n                <Grid item>\n                    <Grid item>\n                        <IconButtonWithTooltip\n                            size=\"small\"\n                            title={\n                                expanded\n                                    ? \"Hide configuration\"\n                                    : \"Show configuration\"\n                            }\n                            onClick={toggleExpanded}\n                        >\n                            <EditIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useEffect, useState } from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n    isExpandableView,\n} from \"./DashboardServiceWidget\"\nimport StatusCodeAlert from \"../services/StatusCodeAlert\"\nimport DashboardServiceWidgetItemHeader from \"./DashboardServiceWidgetItemHeader\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service, controlled, ...rest } = props\n    const { serviceClass } = service\n    const expandable = props.expandable || isExpandableView(serviceClass)\n    const [expanded, setExpanded] = useState<boolean>(\n        !controlled && expandable ? false : undefined\n    )\n    const statusCodeAlert = <StatusCodeAlert service={service} {...rest} />\n    const toggleExpanded = () => setExpanded(e => !e)\n    useEffect(() => {\n        setExpanded(!controlled && expandable ? false : undefined)\n    }, [controlled, expandable])\n\n    return (\n        <Grid item>\n            <DashboardServiceWidgetItemHeader\n                {...props}\n                expanded={expanded}\n                toggleExpanded={toggleExpanded}\n            />\n            {statusCodeAlert}\n            <DashboardServiceWidget {...props} expanded={expanded} />\n        </Grid>\n    )\n}\n","import { useEffect, useState, RefObject } from \"react\"\n\nexport interface Args extends IntersectionObserverInit {\n    freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n    elementRef: RefObject<Element>,\n    options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n    const [entry, setEntry] = useState<IntersectionObserverEntry>()\n    const {\n        threshold = 0,\n        root = null,\n        rootMargin = \"0%\",\n        freezeOnceVisible,\n    } = options || {}\n\n    const frozen = entry?.isIntersecting && freezeOnceVisible\n\n    const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n        setEntry(entry)\n    }\n\n    useEffect(() => {\n        const node = elementRef?.current // DOM Ref\n        const hasIOSupport = !!window.IntersectionObserver\n\n        if (!hasIOSupport || frozen || !node) return\n\n        const observerParams = { threshold, root, rootMargin }\n        const observer = new IntersectionObserver(updateEntry, observerParams)\n\n        //console.log(`observe`, { node })\n        observer.observe(node)\n\n        return () => observer.disconnect()\n    }, [elementRef, threshold, root, rootMargin, frozen])\n\n    return entry\n}\n","import { CardHeader, Typography } from \"@mui/material\"\nimport React from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport DeviceName from \"../devices/DeviceName\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DeviceActions from \"../devices/DeviceActions\"\nimport useDeviceDescription from \"../../jacdac/useDeviceDescription\"\n\nexport default function DashboardDeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showReset?: boolean\n}) {\n    const { device, showAvatar, showReset } = props\n    const description = useDeviceDescription(device)\n\n    return (\n        <CardHeader\n            style={{ paddingBottom: 0 }}\n            avatar={showAvatar && <DeviceAvatar device={device} />}\n            action={\n                <DeviceActions\n                    device={device}\n                    showStop={true}\n                    hideIdentity={true}\n                    showReset={showReset}\n                    showSettings={false}\n                />\n            }\n            title={<DeviceName showShortId={false} device={device} />}\n            subheader={\n                <>\n                    {description && (\n                        <Typography variant=\"caption\" gutterBottom>\n                            {description}\n                        </Typography>\n                    )}\n                </>\n            }\n        />\n    )\n}\n","import { Card, CardContent, Grid, Paper } from \"@mui/material\"\nimport React, { useCallback, useRef, lazy } from \"react\"\nimport {\n    SRV_CONTROL,\n    SRV_INFRASTRUCTURE,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_PROXY,\n    SRV_SETTINGS,\n    SRV_UNIQUE_BRAIN,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/eventsource\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport Suspense from \"../ui/Suspense\"\nimport DashboardDeviceCardHeader from \"./DashboardDeviceCardHeader\"\nconst DeviceProxyAlert = lazy(() => import(\"../alert/DeviceProxyAlert\"))\nconst DeviceBootloaderAlert = lazy(\n    () => import(\"../alert/DeviceBootloaderAlert\")\n)\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_SETTINGS,\n    SRV_PROTO_TEST,\n    SRV_PROXY,\n    SRV_INFRASTRUCTURE,\n    SRV_UNIQUE_BRAIN,\n]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        serviceFilter,\n        variant,\n        showAvatar,\n        showHeader,\n        showReset,\n        showDeviceProxyAlert,\n        alwaysVisible,\n        controlled,\n    } = props\n\n    const name = useDeviceName(device)\n    const services = useChange(device, _ =>\n        _?.services({ specification: true }).filter(\n            service =>\n                ignoredServices.indexOf(service.serviceClass) < 0 &&\n                !service.isMixin &&\n                (!serviceFilter || serviceFilter(service))\n        )\n    )\n\n    // refresh when visible\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible =\n        alwaysVisible || !intersection || !!intersection.isIntersecting\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justifyContent=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services?.map(service => (\n                    <DashboardServiceWidgetItem\n                        key={service.nodeId}\n                        service={service}\n                        services={services}\n                        variant={variant}\n                        visible={visible}\n                        controlled={controlled}\n                    />\n                ))}\n            </Grid>\n        ),\n        [dependencyId(services), variant, visible, controlled]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <DashboardDeviceCardHeader\n                device={device}\n                showAvatar={showAvatar}\n                showReset={showReset}\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <DeviceLostAlert device={device} />\n                <Suspense fallback={null}>\n                    <DeviceBootloaderAlert device={device} />\n                </Suspense>\n                {showDeviceProxyAlert && (\n                    <Suspense>\n                        <DeviceProxyAlert device={device} />\n                    </Suspense>\n                )}\n                <ServiceWidgets />\n            </CardContent>\n        </Card>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport DashboardDevice from \"./DashboardDevice\"\nimport { GridBreakpoints } from \"../useGridBreakpoints\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useChange from \"../../jacdac/useChange\"\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\"\nimport AppContext, { DrawerType } from \"../AppContext\"\n\nexport default function DashboardDeviceItem(\n    props: {\n        device: JDDevice\n        alwaysVisible?: boolean\n    } & DashboardDeviceProps\n) {\n    const { device, ...other } = props\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(\n        device,\n        () => {\n            const breakpointWeight = device\n                .services()\n                .map(srv => {\n                    return (\n                        dashboardServiceWeight(srv) ||\n                        (srv.readingRegister ||\n                        srv.valueRegister ||\n                        srv.intensityRegister\n                            ? 1\n                            : 0)\n                    )\n                })\n                .reduce((c: number, v) => c + v, 0)\n\n            if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n                return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 }\n            else if (breakpointWeight == 3)\n                return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 }\n            else if (breakpointWeight == 2)\n                return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 }\n            else\n                return {\n                    xs: 6,\n                    sm: 4,\n                    md: 3,\n                    lg: 2,\n                    xl: \"auto\",\n                }\n        },\n        [drawerType],\n        (a, b) =>\n            a.xs == b.xs &&\n            a.sm == b.sm &&\n            a.md == b.md &&\n            a.sm == b.sm &&\n            a.lg == b.lg &&\n            a.xl == b.xl\n    )\n\n    // based on size, expanded or reduce widget size\n    return (\n        <Grid item {...breakpoints}>\n            <DashboardDevice device={device} {...other} />\n        </Grid>\n    )\n}\n","import { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    RegisterOptions,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function useInstanceName(\n    service: JDService,\n    options?: RegisterOptions\n) {\n    const instanceNameRegister = useRegister(service, SystemReg.InstanceName)\n    const [instanceName] = useRegisterUnpackedValue<[string]>(\n        instanceNameRegister,\n        options\n    )\n    return instanceName\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/clients/rolemanagerclient\"\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useBus from \"../../jacdac/useBus\"\n\nexport default function useRoleManagerClient(): RoleManagerClient {\n    const bus = useBus()\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(\n        () => bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager)),\n        [bus]\n    )\n    return mgr\n}\n","import { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    RegisterOptions,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function useStatusCode(\n    service: JDService,\n    options?: RegisterOptions\n) {\n    const register = useRegister(service, SystemReg.StatusCode)\n    const [code = 0, vendorCode = 0] = useRegisterUnpackedValue<[number, number]>(\n        register,\n        options\n    )\n    return { code, vendorCode }\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React, { ReactNode } from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}hr`,\n    start: `${PREFIX}start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: ReactNode\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n","import { useEffect } from \"react\"\nimport useBus from \"./useBus\"\n\n/**\n * Grabs the Jacdac singleton bus from the current Jacdac context and configures it.\n * Throws an error if bus is missing.\n */\nexport default function useBusWithMode(options: {\n    passive?: boolean\n    streaming?: boolean\n    autoConnect?: boolean\n}) {\n    const { autoConnect, passive, streaming } = options\n    const bus = useBus()\n\n    // enable auto-connect if needed\n    useEffect(() => {\n        const unsubs: (() => void)[] = []\n        if (streaming) {\n            bus.streaming = true\n            unsubs.push(() => {\n                bus.streaming = false\n            })\n        }\n        if (passive) {\n            bus.passive = true\n            unsubs.push(() => {\n                bus.passive = false\n            })\n        }\n        if (autoConnect) {\n            bus.autoConnect = true\n            unsubs.push(() => {\n                bus.autoConnect = false\n            })\n        }\n        return () => unsubs.forEach(unsub => unsub())\n    }, [autoConnect, passive, streaming])\n    return bus\n}\n"],"names":["lost","useEventRaised","dev","flashing","useChange","_","codes","SystemStatusCodes","severities","rest","useStatusCode","code","vendorCode","severity","humanify","SelectRoleDialog","lazy","MAX_NAME_LENGTH","RoleButton","styled","textTransform","useState","roleManager","useRoleManagerClient","role","useServiceRole","handleOpen","setShowSelectRoleDialog","handleClose","hasRoleForService","name","isDeviceId","shortDeviceId","ellipse","escapeRoleName","showSelectRoleDialog","instanceName","useInstanceName","icon","dashboardServiceIcon","iconProps","titleAccess","serviceName","color","createElement","float","expanded","expandable","props","isExpandableView","statusCodeAlert","toggleExpanded","setExpanded","e","useEffect","threshold","root","rootMargin","options","frozen","updateEntry","setEntry","node","elementRef","hasIOSupport","window","observerParams","observer","description","useDeviceDescription","paddingBottom","showAvatar","DeviceProxyAlert","DeviceBootloaderAlert","ignoredServices","useDeviceName","services","specification","service","serviceFilter","serviceGridRef","useRef","intersection","useIntersectionObserver","visible","alwaysVisible","ServiceWidgets","useCallback","dependencyId","padding","paddingTop","showDeviceProxyAlert","other","useContext","breakpoints","breakpointWeight","device","srv","dashboardServiceWeight","c","drawerType","DrawerType","xs","sm","md","lg","xl","a","b","instanceNameRegister","useRegister","SystemReg","useRegisterUnpackedValue","bus","useBus","setMgr","register","PREFIX","classes","hr","start","StyledGrid","background","theme","marginBottom","width","clsx","action","variant","count","unsubs","unsub"],"sourceRoot":""}