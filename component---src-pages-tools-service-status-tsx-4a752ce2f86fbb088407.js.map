{"version":3,"file":"component---src-pages-tools-service-status-tsx-4a752ce2f86fbb088407.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Check.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Clear.js","webpack://jacdac-docs/./src/components/devices/useDeviceCatalog.ts","webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/pages/tools/service-status.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexports.default = _default;","import useBus from \"../../jacdac/useBus\"\n\n/**\n * Gets the device catalog from the current bus\n * @returns\n */\nexport default function useDeviceCatalog() {\n    const bus = useBus()\n    return bus.deviceCatalog\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import {\n    resolveTestRules,\n    resolveServiceCommandTest,\n} from \"../../../jacdac-ts/src/testdom/testrules\"\nimport React from \"react\"\nimport {\n    isInfrastructure,\n    serviceSpecifications,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport { serviceProviderDefinitionFromServiceClass } from \"../../../jacdac-ts/src/servers/servers\"\nimport useDeviceCatalog from \"../../components/devices/useDeviceCatalog\"\nimport useChange from \"../../jacdac/useChange\"\nimport { resolveMakecodeServiceFromClassIdentifier } from \"../../components/makecode/services\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport CheckIcon from \"@mui/icons-material/Check\"\nimport ClearIcon from \"@mui/icons-material/Clear\"\nimport { Chip } from \"@mui/material\"\nimport { Link } from \"gatsby-theme-material-ui\"\n\nconst statuses: Record<jdspec.StabilityStatus, string> = {\n    stable: \"Stable\",\n    rc: \"Release Candidate\",\n    experimental: \"Experimental\",\n    deprecated: \"Deprecated\",\n}\n\nfunction ServiceStatus(props: {\n    service: jdspec.ServiceSpec\n    makecodeExtensions: string[]\n}) {\n    const { service, makecodeExtensions } = props\n    const { shortId, name, classIdentifier } = service\n    const catalog = useDeviceCatalog()\n    const devices = useChange(catalog, _ =>\n        _.specificationsForService(classIdentifier, { includeDeprecated: true })\n    )\n    const serviceProvider =\n        serviceProviderDefinitionFromServiceClass(classIdentifier)\n    const testRule = resolveTestRules(classIdentifier)\n    const testCommand = resolveServiceCommandTest(classIdentifier)\n    const customTest = !!testRule?.length || testCommand\n    const makecode = resolveMakecodeServiceFromClassIdentifier(classIdentifier)\n    const makecodeExtension =\n        makecode && makecodeExtensions.indexOf(shortId.toLowerCase()) > -1\n\n    const available = (value: unknown, allowMissing = false) =>\n        typeof value === \"number\" && value ? (\n            <Chip icon={<CheckIcon color=\"success\" />} label={value} />\n        ) : value ? (\n            <CheckIcon color=\"success\" />\n        ) : allowMissing ? null : (\n            <ClearIcon color=\"warning\" />\n        )\n\n    return (\n        <tr>\n            <td>\n                <Link to={`/services/${shortId}/`}>{name}</Link>\n            </td>\n            <td>{available(devices?.length)}</td>\n            <td>{available(serviceProvider)}</td>\n            <td>{available(customTest, true)}</td>\n            <td>\n                {makecode\n                    ? makecode.client.generated\n                        ? \"generated\"\n                        : \"custom\"\n                    : \"\"}\n            </td>\n            <td>{available(makecodeExtension)}</td>\n        </tr>\n    )\n}\n\nfunction ServiceStatusSection(props: {\n    status: jdspec.StabilityStatus\n    services: jdspec.ServiceSpec[]\n    makecodeExtensions: string[]\n}) {\n    const { status, services, makecodeExtensions } = props\n    return (\n        <>\n            <h2>{statuses[status]}</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>name</th>\n                        <th>devices</th>\n                        <th>simulator</th>\n                        <th>custom tests</th>\n                        <th>MakeCode Extension</th>\n                        <th>MakeCode Docs</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {services?.map(service => (\n                        <ServiceStatus\n                            key={service.shortId}\n                            service={service}\n                            makecodeExtensions={makecodeExtensions}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport const frontmatter = {\n    title: \"Service Status\",\n    description: \"Implementation status of services in clients, tests, firmware.\",\n}\nimport CoreHead from \"../../components/shell/Head\"\nexport const Head = (props) => <CoreHead {...props} {...frontmatter} />\n\nexport default function Page() {\n    const query = useStaticQuery<{\n        allMdx: {\n            edges: {\n                node: {\n                    fields: {\n                        slug: string\n                    }\n                    frontmatter: {\n                        title?: string\n                    }\n                }\n            }[]\n        }\n    }>(graphql`\n        {\n            allMdx(\n                filter: {\n                    fields: { slug: { glob: \"/clients/makecode/extensions/*\" } }\n                }\n            ) {\n                edges {\n                    node {\n                        id\n                        fields {\n                            slug\n                        }\n                        frontmatter {\n                            title\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const makecodeExtensions = query.allMdx.edges\n        .map(edge => edge.node)\n        .sort((l, r) => l.fields.slug.localeCompare(r.fields.slug))\n        .map(({ fields }) =>\n            fields.slug.slice(\"/clients/makecode/extensions/\".length, -1)\n        )\n        .map(p => p.toLowerCase())\n\n    const services = serviceSpecifications().filter(\n        srv => !isInfrastructure(srv)\n    )\n\n    return (\n        <>\n            <h1>Service Implementation Status</h1>\n            {Object.keys(statuses).map((status: jdspec.StabilityStatus) => (\n                <ServiceStatusSection\n                    key={status}\n                    status={status}\n                    services={services.filter(srv => srv.status === status)}\n                    makecodeExtensions={makecodeExtensions}\n                />\n            ))}\n        </>\n    )\n}\n"],"names":["bus","useBus","meta","useStaticQuery","metaTitle","title","pageContext","site","metaDescription","description","data","name","content","statuses","stable","rc","experimental","deprecated","makecodeExtensions","classIdentifier","catalog","useDeviceCatalog","devices","useChange","_","includeDeprecated","serviceProvider","serviceProviderDefinitionFromServiceClass","testRule","resolveTestRules","testCommand","resolveServiceCommandTest","customTest","makecode","resolveMakecodeServiceFromClassIdentifier","makecodeExtension","shortId","available","allowMissing","value","service","frontmatter","Head","props","query","edge","l","r","fields","p","services","serviceSpecifications","srv","isInfrastructure","status"],"sourceRoot":""}