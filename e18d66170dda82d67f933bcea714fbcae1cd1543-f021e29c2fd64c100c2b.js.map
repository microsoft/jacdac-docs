{"version":3,"file":"e18d66170dda82d67f933bcea714fbcae1cd1543-f021e29c2fd64c100c2b.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/camelcase/index.js","webpack://jacdac-docs/../src/image-utils.ts","webpack://jacdac-docs/../src/components/hooks.ts","webpack://jacdac-docs/../src/components/layout-wrapper.tsx","webpack://jacdac-docs/../src/components/picture.tsx","webpack://jacdac-docs/../src/components/placeholder.tsx","webpack://jacdac-docs/../src/components/main-image.tsx","webpack://jacdac-docs/../src/components/gatsby-image.server.tsx","webpack://jacdac-docs/../src/components/gatsby-image.browser.tsx","webpack://jacdac-docs/../src/components/static-image.server.tsx","webpack://jacdac-docs/../src/components/static-image.tsx","webpack://jacdac-docs/./src/components/home/CenterGrid.tsx","webpack://jacdac-docs/./src/components/home/FeatureItem.tsx","webpack://jacdac-docs/./src/components/home/SplitGrid.tsx","webpack://jacdac-docs/./src/components/shell/Head.tsx"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { Grid } from \"@mui/material\"\nimport React from \"react\"\nimport FeatureItem, { FeatureItemProps } from \"./FeatureItem\"\n\nexport default function CenterGrid(props: FeatureItemProps) {\n    return (\n        <Grid item xs={12} sm={8}>\n            <Grid\n                container\n                spacing={2}\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignContent=\"center\"\n                alignItems=\"center\"\n            >\n                <FeatureItem {...props} centered={true} />\n            </Grid>\n        </Grid>\n    )\n}\n","import { Grid, Typography, Box } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport { Button, Link } from \"gatsby-theme-material-ui\"\nimport React, { ReactNode } from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"FeatureItem\"\n\nconst classes = {\n    centered: `${PREFIX}centered`,\n    description: `${PREFIX}description`,\n    caption: `${PREFIX}caption`,\n    button: `${PREFIX}button`,\n}\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.centered}`]: {\n        textAlign: \"center\",\n    },\n\n    [`& .${classes.description}`]: {\n        fontSize: theme.typography.fontSize * 1.8,\n    },\n\n    [`& .${classes.caption}`]: {\n        fontSize: theme.typography.fontSize,\n    },\n\n    [`& .${classes.button}`]: {\n        fontSize: theme.typography.fontSize * 1.5,\n    },\n}))\n\nexport interface FeatureItemProps {\n    startImage?: ReactNode\n    title?: ReactNode\n    subtitle?: string\n    subtitle2?: string\n    subtitle3?: string\n    description?: string\n    caption?: string\n    buttonText?: string\n    centered?: boolean\n    buttonColor?: \"primary\" | \"secondary\" | \"inherit\"\n    buttonUrl?: string\n    buttonVariant?: \"outlined\" | \"contained\" | \"link\"\n    onButtonClick?: () => void\n    image?: ReactNode\n}\n\nexport default function FeatureItem(props: FeatureItemProps) {\n    const {\n        title,\n        subtitle,\n        subtitle2,\n        subtitle3,\n        description,\n        buttonText,\n        buttonUrl,\n        buttonColor = \"primary\",\n        buttonVariant = \"contained\",\n        startImage,\n        caption,\n        image,\n        centered,\n        onButtonClick,\n    } = props\n\n    const centeredCls = centered && classes.centered\n    const cls = centeredCls\n    return (\n        <Root>\n            {startImage && (\n                <Grid item xs={12}>\n                    <Box mb={2}>{startImage}</Box>\n                </Grid>\n            )}\n            {title && (\n                <Grid item xs={12}>\n                    <Typography variant=\"h1\" className={cls}>\n                        <span style={{ fontWeight: \"bold\" }}>{title}</span>\n                    </Typography>\n                </Grid>\n            )}\n            {subtitle && (\n                <Grid item xs={12}>\n                    <Typography variant=\"h2\" className={cls}>\n                        {subtitle}\n                    </Typography>\n                </Grid>\n            )}\n            {subtitle2 && (\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" className={cls}>\n                        {subtitle2}\n                    </Typography>\n                </Grid>\n            )}\n            {subtitle3 && (\n                <Grid item xs={12}>\n                    <Typography variant=\"h4\" className={cls}>\n                        {subtitle3}\n                    </Typography>\n                </Grid>\n            )}\n            {description && (\n                <Grid item xs={12}>\n                    <Typography\n                        variant=\"body1\"\n                        className={clsx(cls, classes.description)}\n                    >\n                        {description}\n                    </Typography>\n                </Grid>\n            )}\n            {caption && (\n                <Grid item xs={12}>\n                    <Typography\n                        variant=\"subtitle2\"\n                        className={clsx(cls, classes.caption)}\n                    >\n                        {caption}\n                    </Typography>\n                </Grid>\n            )}\n            {(buttonUrl || onButtonClick) && buttonText && (\n                <Grid item xs={12} className={clsx(cls, classes.button)}>\n                    {buttonVariant === \"link\" ? (\n                        <Link\n                            style={{ cursor: \"pointer\" }}\n                            to={buttonUrl}\n                            onClick={onButtonClick}\n                        >\n                            {buttonText}\n                            {\" >\"}\n                        </Link>\n                    ) : (\n                        <Box mt={2}>\n                            <Button\n                                variant=\"contained\"\n                                color={buttonColor}\n                                to={buttonUrl}\n                                onClick={onButtonClick}\n                            >\n                                {buttonText}\n                            </Button>\n                        </Box>\n                    )}\n                </Grid>\n            )}\n            {image && (\n                <Grid item xs={12} className={cls}>\n                    {image}\n                </Grid>\n            )}\n        </Root>\n    )\n}\n","import React, { CSSProperties, ReactNode } from \"react\"\nimport { Grid, GridSize } from \"@mui/material\"\nimport FeatureItem, { FeatureItemProps } from \"./FeatureItem\"\n\nexport default function SplitGrid(\n    props: {\n        right?: boolean\n        image: ReactNode\n        imageColumns?: GridSize\n        centered?: boolean\n        style?: CSSProperties\n    } & FeatureItemProps\n) {\n    const { right, image, centered, imageColumns = 5, style, ...others } = props\n\n    const textItem = (\n        <Grid item xs>\n            <Grid\n                container\n                spacing={2}\n                direction=\"column\"\n                alignContent={\"flex-start\"}\n                alignItems={centered ? \"center\" : \"flex-start\"}\n            >\n                <FeatureItem {...others} />\n            </Grid>\n        </Grid>\n    )\n\n    const imageItem = (\n        <Grid item xs={12} md={imageColumns}>\n            {image}\n        </Grid>\n    )\n\n    return (\n        <Grid item xs={12} style={style}>\n            <Grid\n                container\n                direction=\"row\"\n                alignContent=\"flex-start\"\n                alignItems=\"flex-start\"\n                spacing={4}\n            >\n                {right ? imageItem : textItem}\n                {right ? textItem : imageItem}\n            </Grid>\n        </Grid>\n    )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n"],"names":["message","console","warn","a","b","width","layout","images","map","image","src","join","filename","lastIndexOf","dot","slice","ext","length","args","height","sourceMetadata","breakpoints","aspectRatio","formats","format","toLowerCase","camelCase","Math","round","setDefaultDimensions","generateImageSource","fit","options","pluginName","reporter","backgroundColor","placeholderURL","formatFromFilename","size","has","delete","add","calculateImageSizes","sources","sizes","imageSizes","presentationWidth","forEach","imageSrc","filter","Boolean","find","img","unscaledWidth","unscaled","result","fallback","srcSet","getSrcSet","push","type","imageProps","placeholder","presentationHeight","values","Array","from","sort","sortNumeric","imgDimensions","DEFAULT_BREAKPOINTS","Object","entries","_","erroneousUserDimensions","dim","outputPixelDensities","DEFAULT_PIXEL_DENSITIES","dedupeAndSortDensities","getDimensionsAndAspectRatio","calculated","fixedDimension","densities","density","originalWidth","min","includes","dimensions","Number","MAX_SAFE_INTEGER","widthOption","heightOption","imageAspectRatio","max","prototype","GATSBY___IMAGE","node","gatsbyImageData","gatsbyImage","childImageSharp","getImage","gatsbyImageIsInstalled","wrapperStyle","position","overflow","display","verticalAlign","className","style","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","EVERY_BREAKPOINT","isLoading","isLoaded","loading","left","top","transform","transition","willChange","shouldLoad","opacity","objectFit","objectPosition","bottom","right","defaultImage","artDirected","media","process","env","NODE_ENV","output","source","sizer","paddingTop","maxWidth","React","alt","role","children","Fragment","Sizer","decoding","undefined","Image","key","fallbackImage","propTypes","PropTypes","string","isRequired","bool","Picture","displayName","exact","arrayOf","oneOfType","Placeholder","propName","componentName","MainImage","rest","object","altValidator","as","class","preactClass","onStartLoad","onLoad","onError","wStyle","wClass","wrapperProps","getWrapperProps","useRef","useMemo","JSON","stringify","getSizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","cacheKey","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","GatsbyImageHydrator","GatsbyImage","__imageData","imageData","__error","number","checkDimensionProps","validLayouts","_getStaticImage","GatsbyImageBrowser","StaticImage","PREFIX","classes","centered","description","caption","button","Root","styled","textAlign","fontSize","theme","buttonColor","buttonVariant","centeredCls","cls","startImage","title","fontWeight","subtitle","subtitle2","subtitle3","clsx","buttonUrl","cursor","imageColumns","others","textItem","imageItem","meta","useStaticQuery","metaTitle","pageContext","site","metaDescription","data","name","content"],"sourceRoot":""}