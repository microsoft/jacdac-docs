{"version":3,"file":"8827-ff96f005bb243a194a2d.js","mappings":";;;;;;;;;;;;;;;;;;;AAWA,GAAMA,CAAAA,UAAU,cAAGC,2CAAI,CAAC,IAAM,qGAAP,CAAvB,CAEe,8BAAsD,CACjE,GAAM,UAAN,MACA,GAAMC,CAAAA,QAAQ,CAAGC,uEAAW,SAAUC,0FAAV,CAA5B,CACA,GAAM,QAAYC,4FAAwB,UAA1C,KAA0C,CAA1C,CAIA,GAAMC,CAAAA,MAAM,CACRC,4EAAgB,CADpB,OACoB,CADpB,CAEA,GAAMC,CAAAA,KAAK,CAAGF,MAAM,aAApB,UACA,GAAM,aAAiBG,4EAAc,CAArC,KAAqC,CAArC,CAEA,GAAIC,CAAC,GAAL,UAAqB,mBAAO,sHAAP,IAAO,CAAP,CAErB,GAAMC,CAAAA,KAAK,SAAWD,CAAC,CAAF,IAACA,CAAX,SAA8BE,CAAC,CAAF,IAACA,CAA9B,SAAiDC,CAAC,CAAF,IAACA,CAAjD,GAAX,IACA,GAAMC,CAAAA,YAAY,CAAIN,KAAD,EAAmB,CACpC,GAAMO,CAAAA,GAAG,CAAGP,KAAK,CAALA,OAAAA,CAAAA,IAAAA,CAAZ,EAAYA,CAAZ,CACA,GAAMQ,CAAAA,GAAG,CAAGC,QAAQ,KAApB,EAAoB,CAApB,CACA,GAAMP,CAAAA,CAAC,CAAIM,GAAG,EAAJ,EAACA,CAAX,KACA,GAAMJ,CAAAA,CAAC,CAAII,GAAG,EAAJ,CAACA,CAAX,KACA,GAAMH,CAAAA,CAAC,CAAG,CAACG,GAAG,CAAJ,GAAV,KACAV,MAAM,CAANA,OAAAA,CAAAA,SAAAA,CAAyB,CAACI,CAAC,CAAF,KAAWE,CAAC,CAAZ,KAAqBC,CAAC,CAA/CP,IAAyB,CAAzBA,EACAJ,QAAQ,CAARA,OAAAA,GAPJ,EASA,GAAMgB,CAAAA,CAAC,CAAP,GACA,GAAMC,CAAAA,EAAE,CAAR,EAEA,UACI,mBACI,iIACI,6DAAY,KAAK,CAAjB,MAA0B,QAAQ,CAH9C,YAGY,EADJ,CADJ,CADJ,IAOI,oBACI,sHAAW,KAAK,CAAhB,EAAqB,MAAM,CAA3B,gBACI,yDACI,CAAC,CADL,EAEI,CAAC,CAFL,EAGI,KAAK,CAHT,EAII,MAAM,CAJV,EAKI,EAAE,CALN,GAMI,EAAE,CANN,GAOI,IAAI,CAPR,MAQI,MAAM,CARV,WASI,WAAW,CATf,EAUI,QAAQ,CAVZ,EAWI,4BAbZ,WAEQ,EADJ,CADJ,CAiBP","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardColor.tsx"],"sourcesContent":["import React, { lazy } from \"react\"\nimport { ColorReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { SensorServer } from \"../../../jacdac-ts/src/servers/sensorserver\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useRegister from \"../hooks/useRegister\"\nimport Suspense from \"../ui/Suspense\"\nconst ColorInput = lazy(() => import(\"../ui/ColorInput\"))\n\nexport default function DashboardColor(props: DashboardServiceProps) {\n    const { service } = props\n    const register = useRegister(service, ColorReg.Color)\n    const [r, g, b] = useRegisterUnpackedValue<[number, number, number]>(\n        register,\n        props\n    )\n    const server =\n        useServiceServer<SensorServer<[number, number, number]>>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background } = useWidgetTheme(color)\n\n    if (r === undefined) return <LoadingProgress />\n\n    const value = `rgb(${(r * 0xff) | 0}, ${(g * 0xff) | 0}, ${(b * 0xff) | 0})`\n    const handleChange = (color: string) => {\n        const hex = color.replace(/^#/, \"\")\n        const rgb = parseInt(hex, 16)\n        const r = (rgb >> 16) & 0xff\n        const g = (rgb >> 8) & 0xff\n        const b = (rgb | 0) & 0xff\n        server.reading.setValues([r / 0xff, g / 0xff, b / 0xff])\n        register.refresh()\n    }\n    const w = 64\n    const rx = 4\n\n    if (server)\n        return (\n            <Suspense>\n                <ColorInput value={value} onChange={handleChange} />\n            </Suspense>\n        )\n    else\n        return (\n            <SvgWidget width={w} height={w}>\n                <rect\n                    x={0}\n                    y={0}\n                    width={w}\n                    height={w}\n                    rx={rx}\n                    ry={rx}\n                    fill={value}\n                    stroke={background}\n                    strokeWidth={2}\n                    tabIndex={0}\n                    aria-label={`color ${value} detected`}\n                />\n            </SvgWidget>\n        )\n}\n"],"names":["ColorInput","lazy","register","useRegister","ColorReg","useRegisterUnpackedValue","server","useServiceServer","color","useWidgetTheme","r","value","g","b","handleChange","hex","rgb","parseInt","w","rx"],"sourceRoot":""}