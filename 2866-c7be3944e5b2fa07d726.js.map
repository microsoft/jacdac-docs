{"version":3,"file":"2866-c7be3944e5b2fa07d726.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/hooks/useMicrophoneVolume.ts","webpack://jacdac-docs/./src/components/widgets/TrendWidget.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardSoundLevel.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\"\nimport { AudioAnalyzerOptions, useMicrophoneAnalyzer } from \"./useAudioAnalyzer\"\n\nexport default function useMicrophoneVolume(\n    enabled: boolean,\n    options?: AudioAnalyzerOptions\n) {\n    const { analyser, onClickActivateMicrophone, closeMicrophone } =\n        useMicrophoneAnalyzer(options)\n    const frequencies = useRef(new Uint8Array(0))\n\n    useEffect(() => {\n        if (!enabled) closeMicrophone()\n    }, [enabled])\n\n    return {\n        onClickActivateMicrophone,\n        volume: () => {\n            const a = analyser()\n            if (!a) return 0\n\n            if (frequencies.current.length !== a.frequencyBinCount)\n                frequencies.current = new Uint8Array(a.frequencyBinCount)\n            a.getByteFrequencyData(frequencies.current)\n            let max = 0\n            const bins = frequencies.current\n            const n = bins.length\n            for (let i = 0; i < n; ++i) max = Math.max(max, bins[i])\n            return max / 0xff\n        },\n    }\n}\n","import React, { useRef, useEffect } from \"react\"\nimport { REPORT_RECEIVE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport useAnimationFrame from \"../hooks/useAnimationFrame\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport SvgWidget from \"./SvgWidget\"\nimport useWidgetTheme from \"./useWidgetTheme\"\n\nexport default function TrendWidget(props: {\n    register: JDRegister\n    min: number\n    max: number\n    horizon: number\n    size?: string\n    thresholds?: number[]\n}) {\n    const { register, min, max, horizon, size, thresholds } = props\n    const server = useServiceServer(register.service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, controlBackground, active } = useWidgetTheme(color)\n    const dataRef = useRef<number[]>(undefined)\n    const pathRef = useRef<SVGPathElement>()\n\n    const dx = 4\n    const m = 2\n    const w = horizon * dx + 2 * m\n    const h = w / 1.612\n    const dy = (h - 2 * m) / (max - min)\n\n    useEffect(() => {\n        dataRef.current = register ? [] : undefined // reset data\n        return register?.subscribe(REPORT_RECEIVE, () => {\n            // register new value\n            const [v] = register.unpackedValue as [number]\n            const data = dataRef.current\n            data.unshift(v)\n            while (data.length > horizon) data.pop()\n        })\n    }, [register, horizon, min, max])\n\n    useAnimationFrame(() => {\n        // update dom\n        const data = dataRef.current\n        if (!data) return false // nothing to render\n\n        if (pathRef.current) {\n            let d = `M ${w} ${h} `\n            let x = w - m\n            for (let i = 0; i < data.length; ++i) {\n                const v = data[i]\n                const y = h - m - (v - min) * dy\n                d += `L ${x} ${y}`\n                x -= dx\n            }\n            d += ` V ${h} z`\n            pathRef.current.setAttribute(\"d\", d)\n        }\n        return true\n    }, [dataRef.current])\n\n    return (\n        <SvgWidget width={w} height={h} size={size} background={background}>\n            <path\n                fill={active}\n                stroke={controlBackground}\n                strokeWidth={m / 2}\n                ref={pathRef}\n            />\n            {thresholds?.map((threshold, i) => (\n                <line\n                    key={i}\n                    stroke={background}\n                    strokeWidth={m * 2}\n                    x1={0}\n                    x2={w}\n                    y1={h - m - (threshold - min) * dy}\n                    y2={h - m - (threshold - min) * dy}\n                />\n            ))}\n        </SvgWidget>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { Grid } from \"@mui/material\"\nimport MicIcon from \"@mui/icons-material/Mic\"\nimport { REFRESH, SoundLevelReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { AnalogSensorServer } from \"../../../jacdac-ts/src/servers/analogsensorserver\"\nimport IconButtonWithProgress from \"../ui/IconButtonWithProgress\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useMicrophoneVolume from \"../hooks/useMicrophoneVolume\"\nimport TrendWidget from \"../widgets/TrendWidget\"\nimport useRegister from \"../hooks/useRegister\"\nimport MicrophoneSettingsButton from \"../ui/MicrophoneSettingsButton\"\nimport Suspense from \"../ui/Suspense\"\nimport GaugeWidget from \"../widgets/GaugeWidget\"\n\nfunction HostMicrophoneButton(props: {\n    service: JDService\n    server?: AnalogSensorServer\n    visible: boolean\n}) {\n    const { server, service, visible } = props\n\n    const enabledRegister = useRegister(service, SoundLevelReg.Enabled)\n    const enabled = useRegisterBoolValue(enabledRegister, props)\n    const { volume, onClickActivateMicrophone } = useMicrophoneVolume(\n        enabled && !!server,\n        { fftSize: 64, smoothingTimeConstant: 0 }\n    )\n    const title = enabled ? \"Stop microphone\" : \"Start microphone\"\n\n    const handleClick = async () => {\n        if (!enabled && server) await onClickActivateMicrophone()\n        await enabledRegister.sendSetBoolAsync(!enabled, true)\n    }\n\n    // update volume on demand\n    useEffect(\n        () =>\n            visible\n                ? server?.subscribe(REFRESH, () => {\n                      const v = volume?.()\n                      if (v !== undefined) {\n                          server.reading.setValues([v])\n                      }\n                  })\n                : undefined,\n        [server, volume, visible]\n    )\n\n    return (\n        <IconButtonWithProgress\n            title={title}\n            indeterminate={enabled}\n            onClick={handleClick}\n        >\n            <MicIcon />\n        </IconButtonWithProgress>\n    )\n}\n\nexport default function DashboardSoundLevel(props: DashboardServiceProps) {\n    const { visible, expanded, service } = props\n    const soundLevelRegister = useRegister(service, SoundLevelReg.SoundLevel)\n    const server = useServiceServer<AnalogSensorServer>(service)\n    const [soundLevel] = useRegisterUnpackedValue<[number]>(\n        soundLevelRegister,\n        props\n    )\n    const color = server ? \"secondary\" : \"primary\"\n    const size = `clamp(6rem, 12vw, 12vh)`\n\n    return (\n        <Grid container direction=\"column\">\n            {expanded && (\n                <Grid item>\n                    <TrendWidget\n                        register={soundLevelRegister}\n                        min={0}\n                        max={1}\n                        horizon={32}\n                    />\n                </Grid>\n            )}\n            {!expanded && soundLevel !== undefined && (\n                <Grid item>\n                    <Suspense>\n                        <GaugeWidget\n                            value={Math.ceil(soundLevel * 100)}\n                            min={0}\n                            max={100}\n                            size={size}\n                            color={color}\n                        />\n                    </Suspense>\n                </Grid>\n            )}\n            <Grid item>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <HostMicrophoneButton\n                            service={service}\n                            server={server}\n                            visible={visible}\n                        />\n                    </Grid>\n                    {server && (\n                        <Grid item>\n                            <MicrophoneSettingsButton />\n                        </Grid>\n                    )}\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["useMicrophoneAnalyzer","frequencies","useRef","useEffect","closeMicrophone","volume","a","analyser","max","bins","n","i","Math","server","useServiceServer","register","color","useWidgetTheme","dataRef","pathRef","dx","m","w","horizon","h","dy","data","useAnimationFrame","d","x","v","y","thresholds","threshold","enabledRegister","useRegister","SoundLevelReg","enabled","useRegisterBoolValue","useMicrophoneVolume","fftSize","smoothingTimeConstant","title","handleClick","onClickActivateMicrophone","visible","soundLevelRegister","useRegisterUnpackedValue","size","expanded","soundLevel"],"sourceRoot":""}