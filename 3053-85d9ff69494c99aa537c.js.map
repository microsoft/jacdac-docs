{"version":3,"file":"3053-85d9ff69494c99aa537c.js","mappings":";;;;;;;;;;;;;;AAKe,oBAAqB,qCAChC,GAAMA,CAAAA,IAAI,CAAGC,sDAAc,CAA3B,YAA2B,CAA3B,CA8BA,GAAMC,CAAAA,KAGH,CAAGF,IAAH,OAAGA,EAAAA,IAAH,SAAGA,CAAH,MAAGA,CAAH,cAAGA,IAAI,CAAP,iEAAGA,YAAAA,CAAH,kDAAGA,kBAAAA,CAAAA,MAAAA,CAEEG,IAAI,4CACA,mBAAI,CAAJ,6EAAiC,CAAjC,uBAAuCA,IAAI,CAA3C,uDAAuCA,iBAAAA,CADvC,KACA,CADA,CAFNH,CAAAA,EAAAA,GAAAA,CAKGG,IAAI,2BAAK,CACVC,IAAI,gBAAED,IAAI,CAAN,8CAAEA,aAAAA,CADI,KAEVE,KAAK,CAAEF,IAAI,CAAJA,WAAAA,CAFG,MAGVG,KAAK,CAAEH,IAAI,CAAJA,WAAAA,CAHF,KAAK,CAAL,CARb,CAGMH,CAHN,CAcA,GAAMO,CAAAA,MAAM,CAAGC,4EAAO,OAAQL,IAAI,EAAIA,IAAI,CAAJA,IAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAtC,EAAsB,CAAtB,CACA,GAAMM,CAAAA,UAAU,CAAGC,MAAM,CAANA,IAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAA2BC,CAAC,EAAI,CAAC,CAApD,CAAmBD,CAAnB,CACAE,OAAO,CAAPA,KAAAA,CAAAA,UAAAA,EAEA,mBACI,kGACKH,UAAU,CAAVA,GAAAA,CAAeI,KAAK,eACjB,+GACI,uDAAI,GAAG,CAAP,OADJ,KACI,CADJ,cAEI,oHAAc,KAAK,CAAEN,MAAM,CAL3C,KAK2C,CAA3B,EAFJ,CADHE,CADL,CADJ,CAUH","sources":["webpack://jacdac-docs/./src/components/faq/ErrorList.tsx"],"sourcesContent":["import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { groupBy } from \"../../../jacdac-ts/src/jdom/utils\"\nimport PageLinkList from \"../ui/PageLinkList\"\n\nexport default function ErrorList() {\n    const data = useStaticQuery<{\n        allMdx: {\n            nodes: {\n                fields: {\n                    slug: string\n                }\n                frontmatter: {\n                    title?: string\n                    order?: number\n                }\n            }[]\n        }\n    }>(graphql`\n        {\n            allMdx(\n                filter: { fields: { slug: { glob: \"faq/errors/**\" } } }\n            ) {\n                nodes {\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        order\n                    }\n                }\n            }\n        }\n    `)\n\n    const nodes: {\n        slug: string\n        title: string\n    }[] = data?.allMdx?.nodes\n        ?.filter(\n            node =>\n                node.fields?.slug.indexOf(\"/\") > -1 && node.frontmatter?.title\n        )\n        .map(node => ({\n            slug: node.fields?.slug,\n            title: node.frontmatter.title,\n            order: node.frontmatter.order,\n        }))\n\n    const groups = groupBy(nodes, node => node.slug.split(\"/\", 3)[2] || \"\")\n    const groupNames = Object.keys(groups).filter(g => !!g)\n    console.debug(groupNames)\n\n    return (\n        <>\n            {groupNames.map(group => (\n                <>\n                    <h2 key={group}>{group}</h2>\n                    <PageLinkList nodes={groups[group]} />\n                </>\n            ))}\n        </>\n    )\n}\n"],"names":["data","useStaticQuery","nodes","node","slug","title","order","groups","groupBy","groupNames","Object","g","console","group"],"sourceRoot":""}