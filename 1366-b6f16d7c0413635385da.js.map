{"version":3,"file":"1366-b6f16d7c0413635385da.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/material/TableCell/tableCellClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/TableCell/TableCell.js","webpack://jacdac-docs/./src/components/dashboard/DashboardGPIO.tsx","webpack://jacdac-docs/./src/jacdac/useServiceSpecification.ts"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n      align = 'inherit',\n      className,\n      component: componentProp,\n      padding: paddingProp,\n      scope: scopeProp,\n      size: sizeProp,\n      sortDirection,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import React, { useEffect, useState } from \"react\"\nimport {\n    GPIOCapabilities,\n    GPIOCmd,\n    GPIOCmdPack,\n    GPIOMode,\n    GPIOReg,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\nimport DashboardRegisterValueFallback from \"./DashboardRegisterValueFallback\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Table, TableCell, TableRow } from \"@mui/material\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { Packet } from \"../../../jacdac-ts/src/jdom/packet\"\nimport {\n    COMMAND_RECEIVE,\n    SRV_GPIO,\n    prettyEnum,\n} from \"../../../jacdac-ts/src/jacdac\"\nimport { useServiceSpecificationFromServiceClass } from \"../../jacdac/useServiceSpecification\"\n\ninterface GPIOPinInfo {\n    hwPin: number\n    capabilities: GPIOCapabilities\n    mode: GPIOMode\n    label: string\n}\n\nfunction PinItem(props: {\n    service: JDService\n    pin: number\n    state: number\n    visible: boolean\n}) {\n    const { service, pin, state } = props\n    const [changeId, setChangeId] = useState(0)\n    const [info, setInfo] = useState<GPIOPinInfo>(undefined)\n    const { label = \"\", mode, capabilities, hwPin } = info || {}\n    const spec = useServiceSpecificationFromServiceClass(SRV_GPIO)\n    const modeSpec = spec.enums[\"Mode\"]\n    const capSpec = spec.enums[\"Capabilities\"]\n\n    useEffectAsync(async () => {\n        const pkt = Packet.from(\n            GPIOCmd.PinInfo,\n            jdpack(GPIOCmdPack.PinInfo, [pin])\n        )\n        const resp = await service.sendCmdAwaitResponseAsync(pkt)\n        const [, hwPin, capabilities, mode, label] = resp.jdunpack(\n            GPIOCmdPack.PinInfoReport\n        )\n\n        setInfo({ hwPin, capabilities, mode, label })\n    }, [service, changeId])\n\n    useEffect(\n        () =>\n            service?.subscribe(COMMAND_RECEIVE, (pkt: Packet) => {\n                const cmd = pkt.serviceCommand\n                if (cmd === GPIOCmd.Configure) {\n                    setChangeId(id => id + 1)\n                }\n            }),\n        [service]\n    )\n\n    return (\n        <TableRow>\n            <TableCell title={`pin ${label || pin + \"\"}, hardware id ${hwPin}`}>\n                {label || pin + \"\"} {`(#${hwPin})`}\n            </TableCell>\n            <TableCell>{state !== undefined ? state : \"\"}</TableCell>\n            <TableCell>\n                {mode !== undefined\n                    ? prettyEnum(modeSpec, mode).toLowerCase()\n                    : \"\"}\n            </TableCell>\n            <TableCell>\n                {capabilities !== undefined\n                    ? prettyEnum(capSpec, capabilities).toLowerCase()\n                    : \"\"}\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default function DashboardGPIO(props: DashboardServiceProps) {\n    const { service, visible } = props\n\n    const stateRegister = useRegister(service, GPIOReg.State)\n    const [state] = useRegisterUnpackedValue<[Uint8Array]>(stateRegister, props)\n\n    if (state === undefined)\n        return <DashboardRegisterValueFallback register={stateRegister} />\n\n    return (\n        <Table size=\"small\">\n            {Array(state.length)\n                .fill(0)\n                .map((v, i) => (\n                    <PinItem\n                        service={service}\n                        pin={i}\n                        key={i}\n                        state={state[i]}\n                        visible={visible}\n                    />\n                ))}\n        </Table>\n    )\n}\n","import { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { useMemo } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\n\nexport function useServiceSpecificationFromServiceClass(serviceClass: number) {\n    const specification = useMemo(\n        () => serviceSpecificationFromClassIdentifier(serviceClass),\n        [serviceClass]\n    )\n    return specification\n}\n\nexport function useServiceSpecification(service: JDService) {\n    const serviceClass = service?.serviceClass\n    const specification = useServiceSpecificationFromServiceClass(serviceClass)\n    return specification\n}\n"],"names":["useState","label","info","spec","useServiceSpecificationFromServiceClass","modeSpec","capSpec","useEffectAsync","pkt","Packet","GPIOCmd","jdpack","GPIOCmdPack","resp","service","setInfo","useEffect","cmd","setChangeId","id","pin","state","mode","prettyEnum","capabilities","stateRegister","useRegister","GPIOReg","useRegisterUnpackedValue","Array","specification","useMemo","serviceSpecificationFromClassIdentifier","serviceClass"],"sourceRoot":""}