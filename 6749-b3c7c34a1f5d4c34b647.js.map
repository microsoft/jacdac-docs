{"version":3,"file":"6749-b3c7c34a1f5d4c34b647.js","mappings":"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","sources":["webpack://jacdac-docs/./jacdac-ts/src/jdom/semver.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/icons/MakeCodeIcon.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeOpenSnippetButton.tsx","webpack://jacdac-docs/./src/components/makecode/usePxtJson.ts","webpack://jacdac-docs/./src/components/useFetch.ts"],"sourcesContent":["export interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nexport function versionTryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m =\n        /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n            v,\n        )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = versionTryParse(a)\n    const bb = versionTryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { semverCmp } from \"../../jacdac-ts/src/jdom/semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nexport interface GithubRelease {\n    url: string\n    tag_name: string\n    name: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    if (!slug) return {}\n    const cleaned = slug\n        .replace(/^https:\\/\\/github.com\\//, \"\")\n        .replace(/\\/tree\\/master/, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        owner: parts[0],\n        name: parts[1],\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const u = (url || \"\").replace(/\\/tree\\/master/, \"\")\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(u)\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<{\n    status: number\n    release?: GithubFirmwareRelease\n}> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    const { status } = resp\n    switch (status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return { release: releases[0], status }\n        }\n        case 404:\n            // unknow repo or no access\n            return { status }\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return { status }\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport function rawUrl(slug: string, branch: string, path: string) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const url = `https://raw.githubusercontent.com/${[\n        repoPath,\n        branch,\n        folder,\n        path,\n    ]\n        .filter(p => !!p)\n        .join(\"/\")}`\n    return url\n}\n\nexport async function fetchFirmwareReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(path ? `${ROOT}${path}` : undefined)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = repoPath ? `repos/${repoPath}` : undefined\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}/releases/latest`\n    const res = useFetchApi<GithubRelease>(path)\n    return res\n}\n\nexport function useLatestReleaseAsset(url: string) {\n    const [, slug, filename] =\n        /^https:\\/\\/github.com\\/(.+)\\/releases\\/latest\\/download\\/(.+)$/i.exec(\n            url\n        ) || []\n    //console.log(`asset slug`, { url, slug })\n    if (!slug) return { status: 404 }\n    const { status, response } = useLatestRelease(slug)\n    if (status === 200 && response) {\n        const { tag_name, name } = response\n        return {\n            name,\n            version: tag_name,\n            assertUrl: `https://github.com/${slug}/releases/download/${tag_name}/${filename}`,\n        }\n    } else return {}\n}\n\nexport function useLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    const resp = useLatestFirmwareReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestFirmwareReleases(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\"\nimport React from \"react\"\n\nexport default (props: SvgIconProps) => (\n    <SvgIcon titleAccess=\"MakeCode logo\" {...props}>\n        <path\n            d=\"M4.703 2.615s-.505.05-.72.15a3.011 3.011 0 00-.391.221c-.22.12-.42.266-.6.444-.52.516-.795 1.2-.834 2.05a6.857 6.857 0 00-.066.961V8.36a5.117 5.117 0 01-.137 1.032 1.73 1.73 0 01-.4.773 2.006 2.006 0 00-.15.149 6.534 6.534 0 01-.848.617c-.303.196-.481.474-.537.83v.017c-.01.07-.017.14-.018.215L0 12.006v.008c0 .08.003.156.012.226h.002c.024.214.082.378.177.492.129.153.345.328.649.52.304.192.552.398.74.62.19.221.332.549.428.985.037.17.065.54.084 1.106v1.514c0 .285.023.542.056.787.001.047 0 .092.002.14.007.587.135 1.107.385 1.559.25.453.604.803 1.063 1.05.458.248.978.372 1.56.372h14.139c.262 0 .505-.05.72-.15.139-.064.267-.14.391-.221.218-.12.42-.266.6-.444.52-.516.795-1.2.834-2.05.042-.299.066-.618.066-.963v-1.918c.014-.372.059-.715.137-1.03.078-.314.213-.572.4-.775a1.98 1.98 0 00.15-.146c.2-.179.48-.384.848-.618.303-.196.481-.475.537-.832l.002-.015a1.66 1.66 0 00.018-.217V11.988c0-.08-.004-.156-.012-.226h-.002c-.024-.214-.082-.378-.177-.492-.129-.153-.345-.328-.649-.52a3.208 3.208 0 01-.74-.62c-.19-.221-.332-.55-.428-.987-.037-.17-.065-.538-.084-1.104V6.523c0-.285-.023-.542-.056-.787-.001-.047 0-.092-.002-.14-.007-.587-.135-1.107-.385-1.559a2.598 2.598 0 00-1.063-1.05c-.458-.248-.978-.372-1.56-.372H4.703zm1.22 1.24c.307 0 .533.058.673.172.115.096.168.24.168.453a.885.885 0 01-.069.36.501.501 0 01-.142.201.346.346 0 01-.18.07c-.31.042-.543.095-.713.164a1.03 1.03 0 00-.543.536c-.093.201-.149.47-.174.818-.022.301-.033.725-.033 1.293-.012.796-.058 1.422-.137 1.861-.07.398-.206.74-.4 1.02-.197.282-.499.552-.898.804l-.616.39.618.386c.286.18.52.368.695.558.166.18.304.407.414.672.115.277.2.614.248 1.004.051.413.076.908.076 1.47 0 .587.013 1.025.037 1.34.03.367.094.64.196.835.123.236.303.403.537.496.168.067.395.114.693.148a.404.404 0 01.268.16c.081.1.123.259.123.471 0 .308-.064.608-.84.608-.477 0-.898-.094-1.25-.282a2.006 2.006 0 01-.813-.785 2.402 2.402 0 01-.31-1.197c-.048-2.666-.098-3.199-.139-3.37-.115-.472-.286-.83-.525-1.097a3.373 3.373 0 00-.776-.633c-.216-.13-.375-.254-.47-.369-.027-.032-.088-.136-.088-.416 0-.288.09-.471.293-.596.454-.28.781-.522.998-.746.244-.251.415-.565.51-.931.084-.328.132-.788.148-1.407.015-.58.03-1.305.049-2.177.016-.706.229-1.25.654-1.666.426-.416.988-.618 1.719-.618zm12.153 0c.477 0 .898.095 1.25.282.348.185.612.442.813.785.2.343.305.746.31 1.197.048 2.666.098 3.199.139 3.37.115.472.286.83.525 1.097.216.24.476.452.776.633.217.131.376.255.47.369.027.032.088.136.088.416 0 .287-.09.471-.293.596-.454.28-.78.522-.998.746-.243.25-.415.565-.51.931-.084.328-.132.788-.148 1.407-.015.58-.03 1.305-.049 2.177-.016.706-.229 1.25-.654 1.666-.426.416-.988.618-1.719.618-.307 0-.533-.058-.672-.172-.116-.096-.168-.24-.168-.453 0-.135.021-.253.069-.36a.512.512 0 01.14-.201.353.353 0 01.182-.07c.31-.042.543-.095.713-.164.238-.099.424-.284.54-.538.094-.201.152-.468.177-.816.021-.301.033-.727.033-1.295.012-.796.058-1.42.137-1.86.07-.397.204-.74.398-1.019.196-.281.499-.552.898-.804l.616-.39-.616-.386a3.412 3.412 0 01-.695-.558 2.275 2.275 0 01-.416-.672 3.871 3.871 0 01-.246-1.004 12.22 12.22 0 01-.078-1.47c0-.587-.012-1.025-.037-1.34-.03-.367-.092-.64-.194-.835a1.021 1.021 0 00-.539-.496 2.76 2.76 0 00-.691-.148.4.4 0 01-.268-.16c-.082-.1-.123-.259-.123-.471 0-.308.064-.608.84-.608zm-6.29 1.348c.052-.005.341-.005.394 0v.01a1.524 1.524 0 011.287 1.457c0 .62-.332.891-.332.916-.33.346-.123.744.467.695 0 0 2.4.012 2.445 0a.576.576 0 01.422.555l-.002 2.574c-.106.3-.396.36-.658.111-.025 0-.296-.332-.916-.332a1.521 1.521 0 00-1.457 1.286h-.008a4.897 4.897 0 000 .394h.008a1.524 1.524 0 001.457 1.287c.62 0 .89-.332.916-.332.27-.256.557-.225.658.112v2.783a.562.562 0 01-.563.562H8.061a.561.561 0 01-.563-.562V8.836c0-.261.18-.492.422-.555.046.012 2.443 0 2.443 0 .659.032.798-.349.469-.695 0-.025-.332-.296-.332-.916a1.521 1.521 0 011.285-1.457v-.01z\"\n            strokeWidth=\".75\"\n        />\n    </SvgIcon>\n)\n","import React, { useState } from \"react\"\nimport { Button, SxProps, Theme } from \"@mui/material\"\nimport { toMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport MakeCodeIcon from \"../icons/MakeCodeIcon\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport useSnackbar from \"../hooks/useSnackbar\"\nimport usePxtJson from \"../makecode/usePxtJson\"\n\nexport default function MakeCodeOpenSnippetButton(props: {\n    sx?: SxProps<Theme>\n    name?: string\n    code?: string\n    options?: { package?: string }\n    slug?: string\n    branch?: string\n    full?: boolean\n}) {\n    const { setError } = useSnackbar()\n    const { mobile } = useMediaQueries()\n    const [importing, setImporting] = useState(false)\n    const {\n        sx,\n        code = \"\",\n        options,\n        name = \"Jacdac demo\",\n        slug,\n        branch = \"master\",\n        full\n    } = props\n    const pxt = usePxtJson(slug, branch)\n    const disabled = importing || (slug && !pxt)\n\n    const handleClick = async () => {\n        const md = \"\\n\"\n        const target = \"microbit\"\n        const editor = \"https://makecode.microbit.org/\"\n        const deps = options?.package?.split(\",\").map(dep => dep.split(\"=\", 2))\n        const dependencies =\n            toMap(\n                deps,\n                deps => deps[0],\n                deps => deps[1]\n            ) || {}\n        if (pxt) dependencies[pxt.name] = `github:${slug}#v${pxt.version}`\n\n        try {\n            setImporting(true)\n            const x = await fetch(\"https://makecode.com/api/scripts\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                },\n                body: JSON.stringify({\n                    name,\n                    target,\n                    description: \"Made with ❤️ in Microsoft Jacdac.\",\n                    editor: \"blocksprj\",\n                    text: {\n                        \"README.md\": md,\n                        \"main.blocks\": code\n                            ? \"\"\n                            : `<xml xmlns=\"http://www.w3.org/1999/xhtml\"></xml>`,\n                        \"main.ts\": code,\n                        \"pxt.json\": JSON.stringify({\n                            name: name,\n                            dependencies: {\n                                core: \"*\",\n                                microphone: \"*\",\n                                ...dependencies,\n                            },\n                            description: \"\",\n                            files: [\"main.blocks\", \"main.ts\", \"README.md\"],\n                        }),\n                    },\n                    meta: {},\n                }),\n            })\n            const data = await x.json()\n            const url = `${editor}#pub:${data.shortid}`\n            window.open(url, \"_blank\", \"noreferrer\")\n        } catch (error) {\n            setError(error)\n        } finally {\n            setImporting(false)\n        }\n    }\n\n    if (mobile) // mobile blocks all popups\n        return undefined\n\n    return !full && mobile ? (\n        <IconButtonWithTooltip\n            sx={sx}\n            onClick={handleClick}\n            color=\"primary\"\n            disabled={disabled}\n            title=\"Try in MakeCode\"\n        >\n            <MakeCodeIcon />\n        </IconButtonWithTooltip>\n    ) : (\n        <Button\n            sx={sx}\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleClick}\n            disabled={disabled}\n            startIcon={<MakeCodeIcon />}\n        >\n            Try in MakeCode\n        </Button>\n    )\n}\n","import { rawUrl } from \"../github\"\nimport useFetch from \"../useFetch\"\n\nexport interface PxtJson {\n    name: string\n    description: string\n    version?: string\n    dependencies?: Record<string, string>\n}\n\nexport default function usePxtJson(slug: string, branch?: string) {\n    if (!slug)\n        return undefined\n    const url = rawUrl(slug, branch, \"pxt.json\")\n    const { response: pxtJson } = useFetch<PxtJson>(url)\n    return pxtJson\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n"],"names":["d","a","b","i","aa","bb","parseInt","strcmp","major","Number","minor","patch","pre","build","v","m","versionTryParse","cmp","ROOT","GITHUB_API_KEY","version","content","sha","size","html_url","download_url","contents","r","semverCmp","l","cleaned","slug","parts","repoPath","owner","name","folder","u","url","normalizeSlug","uri","resp","fetch","releases","contentsToFirmwareReleases","release","options","p","downloadUrl","req","headers","Accept","firmware","src","res","useFetch","path","console","useFetchApi","ignoreThrottled","status","useLatestRelease","assertUrl","useLatestFirmwareReleases","response","loading","error","props","useSnackbar","useMediaQueries","useState","code","branch","pxt","usePxtJson","disabled","importing","handleClick","md","target","editor","deps","dep","dependencies","toMap","setImporting","x","method","body","JSON","description","text","core","microphone","files","meta","data","window","setError","rawUrl","useEffectAsync","setLoading","setStatus","setResponse","mounted","json"],"sourceRoot":""}