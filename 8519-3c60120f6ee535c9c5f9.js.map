{"version":3,"file":"8519-3c60120f6ee535c9c5f9.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Keyboard.js","webpack://jacdac-docs/./src/components/CmdButton.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardHIDKeyboard.tsx","webpack://jacdac-docs/./src/components/hooks/useMounted.ts"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z\"\n}), 'Keyboard');\nexports.default = _default;","import { darken, lighten } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React, { CSSProperties, ReactNode, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ErrorIcon from \"@mui/icons-material/Error\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport useAnalytics, { EventProperties } from \"./hooks/useAnalytics\"\nimport useMounted from \"./hooks/useMounted\"\nimport clsx from \"clsx\"\nimport useSnackbar from \"./hooks/useSnackbar\"\nimport useBus from \"../jacdac/useBus\"\nimport OptionalTooltip from \"./widgets/OptionalTooltip\"\n\nconst PREFIX = \"CmdButton\"\n\nconst classes = {\n    ack: `${PREFIX}Ack`,\n    error: `${PREFIX}Error`,\n}\n\nconst Root = styled(\"span\")(({ theme }) => ({\n    [`& .${classes.ack}`]: {\n        color: \"#fff\",\n        fontWeight: theme.typography.fontWeightMedium,\n        backgroundColor: theme.palette.success.main,\n    },\n\n    [`& .${classes.error}`]: {\n        color: \"#fff\",\n        backgroundColor: (theme.palette.mode === \"light\" ? lighten : darken)(\n            theme.palette.error.main,\n            0.6\n        ),\n    },\n}))\n\nconst ACK_RESET_DELAY = 500\nconst ERROR_RESET_DELAY = 2000\n\nexport default function CmdButton(props: {\n    onClick: (mounted: () => boolean) => Promise<void>\n    className?: string\n    style?: CSSProperties\n    title?: string\n    children?: ReactNode\n    icon?: JSX.Element\n    size?: \"small\" | \"large\" | undefined\n    variant?: \"outlined\" | \"contained\" | undefined\n    disabled?: boolean\n    disableReset?: boolean\n    autoRun?: boolean\n    trackName?: string\n    trackProperties?: EventProperties\n    ackResetDelay?: number\n    color?:\n        | \"inherit\"\n        | \"primary\"\n        | \"secondary\"\n        | \"error\"\n        | \"info\"\n        | \"success\"\n        | \"warning\"\n}) {\n    const {\n        onClick,\n        className,\n        style,\n        children,\n        icon,\n        title,\n        disabled,\n        disableReset,\n        autoRun,\n        trackName,\n        trackProperties,\n        ackResetDelay,\n        color,\n        ...others\n    } = props\n    const bus = useBus()\n    const { setError: setAppError } = useSnackbar()\n\n    const [working, setWorking] = useState(false)\n    const [ack, setAck] = useState(false)\n    const [error, setError] = useState(undefined)\n    const { trackEvent } = useAnalytics()\n    const mounted = useMounted()\n\n    const _disabled = disabled || working\n\n    const run = async () => {\n        if (working) return // already working\n\n        if (trackName) trackEvent(\"cmd.\" + trackName, trackProperties)\n        try {\n            setError(undefined)\n            setAck(false)\n            setWorking(true)\n            await onClick(mounted)\n            if (!mounted()) return\n            setAck(true)\n            if (!disableReset) {\n                await bus.delay(ackResetDelay || ACK_RESET_DELAY)\n                if (!mounted()) return\n                setAck(false)\n            }\n        } catch (e) {\n            if (!mounted()) return\n            setAppError(e)\n            setError(e)\n            if (!disableReset) {\n                await bus.delay(ERROR_RESET_DELAY)\n                if (!mounted()) return\n                setError(undefined)\n            }\n        } finally {\n            if (mounted()) setWorking(false)\n        }\n    }\n\n    const handleClick = async (ev: React.MouseEvent<HTMLButtonElement>) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n        run()\n    }\n\n    const statusIcon = error ? <ErrorIcon /> : undefined\n    const modeClassName = error ? classes.error : ack ? classes.ack : undefined\n    const elClassName = clsx(className, modeClassName)\n\n    // run once\n    useEffect(() => {\n        if (autoRun && mounted()) run()\n    }, [autoRun])\n\n    return (\n        <Root>\n            {!children && icon ? (\n                <IconButtonWithTooltip\n                    className={elClassName}\n                    style={style}\n                    onClick={handleClick}\n                    aria-label={title}\n                    title={title}\n                    disabled={_disabled}\n                    color={color}\n                    {...others}\n                >\n                    {statusIcon || icon}\n                </IconButtonWithTooltip>\n            ) : (\n                <OptionalTooltip title={title} placement=\"bottom\">\n                    <Button\n                        className={elClassName}\n                        style={style}\n                        startIcon={icon}\n                        endIcon={statusIcon}\n                        onClick={handleClick}\n                        aria-label={title}\n                        title=\"\"\n                        disabled={_disabled}\n                        color={color}\n                        {...others}\n                    >\n                        {children}\n                    </Button>\n                </OptionalTooltip>\n            )}\n        </Root>\n    )\n}\n","import React, { lazy, useCallback, useEffect, useState } from \"react\"\nimport { Grid } from \"@mui/material\"\nimport {\n    HidKeyboardAction,\n    HidKeyboardCmd,\n    HidKeyboardCmdPack,\n    HidKeyboardModifiers,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport CmdButton from \"../CmdButton\"\nimport KeyboardIcon from \"@mui/icons-material/Keyboard\"\nimport Suspense from \"../ui/Suspense\"\nimport {\n    COMMAND_RECEIVE,\n    Packet,\n    renderKeyboardKey,\n} from \"../../../jacdac-ts/src/jacdac\"\nconst KeyboardKeyInput = lazy(() => import(\"../ui/KeyboardKeyInput\"))\n\nexport default function DashboardHIDKeyboard(props: DashboardServiceProps) {\n    const { service, expanded } = props\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n    const [keys, setKeys] = useState(\"\")\n\n    useEffect(\n        () =>\n            service?.subscribe(COMMAND_RECEIVE, (pkt: Packet) => {\n                const [rest] = pkt.jdunpack<\n                    [[number, HidKeyboardModifiers, HidKeyboardAction][]]\n                >(HidKeyboardCmdPack.Key)\n                setKeys(\n                    rest\n                        ?.map(([selector, modifiers]) =>\n                            renderKeyboardKey(selector, modifiers, true)\n                        )\n                        .join(\", \") || \"\"\n                )\n            }),\n        [service]\n    )\n\n    const handleKeyChange = (\n        newSelector: number,\n        newModifiers: HidKeyboardModifiers\n    ) => {\n        setSelector(newSelector)\n        setModifiers(newModifiers)\n    }\n\n    const handleClick = useCallback(async () => {\n        const unpacked: [[number, HidKeyboardModifiers, HidKeyboardAction][]] =\n            [[[selector, modifiers, HidKeyboardAction.Press]]]\n        const data = jdpack(\"r: u16 u8 u8\", unpacked)\n        await service.sendCmdAsync(HidKeyboardCmd.Key, data)\n    }, [selector, modifiers, service])\n\n    const disabled = !selector && !modifiers\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <pre>{keys || \"HID keyboard waiting...\"}</pre>\n            </Grid>\n            {expanded && (\n                <Grid item xs={12}>\n                    <Suspense>\n                        <KeyboardKeyInput\n                            selector={selector}\n                            modifiers={modifiers}\n                            onChange={handleKeyChange}\n                        />\n                    </Suspense>\n                </Grid>\n            )}\n            {expanded && (\n                <Grid item xs={12}>\n                    <CmdButton\n                        variant=\"outlined\"\n                        title=\"send keys\"\n                        disabled={disabled}\n                        onClick={handleClick}\n                        icon={<KeyboardIcon />}\n                    >\n                        Send keys\n                    </CmdButton>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { useEffect, useRef } from \"react\"\n\nexport default function useMounted(): () => boolean {\n    const mounted = useRef(false)\n    useEffect(() => {\n        mounted.current = true\n        return () => {\n            mounted.current = false\n        }\n    }, [])\n    return () => mounted.current\n}\n"],"names":["PREFIX","classes","ack","error","Root","styled","color","fontWeight","theme","backgroundColor","ACK_RESET_DELAY","ERROR_RESET_DELAY","others","bus","useBus","setError","useSnackbar","useState","useAnalytics","mounted","useMounted","_disabled","disabled","run","trackEvent","setAck","setWorking","onClick","ackResetDelay","setAppError","handleClick","ev","statusIcon","modeClassName","elClassName","clsx","useEffect","autoRun","KeyboardKeyInput","lazy","HidKeyboardModifiers","service","pkt","HidKeyboardCmdPack","setKeys","renderKeyboardKey","handleKeyChange","setSelector","setModifiers","useCallback","unpacked","HidKeyboardAction","data","jdpack","HidKeyboardCmd","keys","expanded","useRef"],"sourceRoot":""}