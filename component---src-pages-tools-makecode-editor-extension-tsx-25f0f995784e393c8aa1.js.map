{"version":3,"file":"component---src-pages-tools-makecode-editor-extension-tsx-25f0f995784e393c8aa1.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Delete.js","webpack://jacdac-docs/./src/components/AddServiceIconButton.tsx","webpack://jacdac-docs/./src/components/hooks/useRegister.ts","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/jacdac/useDeviceProductIdentifier.ts","webpack://jacdac-docs/./src/jacdac/useDeviceSpecification.ts","webpack://jacdac-docs/./src/jacdac/useRegisterValue.ts","webpack://jacdac-docs/./src/components/hooks/useClient.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeEditorExtensionContext.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeRoleEditorExtension.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeAddExtensionBox.tsx","webpack://jacdac-docs/./src/pages/tools/makecode-editor-extension.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import React, { useMemo, useState } from \"react\"\nimport { Menu, MenuItem, Typography } from \"@mui/material\"\nimport {\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../../jacdac-ts/src/jdom/spec\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@mui/icons-material/Add\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport { useId } from \"react\"\nimport { SRV_DEVICE_SCRIPT_MANAGER } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function AddServiceIconButton(props: {\n    onAdd: (service: jdspec.ServiceSpec) => void\n    serviceFilter?: (service: jdspec.ServiceSpec) => boolean\n    serviceSorter?: (\n        left: jdspec.ServiceSpec,\n        right: jdspec.ServiceSpec\n    ) => number\n    error?: string\n    children?: JSX.Element | JSX.Element[]\n}) {\n    const { error, onAdd, children, serviceFilter, serviceSorter } = props\n    const [servicesAnchorEl, setServicesAnchorEl] =\n        useState<null | HTMLElement>(null)\n    const servicesMenuId = useId()\n    const services = useMemo(() => {\n        let res = serviceSpecifications()\n            .filter(\n                srv =>\n                    srv.classIdentifier === SRV_DEVICE_SCRIPT_MANAGER ||\n                    !isInfrastructure(srv)\n            )\n            .filter(srv => !serviceFilter || serviceFilter(srv))\n        if (serviceSorter) res = res.sort(serviceSorter)\n        return res\n    }, [serviceFilter])\n\n    const handleServiceAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setServicesAnchorEl(event.currentTarget)\n    }\n    const handleServiceAddClose = (id: number) => () => {\n        setServicesAnchorEl(null)\n        if (id !== undefined) {\n            const srv = serviceSpecificationFromClassIdentifier(id)\n            onAdd(srv)\n        }\n    }\n\n    return (\n        <>\n            <IconButtonWithTooltip\n                title=\"Add a service\"\n                aria-controls={servicesMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleServiceAddClick}\n            >\n                {children || <AddIcon />}\n            </IconButtonWithTooltip>\n            <Menu\n                id={servicesMenuId}\n                anchorEl={servicesAnchorEl}\n                keepMounted\n                open={Boolean(servicesAnchorEl)}\n                onClose={handleServiceAddClose(undefined)}\n            >\n                {services.map(srv => (\n                    <MenuItem\n                        key={srv.classIdentifier}\n                        value={srv.classIdentifier.toString(16)}\n                        onClick={handleServiceAddClose(srv.classIdentifier)}\n                    >\n                        {srv.name}\n                    </MenuItem>\n                ))}\n            </Menu>\n            <Typography\n                variant=\"caption\"\n                color={error ? \"error\" : \"inherit\"}\n                component=\"div\"\n            >\n                {error || \"Select one or more services.\"}\n            </Typography>\n        </>\n    )\n}\n","import { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useRegister(service: JDService, identifier: number) {\n    return service?.register(identifier)\n}\n","import { BoxProps, Paper } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function PaperBox(\n    props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps\n) {\n    const { children, padding = 1, elevation = 1, bgcolor, ...others } = props\n    return (\n        <Paper\n            sx={{ mb: 1, bgcolor, p: padding, ...others }}\n            square\n            elevation={elevation}\n        >\n            {children}\n        </Paper>\n    )\n}\n","import { ControlReg } from \"../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport useRegister from \"../components/hooks/useRegister\"\nimport { useRegisterUnpackedValue } from \"./useRegisterValue\"\n\nexport default function useDeviceProductIdentifier(device: JDDevice) {\n    const reg = useRegister(device?.service(0), ControlReg.ProductIdentifier)\n    const [id] = useRegisterUnpackedValue<[number]>(reg)\n    return id\n}\n","import { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport useDeviceProductIdentifier from \"./useDeviceProductIdentifier\"\nimport useChange from \"./useChange\"\nimport useDeviceCatalog from \"../components/devices/useDeviceCatalog\"\n\nexport default function useDeviceSpecification(device: JDDevice) {\n    const id = useDeviceProductIdentifier(device)\n    return useDeviceSpecificationFromProductIdentifier(id)\n}\n\nexport function useDeviceSpecificationFromProductIdentifier(id: number) {\n    const deviceCatalog = useDeviceCatalog()\n    const specification = useChange(\n        deviceCatalog,\n        _ => _.specificationFromProductIdentifier(id),\n        [id]\n    )\n    return specification\n}\n\nexport function useDeviceSpecificationFromIdentifier(id: string) {\n    const deviceCatalog = useDeviceCatalog()\n    const specification = useChange(\n        deviceCatalog,\n        _ => _.specificationFromIdentifier(id),\n        [id]\n    )\n    return specification\n}\n","import { humanify } from \"../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    BaseReg,\n    DeviceScriptManagerReg,\n    REPORT_UPDATE,\n    SRV_DEVICE_SCRIPT_MANAGER,\n    SystemStatusCodes,\n} from \"../../jacdac-ts/src/jdom/constants\"\nimport { PackedValues } from \"../../jacdac-ts/src/jdom/pack\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport { ellipse } from \"../../jacdac-ts/src/jdom/utils\"\nimport useAnalytics, { EventProperties } from \"../components/hooks/useAnalytics\"\nimport useEventRaised from \"./useEventRaised\"\nexport interface RegisterOptions {\n    // Indicates if the HTML element is visible in view. If not, updates may be slowed or stopped.\n    visible?: boolean\n}\n\nfunction readRegisterValue<T>(\n    register: JDRegister,\n    reader: (reg: JDRegister) => T,\n    defaultValue: T,\n    trackError: (error: Error, properties?: EventProperties) => void\n): T {\n    try {\n        const value = reader(register)\n        return value\n    } catch (e) {\n        trackError(e, {\n            dev: register?.service?.device?.anonymizedDeviceId,\n            srv: register?.service?.name,\n            reg: register?.name,\n        })\n        return defaultValue\n    }\n}\n\nexport interface HumanRegisterOptions extends RegisterOptions {\n    maxLength?: number\n}\n\nfunction resolveRenderer(srv: number, reg: number) {\n    if (reg === BaseReg.StatusCode)\n        return (reg: JDRegister) => {\n            const values = reg?.unpackedValue || []\n            const [code, vendorCode] = values as [number, number]\n            if (code === undefined) return \"?\"\n            let r = `${humanify(\n                SystemStatusCodes[code] || \"?\"\n            )?.toLowerCase()} (0x${code.toString(16)})`\n            if (vendorCode) {\n                r += `, vendor: 0x${code.toString(16)}`\n            }\n            return r\n        }\n\n    if (\n        srv === SRV_DEVICE_SCRIPT_MANAGER &&\n        reg === DeviceScriptManagerReg.RuntimeVersion\n    ) {\n        return (reg: JDRegister) => {\n            const values = reg?.unpackedValue || []\n            const [patch, minor, major] = values as [number, number, number]\n            if (patch === undefined) return \"?\"\n            return `${major}.${minor}.${patch}`\n        }\n    }\n\n    return undefined\n}\n\nexport function useRegisterHumanValue(\n    register: JDRegister,\n    options?: HumanRegisterOptions\n): string {\n    const { visible, maxLength } = options || { visible: true }\n    const { trackError } = useAnalytics()\n    const renderer = register\n        ? resolveRenderer(register.service.serviceClass, register.code)\n        : undefined\n\n    return useEventRaised(\n        REPORT_UPDATE,\n        visible ? register : undefined,\n        _ =>\n            readRegisterValue(\n                _,\n                __ =>\n                    renderer\n                        ? renderer(__)\n                        : ellipse(__?.humanValue, maxLength),\n                \"???\",\n                trackError\n            ),\n        [visible, maxLength]\n    )\n}\n\nexport function useRegisterUnpackedValue<T extends PackedValues>(\n    register: JDRegister,\n    options?: RegisterOptions\n): T {\n    const { visible } = options || { visible: true }\n    const { trackError } = useAnalytics()\n\n    return useEventRaised(\n        REPORT_UPDATE,\n        visible ? register : undefined,\n        _ =>\n            readRegisterValue<T>(\n                _,\n                __ => (__?.unpackedValue || []) as T,\n                [] as T,\n                trackError\n            ),\n        [visible]\n    )\n}\n\nexport function useRegisterBoolValue(\n    register: JDRegister,\n    options?: RegisterOptions\n): boolean {\n    const { visible } = options || { visible: true }\n    return useEventRaised(\n        REPORT_UPDATE,\n        visible ? register : undefined,\n        _ => _?.boolValue,\n        [visible]\n    )\n}\n","import { DependencyList, useEffect, useMemo } from \"react\"\nimport { JDClient } from \"../../../jacdac-ts/src/jdom/client\"\n\nexport default function useClient<TClient extends JDClient>(\n    factory: () => TClient,\n    deps?: DependencyList\n) {\n    const client = useMemo(factory, deps || [])\n    useEffect(() => () => client?.unmount(), [client])\n    return client\n}\n","import React, {\n    createContext,\n    ReactNode,\n    useContext,\n    useEffect,\n    useState,\n} from \"react\"\nimport { camelize } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport { JDClient } from \"../../../jacdac-ts/src/jdom/client\"\nimport { CHANGE, CONNECT } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { inIFrame } from \"../../../jacdac-ts/src/jdom/iframeclient\"\nimport { JSONTryParse } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useBus from \"../../jacdac/useBus\"\nimport useChange from \"../../jacdac/useChange\"\nimport { useDeviceSpecificationFromIdentifier } from \"../../jacdac/useDeviceSpecification\"\nimport useClient from \"../hooks/useClient\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport { resolveMakecodeServiceFromClassIdentifier } from \"./services\"\n\nexport const READ = \"read\"\nexport const MESSAGE_PACKET = \"messagepacket\"\nconst HIDDEN = \"hidden\"\nconst SHOWN = \"shown\"\n\nexport interface ReadResponse {\n    code?: string\n    json?: string\n    jres?: string\n}\n\nexport class MakeCodeEditorExtensionClient extends JDClient {\n    private readonly pendingCommands: {\n        [key: string]: {\n            action: string\n            resolve: (resp: any) => void\n            reject: (e: any) => void\n        }\n    } = {}\n    private readonly extensionId: string = inIFrame()\n        ? window.location.hash.substr(1)\n        : undefined\n    private _target: { id: string } = { id: \"microbit\" } // full apptarget\n    private _connected = false\n    private _visible = false\n\n    constructor() {\n        super()\n        this.handleMessage = this.handleMessage.bind(this)\n        if (typeof self !== \"undefined\") {\n            self.addEventListener(\"message\", this.handleMessage, false)\n            this.mount(() =>\n                self.removeEventListener(\"message\", this.handleMessage)\n            )\n        }\n        // always refresh on load\n        this.on(SHOWN, () => this.refresh())\n        // notify parent that we're ready\n        this.init()\n    }\n\n    get target() {\n        return this._target\n    }\n\n    get connected() {\n        return this._connected\n    }\n\n    get visible() {\n        return this._visible\n    }\n\n    private setVisible(vis: boolean) {\n        if (this._visible !== vis) {\n            this._visible = vis\n            this.emit(CHANGE)\n        }\n    }\n\n    private nextRequestId = 1\n    private mkRequest(\n        resolve: (resp: any) => void,\n        reject: (e: any) => void,\n        action: string,\n        body?: any\n    ): any {\n        const id = \"jd_\" + this.nextRequestId++\n        this.pendingCommands[id] = { action, resolve, reject }\n        return {\n            type: \"pxtpkgext\",\n            action,\n            extId: this.extensionId,\n            response: true,\n            id,\n            body,\n        }\n    }\n\n    private sendRequest<T>(action: string, body?: any): Promise<T> {\n        this.log(`send ${action}`)\n        if (!this.extensionId) return Promise.resolve(undefined)\n\n        return new Promise((resolve, reject) => {\n            const msg = this.mkRequest(resolve, reject, action, body)\n            window.parent.postMessage(msg, \"*\")\n        })\n    }\n\n    private handleMessage(ev: any) {\n        const msg = ev.data\n        if (msg?.type !== \"pxtpkgext\") return\n        if (!msg.id) {\n            switch (msg.event) {\n                case \"extinit\":\n                    this.log(\"init\")\n                    this._target = msg.target\n                    this._connected = true\n                    this.emit(CONNECT)\n                    this.emit(CHANGE)\n                    break\n                case \"extloaded\":\n                    this.log(`loaded`)\n                    break\n                case \"extshown\":\n                    this.setVisible(true)\n                    this.emit(SHOWN)\n                    this.emit(CHANGE)\n                    break\n                case \"exthidden\":\n                    this.setVisible(false)\n                    this.emit(HIDDEN)\n                    this.emit(CHANGE)\n                    break\n                case \"extdatastream\":\n                    this.emit(\"datastream\", true)\n                    break\n                case \"extconsole\":\n                    this.emit(\"console\", msg.body)\n                    break\n                case \"extmessagepacket\":\n                    this.emit(MESSAGE_PACKET, msg.body)\n                    break\n                default:\n                    console.debug(\"Unhandled event\", msg)\n            }\n        } else {\n            const { action, resolve, reject } =\n                this.pendingCommands[msg.id] || {}\n            delete this.pendingCommands[msg.id]\n\n            if (msg.success && resolve) resolve(msg.resp)\n            else if (!msg.success && reject) reject(msg.resp)\n            // raise event as well\n            switch (action) {\n                case \"extinit\":\n                    this._target = msg.target\n                    this._connected = true\n                    this.emit(CONNECT)\n                    this.emit(CHANGE)\n                    break\n                case \"extusercode\":\n                    // Loaded, set the target\n                    this.emit(\"readuser\", msg.resp)\n                    this.emit(CHANGE)\n                    break\n                case \"extreadcode\":\n                    // Loaded, set the target\n                    this.emit(READ, msg.resp)\n                    this.emit(CHANGE)\n                    break\n                case \"extwritecode\":\n                    this.emit(\"written\", undefined)\n                    break\n            }\n        }\n    }\n\n    private async init() {\n        this.log(`initializing`)\n        await this.sendRequest<void>(\"extinit\")\n        this.log(`connected`)\n        await this.refresh()\n    }\n\n    private async refresh() {\n        this.log(`refresh`)\n        await this.read()\n    }\n\n    async read(): Promise<ReadResponse> {\n        if (!this.extensionId) {\n            const r: ReadResponse = {}\n            this.emit(READ, r)\n            return r\n        } else {\n            const resp: ReadResponse = await this.sendRequest(\"extreadcode\")\n            return resp\n        }\n    }\n\n    async readUser() {\n        await this.sendRequest(\"extusercode\")\n    }\n\n    async write(\n        code: string,\n        json?: string,\n        jres?: string,\n        dependencies?: Record<string, string>\n    ): Promise<void> {\n        if (!this.extensionId) {\n            // Write to local storage instead\n            this.emit(\"written\", undefined)\n        } else {\n            await this.sendRequest<void>(\"extwritecode\", {\n                code: code || undefined,\n                json: json || undefined,\n                jres: jres || undefined,\n                dependencies,\n            })\n        }\n    }\n\n    async queryPermission() {\n        await this.sendRequest(\"extquerypermission\")\n    }\n\n    async requestPermission(console: boolean) {\n        await this.sendRequest(\"extrequestpermission\", {\n            console,\n        })\n    }\n\n    async dataStreamConsole(console: boolean) {\n        await this.sendRequest(\"extdatastream\", {\n            console,\n        })\n    }\n\n    async dataStreamMessages(messages: boolean) {\n        await this.sendRequest(\"extdatastream\", {\n            messages,\n        })\n    }\n}\n\nexport interface ClientRole {\n    name: string\n    service: number\n}\n\nexport interface Configuration {\n    roles: ClientRole[]\n    device?: string\n}\n\nexport interface MakeCodeEditorExtensionContextProps {\n    target: { id: string }\n    connected: boolean\n    configuration: Configuration\n    setConfiguration: (config: Configuration) => void\n    device?: jdspec.DeviceSpec\n}\n\nexport const MakeCodeEditorExtensionContext =\n    createContext<MakeCodeEditorExtensionContextProps>({\n        target: { id: \"microbit\" },\n        connected: false,\n        configuration: undefined,\n        setConfiguration: () => {},\n        device: undefined,\n    })\nMakeCodeEditorExtensionContext.displayName = \"makecode\"\n\nfunction toTypescript(config: Configuration) {\n    const ns = \"myModules\"\n    return `// auto-generated, do not edit.\nnamespace ${ns} {\n${config.roles\n    .map(\n        role => `\n    //% fixedInstance whenUsed block=\"${role.name}\"\n    export const ${camelize(role.name)} = new ${\n            resolveMakecodeServiceFromClassIdentifier(role.service).client.qName\n        }(\"${camelize(role.name)}\");\n`\n    )\n    .join(\"\")}\n}\n    `\n}\n\nfunction toDependencies(\n    target: string,\n    config: Configuration,\n    device: jdspec.DeviceSpec\n) {\n    const r: Record<string, string> = {}\n    config?.roles.forEach(role => {\n        const mk = resolveMakecodeServiceFromClassIdentifier(role.service)\n        r[mk.client.name] = `github:${mk.client.repo}`\n    })\n    console.log({ target, config, device })\n    device?.makeCodeRepo\n        ?.filter(r => r.target === target)\n        .forEach(repo => {\n            r[repo.name] = `github:${repo.slug}`\n        })\n    return r\n}\n\nfunction toJSON(config: Configuration) {\n    return config && JSON.stringify(config, null, 4)\n}\n\nexport function MakeCodeEditorExtensionProvider(props: {\n    children: ReactNode\n}) {\n    const { children } = props\n    const bus = useBus()\n    useEffectAsync(() => bus.stop(), [])\n    const client = useClient(() => new MakeCodeEditorExtensionClient(), [])\n    const target = useChange(client, _ => _?.target)\n    const connected = useChange(client, c => c?.connected)\n    const [configuration, setConfiguration] = useState<Configuration>({\n        roles: [],\n    } as Configuration)\n    const device = useDeviceSpecificationFromIdentifier(configuration.device)\n    useEffect(\n        () =>\n            client?.subscribe(READ, (resp: ReadResponse) => {\n                console.log(`mkcd: read received`)\n                const cfg = JSONTryParse<Configuration>(resp.json)\n                console.log({ resp, cfg })\n                if (cfg) setConfiguration(cfg)\n            }),\n        [client]\n    )\n\n    useEffectAsync(async () => {\n        const ts = toTypescript(configuration)\n        const json = toJSON(configuration)\n        const deps = toDependencies(target?.id, configuration, device)\n        console.log(`mkcd: saving...`, { configuration, ts, json, deps })\n        await client.write(ts, json, undefined, deps)\n    }, [client, target, configuration, device])\n\n    return (\n        <MakeCodeEditorExtensionContext.Provider\n            value={{\n                target,\n                connected,\n                configuration,\n                setConfiguration,\n                device,\n            }}\n        >\n            {children}\n        </MakeCodeEditorExtensionContext.Provider>\n    )\n}\n\nexport default function useMakeCodeEditorExtension() {\n    const props = useContext<MakeCodeEditorExtensionContextProps>(\n        MakeCodeEditorExtensionContext\n    )\n    return props\n}\n","import { Grid, TextField, Typography } from \"@mui/material\"\nimport React, { ChangeEvent, useCallback, useMemo } from \"react\"\nimport { clone, uniqueName } from \"../../../jacdac-ts/src/jdom/utils\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport { serviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\"\nimport AddServiceIconButton from \"../AddServiceIconButton\"\nimport ServiceSpecificationSelect from \"../specification/ServiceSpecificationSelect\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useMakeCodeEditorExtensionClient, {\n    ClientRole,\n    Configuration,\n} from \"./MakeCodeEditorExtensionContext\"\nimport { useId } from \"react\"\nimport { resolveMakecodeService } from \"./services\"\n\nfunction escapeName(name: string) {\n    // TODO: makecode component escape name\n    return name\n}\n\nfunction ClientRoleRow(props: {\n    config: Configuration\n    component: ClientRole\n    onUpdate: () => void\n}) {\n    const { component, onUpdate, config } = props\n    const { name, service } = component\n    const { nameError, serviceError } = useMemo(\n        () => validateClientRole(config, component),\n        [config, component]\n    )\n    const textId = useId()\n    const handleComponentNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        component.name = escapeName(ev.target.value)\n        onUpdate()\n    }\n    const handleSetService = (serviceClass: number) => {\n        component.service = serviceClass\n        onUpdate()\n    }\n    const handleComponentDelete = () => {\n        config.roles.splice(config.roles.indexOf(component), 1)\n        onUpdate()\n    }\n    return (\n        <Grid item xs={12}>\n            <Grid container spacing={2}>\n                <Grid item xs={4} md={6}>\n                    <TextField\n                        id={textId}\n                        fullWidth={true}\n                        error={!!nameError}\n                        variant=\"outlined\"\n                        label=\"role name\"\n                        helperText={nameError}\n                        value={name}\n                        size=\"small\"\n                        onChange={handleComponentNameChange}\n                    />\n                </Grid>\n                <Grid item xs={4} md={4}>\n                    <ServiceSpecificationSelect\n                        variant=\"outlined\"\n                        label=\"role service\"\n                        serviceClass={service}\n                        setServiceClass={handleSetService}\n                        error={serviceError}\n                    />\n                </Grid>\n                <Grid item>\n                    <IconButtonWithTooltip\n                        title=\"Remove role\"\n                        onClick={handleComponentDelete}\n                    >\n                        <DeleteIcon />\n                    </IconButtonWithTooltip>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateClientRole(config: Configuration, role: ClientRole) {\n    const serviceError: string = undefined\n    const nameError: string = undefined\n    // TODO: properly validate client role\n    return { serviceError, nameError }\n}\n\n/**\n * To test locally, add ?localeditorextensions=1&debugextensions=1\n */\nexport default function MakeRoleCodeEditorExtension() {\n    const { target, configuration, setConfiguration } =\n        useMakeCodeEditorExtensionClient()\n\n    const hasMakeCodeService = useCallback(\n        (srv: jdspec.ServiceSpec) => {\n            const mkc = resolveMakecodeService(srv)\n            return (\n                mkc &&\n                target &&\n                (!mkc.client.targets ||\n                    mkc.client.targets.indexOf(target.id) > -1)\n            )\n        },\n        [target]\n    )\n    const update = () => {\n        setConfiguration(clone(configuration))\n    }\n    const handleAddService = (service: jdspec.ServiceSpec) => {\n        if (!configuration.roles) configuration.roles = []\n        const names = configuration.roles\n            .map(c => c.name)\n            .concat(serviceSpecifications().map(spec => spec.camelName))\n            .filter(n => !!n)\n        configuration.roles.push({\n            name: uniqueName(\n                names,\n                service.camelName || service.shortId,\n                \"\",\n                3\n            ),\n            service: service.classIdentifier,\n        })\n        update()\n    }\n\n    const makecodeServiceSorter = useCallback(\n        (l: jdspec.ServiceSpec, r: jdspec.ServiceSpec) => {\n            // favor makecode services supported by released hardware kits\n\n            return l.name.localeCompare(r.name)\n        },\n        []\n    )\n\n    return (\n        <Grid container direction=\"row\" spacing={2}>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Configure roles</Typography>\n                <Typography variant=\"caption\">\n                    The roles define which Jacdac services (sensor or actuators)\n                    are needed in your program. Use this dialog to define\n                    multiple roles using the same type of service, like multiple\n                    button roles. For each services, there is always one or two\n                    default roles (for example <code>button1</code> and{\" \"}\n                    <code>button2</code>) that is already defined.\n                </Typography>\n            </Grid>\n            {configuration.roles?.map((c, i) => (\n                <ClientRoleRow\n                    key={\"config\" + i}\n                    config={configuration}\n                    component={c}\n                    onUpdate={update}\n                />\n            ))}\n            <Grid item xs={12}>\n                <AddServiceIconButton\n                    serviceFilter={hasMakeCodeService}\n                    serviceSorter={makecodeServiceSorter}\n                    onAdd={handleAddService}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport useMakeCodeEditorExtension from \"./MakeCodeEditorExtensionContext\"\nimport DeviceSpecificationList from \"../specification/DeviceSpecificationList\"\n\nexport default function MakeCodeAddExtensionBox() {\n    const { configuration, setConfiguration, device, target } =\n        useMakeCodeEditorExtension()\n\n    const handleClick = (dev: jdspec.DeviceSpec) => {\n        setConfiguration({\n            ...configuration,\n            device: dev?.id,\n        })\n    }\n\n    return (\n        <>\n            <DeviceSpecificationList\n                makeCode={target?.id || \"microbit\"}\n                header={device ? `Current accessory` : `Select accessory`}\n                onDeviceClick={handleClick}\n                hideChips={true}\n                hideServices={true}\n                devices={device ? [device] : undefined}\n            />\n        </>\n    )\n}\n","import React, { useContext, useEffect } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { createTheme, responsiveFontSizes } from \"@mui/material\"\nimport ThemedLayout from \"../../components/ui/ThemedLayout\"\nimport MakeRoleCodeEditorExtension from \"../../components/makecode/MakeCodeRoleEditorExtension\"\nimport PaperBox from \"../../components/ui/PaperBox\"\nimport DarkModeContext from \"../../components/ui/DarkModeContext\"\nimport { MakeCodeEditorExtensionProvider } from \"../../components/makecode/MakeCodeEditorExtensionContext\"\nimport MakeCodeAddExtensionBox from \"../../components/makecode/MakeCodeAddExtensionBox\"\nimport { Flags } from \"../../../jacdac-ts/src/jdom/flags\"\n\nconst PREFIX = \"makecode-editor-extension\"\n\nconst classes = {\n    content: `${PREFIX}content`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.content}`]: {\n        display: \"flex\",\n        minHeight: \"100vh\",\n        minWidth: \"10rem\",\n        flexDirection: \"column\",\n        padding: theme.spacing(3),\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        flexGrow: 1,\n    },\n}))\n\nexport default function MakeCodeEditorExtensionPage() {\n    const { toggleDarkMode, darkModeMounted } = useContext(DarkModeContext)\n    const rawTheme = createTheme({\n        palette: {\n            primary: {\n                main: \"#2e7d32\",\n            },\n            secondary: {\n                main: \"#ffc400\",\n            },\n            background: {\n                default: \"#fff\",\n            },\n            contrastThreshold: 5.1,\n            mode: \"light\",\n        },\n    })\n\n    const theme = responsiveFontSizes(rawTheme)\n    useEffect(() => {\n        if (darkModeMounted) toggleDarkMode(\"light\")\n    }, [darkModeMounted])\n    return (\n        <Root>\n            <ThemedLayout theme={theme}>\n                <MakeCodeEditorExtensionProvider>\n                    <div className={classes.content}>\n                        <PaperBox>\n                            <MakeRoleCodeEditorExtension />\n                        </PaperBox>\n                        {Flags.diagnostics && (\n                            <PaperBox>\n                                <MakeCodeAddExtensionBox />\n                            </PaperBox>\n                        )}\n                    </div>\n                </MakeCodeEditorExtensionProvider>\n            </ThemedLayout>\n        </Root>\n    )\n}\n"],"names":["useState","servicesMenuId","useId","services","useMemo","res","serviceSpecifications","srv","isInfrastructure","serviceFilter","handleServiceAddClick","event","setServicesAnchorEl","handleServiceAddClose","id","serviceSpecificationFromClassIdentifier","onAdd","children","Boolean","error","service","padding","elevation","others","mb","p","reg","useRegister","device","ControlReg","useRegisterUnpackedValue","useDeviceProductIdentifier","useDeviceSpecificationFromProductIdentifier","deviceCatalog","useDeviceCatalog","specification","useChange","_","value","reader","trackError","dev","register","BaseReg","values","code","r","humanify","SystemStatusCodes","DeviceScriptManagerReg","patch","major","options","visible","useAnalytics","renderer","resolveRenderer","useEventRaised","readRegisterValue","__","ellipse","client","deps","useEffect","READ","MESSAGE_PACKET","HIDDEN","SHOWN","MakeCodeEditorExtensionClient","pendingCommands","extensionId","inIFrame","window","undefined","_target","_connected","_visible","self","type","extId","response","Promise","msg","ev","console","resolve","reject","resp","json","jres","MakeCodeEditorExtensionContext","createContext","target","connected","configuration","setConfiguration","ns","config","role","camelize","resolveMakecodeServiceFromClassIdentifier","mk","repo","JSON","bus","useBus","useEffectAsync","useClient","c","roles","useDeviceSpecificationFromIdentifier","cfg","JSONTryParse","ts","toTypescript","toJSON","toDependencies","props","useContext","validateClientRole","textId","handleComponentNameChange","component","escapeName","onUpdate","handleSetService","serviceClass","handleComponentDelete","serviceError","nameError","useMakeCodeEditorExtensionClient","hasMakeCodeService","useCallback","mkc","resolveMakecodeService","update","clone","handleAddService","names","spec","n","name","uniqueName","makecodeServiceSorter","l","useMakeCodeEditorExtension","handleClick","PREFIX","classes","content","Root","theme","display","minHeight","minWidth","flexDirection","transition","easing","duration","leavingScreen","flexGrow","darkModeMounted","rawTheme","createTheme","palette","primary","main","secondary","background","default","contrastThreshold","mode","responsiveFontSizes","toggleDarkMode","Flags"],"sourceRoot":""}