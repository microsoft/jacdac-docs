{"version":3,"file":"4a1ae24c5787588155db61b49605b5d07aa26ddb-e14dbd476277939a6751.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BCAf,GAAMA,CAAAA,KAAiE,CAAG,CACtE,kCAAY,CACR,CAACC,wEAAD,EAAqC,IAF7C,+BACgB,CAD0D,CAA1E,CAMA,GAAMC,CAAAA,UAAwD,CAAG,CAC7D,CAACD,0DAAD,EAD6D,OAE7D,CAACA,kEAAD,EAF6D,OAG7D,CAACA,gEAAD,EAHJ,MAAiE,CAAjE,CAMe,+BAIb,+CACE,GAAM,UAAN,MAAoBE,IAApB,kEACA,GAAM,eAAN,QACA,GAAM,kBAAuBC,gCAAa,SAA1C,IAA0C,CAA1C,CACA,GACI,CAACC,IAAI,GAAKJ,oDAATI,EACGA,IAAI,GAAKJ,0DADZI,EAEGA,IAAI,GAAKJ,kEAFb,GAGAK,UAAU,GAJd,EAMI,YACJ,GAAMC,CAAAA,QAAQ,CAAGL,UAAU,CAAVA,IAAU,CAAVA,EAAjB,UACA,mBACI,0CAAO,QAAQ,CAAf,UACK,CAAC,CAAD,mBACG,+CAAY,OAAO,CAAnB,WACKM,2BAAQ,CACL,2BAAK,CAAL,YAAK,CAAL,wMACIP,wCAAiB,CADrB,IACqB,CADrB,EAJhB,GAGqB,CADb,CAFR,CAUK,CAAC,CAAD,yBACG,+CAAY,OAAO,CAAnB,8BACqBK,UAAU,CAAVA,QAAAA,CAbjC,EAaiCA,CADrB,CAXR,CADJ,CAkBH;;;;;;;;;;;;;;;;;;ACtDc,gCAAoD,CAC/D,MAAOG,CAAAA,iCAAc,wCAAuBC,CAAC,EAAIA,CAAJ,OAAIA,EAAAA,CAAJ,SAAIA,CAAJ,MAAIA,CAAAA,CAAC,CAAlD,IAAqB,CAArB,CACH;;;;ACID,GAAMC,CAAAA,gBAAgB,cAAGC,cAAI,CAAC,IAAM,+IAAP,CAA7B,CAEA,GAAMC,CAAAA,eAAe,CAArB,GAEA,GAAMC,CAAAA,UAAU,CAAGC,0BAAM,CAANA,qBAAM,CAANA,CAAe,CAC9BC,aAAa,CADjB,MAAkC,CAAfD,CAAnB,CAIe,2BAAoD,CAC/D,GAAM,UAAN,MAEA,GAAM,mDAAkDE,kBAAQ,CAAhE,KAAgE,CAAhE,CACA,GAAMC,CAAAA,WAAW,CAAGC,uCAApB,GACA,GAAMC,CAAAA,IAAI,CAAGC,cAAc,CAA3B,OAA2B,CAA3B,CACA,GAAMC,CAAAA,UAAU,CAAG,IAAMC,uBAAuB,CAAhD,IAAgD,CAAhD,CACA,GAAMC,CAAAA,WAAW,CAAG,IAAMD,uBAAuB,CAAjD,KAAiD,CAAjD,CAEA,GAAME,CAAAA,iBAAiB,CAAGC,4BAAS,aAE/BhB,CAAC,EAAIA,CAAJ,OAAIA,EAAAA,CAAJ,SAAIA,CAAJ,MAAIA,CAAAA,CAAC,CAADA,iBAAAA,CAF0B,OAE1BA,CAF0B,CAG/B,CAHJ,OAGI,CAH+B,CAAnC,CAKA;AACA,GAAI,CAAJ,kBAAwB,YAExB,GAAMiB,CAAAA,IAAI,CAAGC,6BAAU,CAAVA,IAAU,CAAVA,CACPC,gCAAa,CADND,IACM,CADNA,CAEPE,yBAAO,CAACC,sCAAc,CAAf,IAAe,CAAf,CAAPD,eAAO,CAAPA,EAFN,MAGA,mBACI,qDACI,gCACI,KAAK,CAAEV,IAAI,EADf,0BAEI,IAAI,CAFR,QAGI,OAAO,CAHX,YADJ,IACI,CADJ,CAQKY,oBAAoB,eACjB,8DACI,sCAAkB,OAAO,CAAzB,QAAoC,OAAO,CAX3D,WAWgB,EADJ,CATR,CADJ,CAgBH;;;;;;;;sFC1Cc,gDAKA,CACX,GAAM,kCAAN,MAA8C7B,IAA9C,kGACA,GAAM,eAAN,QACA,GAAM8B,CAAAA,YAAY,CAAGC,kCAAe,SAApC,IAAoC,CAApC,CACA,GAAMC,CAAAA,IAAI,CAAGC,uDAAoB,CAAjC,YAAiC,CAAjC,CACA,GAAMC,CAAAA,SAAuB,CAAG,CAC5BC,WAAW,CAAEC,8BAAW,CADI,YACJ,CADI,CAE5BC,KAAK,CAFT,UAAgC,CAAhC,CAIA,mBACI,0CAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,EAA4B,UAAU,CAAtC,UACKL,IAAI,eACD,0CAAM,IAAI,CAAV,mBACI,4CAAS,KAAK,CAAEI,8BAAW,CAA3B,YAA2B,CAA3B,eACI,oCAAU,QAAQ,CAAlB,mBACKE,uBAAa,MALlC,SAKkC,CADlB,CADJ,CADJ,CAFR,cAUI,0CAAM,IAAI,CAAV,KAAW,EAAE,CAAb,mBACI,iCAAa,OAAO,CAX5B,OAWQ,EADJ,CAVJ,CAaKR,YAAY,eACT,0CAAM,IAAI,CAAV,mBACI,+CACI,SAAS,CADb,oBAEI,OAAO,CAFX,UAGI,SAAS,CAHb,OAII,KAAK,CAAE,CAAES,KAAK,CAJlB,OAIW,CAJX,EAfZ,YAeY,CADJ,CAdR,CAyBKC,QAAQ,GAARA,SAAAA,EAAAA,aACG,0CAAM,IAAI,CAAV,mBACI,0CAAM,IAAI,CAAV,mBACI,0DACI,IAAI,CADR,QAEI,KAAK,CACDA,QAAQ,sBAHhB,qBAOI,OAAO,CAPX,6BASI,wCAtCxB,IAsCwB,CATJ,CADJ,CADJ,CA1BR,CADJ,CA6CH;;iEC9Dc,0CAEA,CACX,GAAM,qBAAN,MAAgCxC,IAAhC,4FACA,GAAM,eAAN,QACA,GAAMyC,CAAAA,UAAU,CAAGC,KAAK,CAALA,UAAAA,EAAoBC,mDAAgB,CAAvD,YAAuD,CAAvD,CACA,GAAM,2BAA0B7B,kBAAQ,CACpC,8BADJ,SAAwC,CAAxC,CAGA,GAAM8B,CAAAA,eAAe,cAAG,mDAAiB,OAAO,CAAxB,SAAxB,IAAwB,EAAxB,CACA,GAAMC,CAAAA,cAAc,CAAG,IAAMC,WAAW,CAACC,CAAC,EAAI,CAA9C,CAAwC,CAAxC,CACAC,mBAAS,CAAC,IAAM,CACZF,WAAW,CAAC,8BAAZA,SAAW,CAAXA,CADK,EAEN,YAFHE,UAEG,CAFM,CAATA,CAIA,mBACI,0CAAM,IAAI,CAAV,mBACI,6EAEI,QAAQ,CAFZ,SAGI,cAAc,CAJtB,cACI,GADJ,8BAOI,mFAAmC,QAAQ,CARnD,QAQQ,GAPJ,CADJ,CAWH;;;;AC7Bc,oDAG0B,CACrC,GAAM,qBAAoBlC,kBAA1B,GACA,GAAM,CACFmC,SAAS,CADP,EAEFC,IAAI,CAFF,KAGFC,UAAU,CAHR,wBAKFC,OAAO,EALX,GAOA,GAAMC,CAAAA,MAAM,CAAG,MAAK,GAAL,WAAK,OAAL,eAAK,CAAL,iBAAf,kBAEA,GAAMC,CAAAA,WAAW,CAAG,MAAgD,IAA/C,QAA+C,KAChEC,QAAQ,CAARA,KAAQ,CAARA,CADJ,EAIA,mBAAS,CAAC,IAAM,CACZ,GAAMC,CAAAA,IAAI,CAAGC,UAAH,OAAGA,EAAAA,UAAH,SAAGA,CAAH,MAAGA,CAAAA,UAAU,CAAvB,QAAiC;AACjC,GAAMC,CAAAA,YAAY,CAAG,CAAC,CAACC,MAAM,CAA7B,qBAEA,GAAI,uBAA2B,CAA/B,KAAsC,OAEtC,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,UAAuB,CAAvB,CACA,GAAMC,CAAAA,QAAQ,CAAG,qCAAjB,cAAiB,CAAjB,CAEA;AACAA,QAAQ,CAARA,OAAAA,CAAAA,IAAAA,EAEA,MAAO,IAAMA,QAAQ,CAArB,UAAaA,EAAb,CAZK,EAaN,sCAbH,MAaG,CAbM,CAAT,CAeA,aACH;;;;;;;;;;;;;;;;AChCc,yCAIZ,CACC,GAAM,8BAAN,MACA,GAAMC,CAAAA,WAAW,CAAGC,uCAAoB,CAAxC,MAAwC,CAAxC,CAEA,mBACI,+CACI,KAAK,CAAE,CAAEC,aAAa,CAD1B,CACW,CADX,CAEI,MAAM,CAAEC,UAAU,eAAI,iDAAc,MAAM,CAF9C,MAE0B,EAF1B,CAGI,MAAM,cACF,kDACI,MAAM,CADV,OAEI,QAAQ,CAFZ,KAGI,YAAY,CAHhB,KAII,SAAS,CAJb,UAKI,YAAY,CATxB,KAIQ,EAJR,CAYI,KAAK,cAAE,+CAAY,WAAW,CAAvB,MAAgC,MAAM,CAZjD,MAYW,EAZX,CAaI,SAAS,cACL,wCACKH,WAAW,eACR,+CAAY,OAAO,CAAnB,UAA8B,YAAY,CAA1C,MAjBpB,WAiBoB,CAFR,CAdR,EADJ,CAyBH;;ACpBD,GAAMI,CAAAA,gBAAgB,cAAGzD,cAAI,CAAC,IAAM,qGAAP,CAA7B,CACA,GAAM0D,CAAAA,qBAAqB,cAAG1D,cAAI,CAC9B,IAAM,qGADwB,CAAlC,CAIA,GAAM2D,CAAAA,eAAe,CAAG,mMAAxB,mCAAwB,CAAxB,CAUe,+BAIb,CACE,GAAM,6GAAN,MAYA,GAAM5C,CAAAA,IAAI,CAAG6C,gCAAa,CAA1B,MAA0B,CAA1B,CACA,GAAMC,CAAAA,QAAQ,CAAG/C,4BAAS,QAAShB,CAAC,EAChCA,CADgC,OAChCA,EAAAA,CADgC,SAChCA,CADgC,MAChCA,CAAAA,CAAC,CAADA,QAAAA,CAAY,CAAEgE,aAAa,CAA3BhE,IAAY,CAAZA,EAAAA,MAAAA,CACIiE,OAAO,EACHJ,eAAe,CAAfA,OAAAA,CAAwBI,OAAO,CAA/BJ,YAAAA,EAAAA,CAAAA,EACA,CAACI,OAAO,CADRJ,OAAAA,GAEC,gBAAkBK,aAAa,CAL5C,OAK4C,CAFhCL,CAFR7D,CADsB,CAA1B,CASA;AACA,GAAMmE,CAAAA,cAAc,CAAGC,gBAAvB,GACA,GAAMC,CAAAA,YAAY,CAAGC,uBAAuB,CAA5C,cAA4C,CAA5C,CACA,GAAMC,CAAAA,OAAO,CACTC,aAAa,EAAI,CAAjBA,YAAAA,EAAkC,CAAC,CAACH,YAAY,CADpD,eAGA,GAAMI,CAAAA,cAAc,CAAGC,qBAAW,CAC9B,iBACI,0CACI,GAAG,CADP,eAEI,SAAS,CAFb,MAGI,SAAS,CAHb,KAII,OAAO,CAJX,EAKI,cAAc,CALlB,SAMI,UAAU,CANd,WAOI,YAAY,CAPhB,iBASKX,QATL,OASKA,EAAAA,QATL,SASKA,CATL,MASKA,CAAAA,QAAQ,CAARA,GAAAA,CAAcE,OAAO,eAClB,gDACI,GAAG,CAAEA,OAAO,CADhB,OAEI,OAAO,CAFX,QAGI,QAAQ,CAHZ,SAII,OAAO,CAJX,QAKI,OAAO,CALX,QAMI,UAAU,CAlBI,UAYlB,EADHF,CATL,CAF0B,CAuB9B,CAACY,oCAAY,CAAb,QAAa,CAAb,iBAvBJ,UAuBI,CAvB8B,CAAlC,CA0BA,GAAI,CAAJ,WACI,mBACI,0CAAO,KAAK,CAAE,CAAEC,OAAO,CAAvB,QAAc,CAAd,CAAqC,OAAO,CAA5C,yBACI,mCAFR,IAEQ,CADJ,CADJ,CAMJ,mBACI,yCAAM,YAAN,SAAyB,4BAAzB,yBACI,+CACI,MAAM,CADV,OAEI,UAAU,CAFd,WAGI,SAAS,CAJjB,SACI,EADJ,cAMI,gDAAa,KAAK,CAAE,CAAEC,UAAU,CAAhC,CAAoB,CAApB,eACI,4DAAiB,MAAM,CAD3B,MACI,EADJ,cAEI,6CAAU,QAAQ,CAAlB,mBACI,2CAAuB,MAAM,CAHrC,MAGQ,EADJ,CAFJ,CAKKC,oBAAoB,eACjB,8DACI,sCAAkB,MAAM,CAPpC,MAOY,EADJ,CANR,cAUI,mCAjBZ,IAiBY,CAVJ,CANJ,CADJ,CAqBH;;;;;;;;;;;;;;;;;yBCjHc,mCAKb,CACE,GAAM,SAAN,MAAmBC,KAAnB,+HACA,GAAM,aAAiBC,iDAAU,CAAjC,6DAAiC,CAAjC,CACA,GAAMC,CAAAA,WAA4B,CAAGjE,sEAAS,QAE1C,IAAM,CACF,GAAMkE,CAAAA,gBAAgB,CAAGC,MAAM,CAANA,QAAAA,GAAAA,GAAAA,CAEhBC,GAAG,EAAI,CACR,MACIC,CAAAA,yFAAsB,CAAtBA,GAAsB,CAAtBA,GACCD,GAAG,CAAHA,eAAAA,EACDA,GAAG,CADFA,aAAAA,EAEDA,GAAG,CAFFA,iBAAAA,CAAAA,CAAAA,CAFL,CACIC,CADJ,CAHiBF,CAAAA,EAAAA,MAAAA,CAYb,OAAkBG,CAAC,CAZNH,CAAAA,CAAzB,CAAyBA,CAAzB,CAcA,GAAID,gBAAgB,CAAhBA,CAAAA,EAAwBK,UAAU,GAAKC,uEAA3C,CACI,MAAO,CAAEC,EAAE,CAAJ,GAAUC,EAAE,CAAZ,GAAkBC,EAAE,CAApB,GAA0BC,EAAE,CAA5B,EAAiCC,EAAE,CAD9C,CACW,CAAP,CADJ,IAEK,IAAIX,gBAAgB,EAApB,EACD,MAAO,CAAEO,EAAE,CAAJ,GAAUC,EAAE,CAAZ,GAAkBC,EAAE,CAApB,EAAyBC,EAAE,CAA3B,EAAgCC,EAAE,CADxC,CACM,CAAP,CADC,IAEA,IAAIX,gBAAgB,EAApB,EACD,MAAO,CAAEO,EAAE,CAAJ,GAAUC,EAAE,CAAZ,EAAiBC,EAAE,CAAnB,EAAwBC,EAAE,CAA1B,EAA+BC,EAAE,CADvC,CACM,CAAP,CADC,IAGD,OAAO,CACHJ,EAAE,CADC,EAEHC,EAAE,CAFC,EAGHC,EAAE,CAHC,EAIHC,EAAE,CAJC,EAKHC,EAAE,CALN,MAAO,CAAP,CAxBkC,EAgC1C,CAhC0C,UAgC1C,CAhC0C,CAiC1C,OACIC,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAATD,EAAAA,EACAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CADTD,EAAAA,EAEAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAFTD,EAAAA,EAGAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAHTD,EAAAA,EAIAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAJTD,EAAAA,EAKAA,CAAC,CAADA,EAAAA,EAAQC,CAAC,CAvCjB,EAA8C,CAA9C,CA0CA;AACA,mBACI,gIAAM,IAAI,CAAV,gCACI,kIAAiB,MAAM,CAAvB,QAFR,KAEQ,EADJ,CADJ,CAKH;;;;;;;;;;;;;AC3Dc,yDAEP,CACJ,GAAMC,CAAAA,GAAG,CAAGC,mEAAZ,GAEA;AACAxD,gDAAS,CAAC,IAAM,CACZ,GAAMyD,CAAAA,OAAO,CAAGF,GAAG,CAAHA,OAAAA,CAAY,CAA5B,YAA4B,CAAZA,CAAhB,CACA,GAAMG,CAAAA,GAAG,CACL,CAACD,OAAO,CAAR,QACAE,mHAAyC,CAF7C,YAE6C,CAF7C,CAGA,GAAMC,CAAAA,QAAQ,CAAGF,GAAG,EAAIG,4FAAkB,KAA1C,GAA0C,CAA1C,CACA,MAAO,IAAMN,GAAG,CAAHA,qBAAAA,CAAb,QAAaA,CAAb,CANK,EAON,CAPHvD,YAOG,CAPM,CAATA,CAQH;;;;;;;;;;;;;ACbc,yCAGb,CACE,GAAM8D,CAAAA,oBAAoB,CAAGC,uEAAW,SAAUC,yGAAV,CAAxC,CACA,GAAM,eAAiBC,4FAAwB,sBAA/C,OAA+C,CAA/C,CAIA,oBACH;;;;;;;;;;;;;ACXc,+BAAmD,CAC9D,GAAMV,CAAAA,GAAG,CAAGC,mEAAZ,GACA,GAAM,iBAAgB1F,+CAAQ,CAAoByF,GAAG,CAArD,WAA8B,CAA9B,CACAvD,gDAAS,CACL,IAAMuD,GAAG,CAAHA,SAAAA,CAAAA,yFAAAA,CAAmC,IAAMW,MAAM,CAACX,GAAG,CADpD,WACgD,CAA/CA,CADD,CAEL,CAFJvD,GAEI,CAFK,CAATA,CAIA,WACH;;;;;;;;;;;;;ACPc,uCAGb,CACE,GAAMmE,CAAAA,QAAQ,CAAGJ,uEAAW,SAAUC,qGAAV,CAA5B,CACA,GAAM,CAAC9G,IAAI,CAAL,EAAWC,UAAU,CAArB,GAA6B8G,4FAAwB,UAA3D,OAA2D,CAA3D,CAIA,MAAO,MAAP,UAAO,CAAP,CACH;;;;;;;;;;;;;AClBD;AACA;AACA;AACA;AACA;AACA,GAKe,oBAOb,uDACE,GAAM,0CAMFG,IAAI,CANF,IAAN,MAeA,GAAM,OAAWC,sDAAc,CAA/B,UAA+B,CAA/B,CAaA,GAAIC,CAAAA,SAAS,CAAGC,KAAK,GAAIC,WAAJ,OAAIA,EAAAA,WAAJ,SAAIA,CAAJ,MAAIA,CAAAA,WAAW,CAApBD,KAAK,CAALA,GAA+BE,IAA/BF,GAAAA,IAA+BE,EAAAA,IAA/BF,GAAAA,IAAAA,EAA+BE,CAA/BF,IAAAA,EAA+BE,CAA/BF,CAAAA,kBAAAA,CAA+BE,IAAI,CAAnCF,YAAAA,IAAAA,IAAAA,EAAAA,kBAAAA,GAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,CAA+BE,kBAAAA,CAA/C,KAAgBF,CAAhB,CACA,GAAI,CAAC,+BAAL,SAAK,CAAL,CACID,SAAS,aAATA,SAAAA,CACJ,GAAMI,CAAAA,eAAe,CACjB5D,WAAW,GACX6D,IADW,OACXA,EAAAA,IADW,SACXA,CADW,MACXA,CADW,YACXA,IAAI,CADO,yCACXA,UAAAA,CADA7D,WAAW,CAAXA,GAEA2D,IAFA3D,GAAAA,IAEA2D,EAAAA,IAFA3D,GAAAA,IAAAA,EAEA2D,CAFA3D,IAAAA,EAEA2D,CAFA3D,CAAAA,mBAAAA,CAEA2D,IAAI,CAFJ3D,YAAAA,IAAAA,IAAAA,EAAAA,mBAAAA,GAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,CAEA2D,mBAAAA,CAHJ,WACI3D,CADJ,CAIA,mBACI,+GACI,0DAAO,GAAG,CAAV,SADJ,SACI,CADJ,CAEK,CACG,CACItC,IAAI,CADR,cAEIoG,OAAO,CAHd,eACG,CADH,CAKG,CACIpG,IAAI,CADR,WAEIoG,OAAO,CAPd,KAKG,CALH,CASG,CACIpG,IAAI,CADR,WAEIoG,OAAO,CAXd,SASG,CATH,CAaG,CACIpG,IAAI,CADR,iBAEIoG,OAAO,CAfd,eAaG,CAbH,CAiBG,CACIpG,IAAI,CADR,UAEIoG,OAAO,CAnBd,SAiBG,CAjBH,CAqBG,CACIpG,IAAI,CADR,eAEIoG,OAAO,CAvBd,SAqBG,CArBH,CAyBG,CACIpG,IAAI,CADR,kBAEIoG,OAAO,CAAEH,IAAI,CAAJA,YAAAA,CA3BhB,MAyBG,CAzBH,CA6BG,CACIjG,IAAI,CADR,gBAEIoG,OAAO,CA/Bd,KA6BG,CA7BH,CAiCG,CACIpG,IAAI,CADR,sBAEIoG,OAAO,CAnCd,eAiCG,CAjCH,yHAuCW,UAAC,CAAD,OAAC,EAAD,WAAiB,CAAC,CAAlB,QAvCX,OAwCQ,WAAC,MAAD,OAAC,EAAD,yBACD,yDAAM,GAAG,CAAT,KAAiB,IAAI,CAArB,KAA6B,OAAO,CADnC,OACD,EADC,CA1Cb,CAEK,CAFL,cA6CI,yDACI,GAAG,CADP,cAEI,GAAG,CAFP,aAGI,IAAI,CAHR,+BAII,WAAW,CAjDnB,WA6CI,EA7CJ,cAmDI,yDACI,GAAG,CADP,iBAEI,GAAG,CAFP,aAGI,IAAI,CAHR,oCAII,WAAW,CAvDnB,WAmDI,EAnDJ,cAyDI,yDACI,GAAG,CADP,WAEI,IAAI,CAFR,WAGI,OAAO,CA7DnB,wEA0DQ,EAzDJ,CADJ,CAiEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHc,iCAA4D,CACvE,GAAM,eAAN,MACA,GAAMC,CAAAA,IAAI,CAAGC,6DAAuC,CAApD,YAAoD,CAApD,CACA,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAANA,MAAAA,CAAc,KAAI,GAAJ,UAAI,OAAJ,cAAI,CAAJ,QAAdA,EAAAA,EAAAA,MAAAA,CAAwCC,EAAE,EAAI,CAACA,EAAE,CAA/D,OAAcD,CAAd,CACA,GAAI,CAACD,KAAK,CAAV,OAAmB,mBAAO,mCAAP,IAAO,CAAP,CAEnB,mBACI,qDACI,8BADJ,OACI,CADJ,CAEKA,KAAK,CAALA,GAAAA,CAAUhF,CAAC,eACR,oCAAU,GAAG,CAAEA,CAAC,CAAhB,mBACI,8BACKA,CAAC,CADN,SAEKA,CAAC,CAADA,OAAAA,EAAAA,aAAa,yCAAM,KAAK,CAAX,QAAoB,IAAI,CAH9C,OAGsB,EAFlB,CADJ,cAKI,8BACKiF,MAAM,CAANA,IAAAA,CAAYjF,CAAC,CAAbiF,OAAAA,EAAAA,GAAAA,CAA2BC,EAAE,eAC1B,0BAAI,GAAG,CAAP,4BAEI,qCAASlF,CAAC,CAADA,OAAAA,CAAAA,EAAAA,EAAAA,QAAAA,CAbrC,EAaqCA,CAAT,CAFJ,CADHiF,CADL,CALJ,CADHD,CAFL,CADJ,CAqBH;;;;;;;;;;;;;;;;ACVD,uCAAkE,CAC9D,GAAM,eAAN,MACA,GAAMtB,CAAAA,OAAO,CAAGyB,6BAAU,CAAC,CAA3B,YAA2B,CAAD,CAA1B,CACA,mBACI,0CAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,GACKzB,OAAO,CAAPA,GAAAA,CAAYf,MAAM,eACf,wDACI,GAAG,CAAEA,MAAM,CADf,GAEI,MAAM,CAFV,OAGI,UAAU,CAHd,KAII,UAAU,CAP1B,IAGY,EADHe,CADL,CADJ,CAcJ,CAAe,oCAGZ,mBACC,GAAM,CAAEjC,OAAO,CAAT,kBAAN,MACA,GAAM,+BAAN,KACA,GAAM2D,CAAAA,OAAO,CAAG3E,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,CAAoB4E,GAAG,EAAIC,WAAW,EAAI,CAACD,GAAG,CAA9D,OAAgB5E,CAAhB,CACA,GAAM8E,CAAAA,SAAS,CAAGH,OAAO,CAAPA,MAAAA,CAAlB,4BAAkBA,CAAlB,CACA,GAAMI,CAAAA,MAAM,CAAGJ,OAAO,CAAPA,MAAAA,CAAf,yBAAeA,CAAf,CACA,GAAMK,CAAAA,QAAQ,CAAGL,OAAO,CAAPA,MAAAA,CAAjB,2BAAiBA,CAAjB,CACA,GAAMM,CAAAA,OAAO,CAAGN,OAAO,CAAPA,MAAAA,CAAeO,CAAC,EAAIA,CAAC,CAArC,SAAgBP,CAAhB,CACA,GAAMQ,CAAAA,WAAW,CAAGR,OAAO,CAAPA,MAAAA,CAApB,8BAAoBA,CAApB,CACA,GAAMS,CAAAA,MAAM,CAAGT,OAAO,CAAPA,MAAAA,CACXO,CAAC,EACGJ,SAAS,CAATA,OAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EACAC,MAAM,CAANA,OAAAA,CAAAA,CAAAA,EADAD,CAAAA,EAEAE,QAAQ,CAARA,OAAAA,CAAAA,CAAAA,EAFAF,CAAAA,EAGAG,OAAO,CAAPA,OAAAA,CAAAA,CAAAA,EAHAH,CAAAA,EAIAK,WAAW,CAAXA,OAAAA,CAAAA,CAAAA,EANR,CAAeR,CAAf,CAQA;AACAU,qDAAkC,CAACrF,IAAI,CAAvCqF,eAAkC,CAAlCA,CAEA,GAAMC,CAAAA,QAAQ,CAAIV,GAAD,EACbK,OAAO,CAAPA,IAAAA,CAAaM,GAAG,EAAIC,gCAAU,KADlC,GACkC,CAA9BP,CADJ,CAEA,GAAMQ,CAAAA,YAAY,CAAIb,GAAD,EACjBO,WAAW,CAAXA,IAAAA,CAAiBI,GAAG,EAAIG,oCAAc,KAD1C,GAC0C,CAAtCP,CADJ,CAGA,mBACI,qDACI,0BAAI,GAAG,CAAP,2BAEI,wCAAK,EAAE,CAAP,EAAY,SAAS,CAArB,qBACI,2CACI,EAAE,CAAEnF,IAAI,CADZ,gBAEI,MAAM,QANtB,OAIY,EADJ,CAFJ,CADJ,cAUI,oEAAiC,aAAa,CAVlD,IAUI,EAVJ,CAWKA,IAAI,CAAJA,KAAAA,CAAAA,KAAAA,EAAAA,aACG,+CAAY,OAAO,CAAnB,SAA6BA,IAAI,CAAJA,KAAAA,CAZrC,KAYQ,CAZR,CAcK,CAAC,iBAACA,IAAI,CAAL,yCAACA,aAAAA,CAAF,MAAC,CAAD,eACG,4CACI,gCADJ,UACI,CADJ,CAEKA,IAAI,CAAJA,OAAAA,CAAAA,GAAAA,CAAiB,yBACd,oCAAU,GAAG,UAAb,QACK2F,CAAC,CAADA,CAAAA,EAAAA,aAAS,gCADd,IACc,CADd,cAEI,2DACI,GAAG,UADP,OAEI,EAAE,qBAFN,KAIKC,kDAA4B,CAA5BA,MAA4B,CAA5BA,CATjB,IAKY,CAFJ,CADH5F,CAFL,CAfR,GAeQ,CAfR,cA+BI,6CAAU,GAAG,CAAb,YAA0B,MAAM,CAAEA,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,EA/BtC,EA+BI,EA/BJ,cAgCI,6CAAyB,YAAY,CAhCzC,eAgCI,EAhCJ,cAiCI,uCAAmB,GAAG,CAAtB,QAA+B,YAAY,CAjC/C,eAiCI,EAjCJ,CAkCK,CACG,CACIhC,IAAI,CADR,YAEI2G,OAAO,CAFX,UAGIkB,IAAI,CAAE7F,IAAI,CAAJA,KAAAA,CAJb,WAIaA,CAHV,CADH,CAMG,CAAEhC,IAAI,CAAN,SAAkB2G,OAAO,CAAzB,OAAmCkB,IAAI,CAAE7F,IAAI,CAAJA,KAAAA,CAN5C,QAM4CA,CAAzC,CANH,CAOG,CACIhC,IAAI,CADR,WAEI2G,OAAO,CAFX,SAGIkB,IAAI,CAAE7F,IAAI,CAAJA,KAAAA,CAVb,UAUaA,CAHV,CAPH,CAYG,CAAEhC,IAAI,CAAN,SAAkB2G,OAAO,CAAzB,OAAmCkB,IAAI,CAAE7F,IAAI,CAAJA,KAAAA,CAZ5C,QAY4CA,CAAzC,CAZH,SAcW8F,KAAK,EAAIA,KAAK,CAALA,OAAAA,CAdpB,YAeQA,KAAK,eACN,oCAAU,GAAG,SAAUA,KAAK,CAA5B,mBACI,8BAAKA,KAAK,CADd,IACI,CADJ,CAEKA,KAAK,CAALA,IAAAA,EAAAA,aACG,6CACI,GAAG,QAASA,KAAK,CADrB,KAEI,MAAM,CAAEA,KAAK,CALzB,IAGQ,EAHR,CAQKA,KAAK,CAALA,OAAAA,CAAAA,IAAAA,CAEO,OACI,CAACC,CAAC,CAADA,OAAAA,CAAAA,CAAAA,CAAgB,CAAjB,IAAwBb,CAAC,CAADA,OAAAA,CAAAA,CAAAA,CAAgB,CAHnDY,CAGW,CAHXA,EAAAA,GAAAA,CAKQlB,GAAG,eACJ,wDACI,GAAG,OAAQA,GAAG,CADlB,WAEI,YAAY,CAAE5E,IAAI,CAFtB,gBAGI,UAAU,CAHd,IAII,UAAU,CAAEsF,QAAQ,CAJxB,GAIwB,CAJxB,CAKI,cAAc,CAAEG,YAAY,CALhC,GAKgC,CALhC,CAMI,WAAW,CAvE3C,IAiE4B,EANPK,CARL,CAhBP,CAlCL,CADJ,CA8EH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Edit.js","webpack://jacdac-docs/./src/components/services/StatusCodeAlert.tsx","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItemHeader.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/hooks/useServiceProviderFromServiceClass.ts","webpack://jacdac-docs/./src/components/services/useInstanceName.ts","webpack://jacdac-docs/./src/components/services/useRoleManagerClient.ts","webpack://jacdac-docs/./src/components/services/useStatusCode.ts","webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/components/EnumSpecification.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecification.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","import React from \"react\"\nimport { Typography } from \"@mui/material\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { RegisterOptions } from \"../../jacdac/useRegisterValue\"\nimport useStatusCode from \"./useStatusCode\"\nimport {\n    SRV_WIFI,\n    SystemStatusCodes,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport Alert from \"../ui/Alert\"\n\nconst codes: Record<number, Record<number, (srv: JDService) => string>> = {\n    [SRV_WIFI]: {\n        [SystemStatusCodes.WaitingForInput]: () =>\n            \"Waiting for WiFi credentials.\",\n    },\n}\nconst severities: Record<number, \"error\" | \"warning\" | \"info\"> = {\n    [SystemStatusCodes.Sleeping]: \"info\",\n    [SystemStatusCodes.Initializing]: \"info\",\n    [SystemStatusCodes.Calibrating]: \"info\",\n}\n\nexport default function StatusCodeAlert(\n    props: {\n        service: JDService\n    } & RegisterOptions\n) {\n    const { service, ...rest } = props\n    const { serviceClass } = service\n    const { code, vendorCode } = useStatusCode(service, rest)\n    if (\n        (code === SystemStatusCodes.Ready ||\n            code === SystemStatusCodes.Sleeping ||\n            code === SystemStatusCodes.Initializing) &&\n        vendorCode === 0\n    )\n        return null\n    const severity = severities[code] || \"warning\"\n    return (\n        <Alert severity={severity}>\n            {!!code && (\n                <Typography variant=\"caption\">\n                    {humanify(\n                        codes[serviceClass]?.[code]?.(service) ||\n                            SystemStatusCodes[code] ||\n                            \"?\"\n                    )}\n                </Typography>\n            )}\n            {!!vendorCode && (\n                <Typography variant=\"caption\">\n                    vendor error: 0x{vendorCode.toString(16)}\n                </Typography>\n            )}\n        </Alert>\n    )\n}\n","import { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\n\nexport default function useServiceRole(service: JDService): string {\n    return useEventRaised(ROLE_CHANGE, service, _ => _?.role)\n}\n","import { Button, styled } from \"@mui/material\"\nimport React, { lazy, useState } from \"react\"\nimport { isDeviceId, shortDeviceId } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { ellipse } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useChange from \"../../jacdac/useChange\"\nimport Suspense from \"../ui/Suspense\"\nimport useRoleManagerClient from \"./useRoleManagerClient\"\nimport useServiceRole from \"./useServiceRole\"\nimport { escapeRoleName } from \"../../../jacdac-ts/src/jdom/rolemanager\"\nconst SelectRoleDialog = lazy(() => import(\"../dialogs/SelectRoleDialog\"))\n\nconst MAX_NAME_LENGTH = 20\n\nconst RoleButton = styled(Button)({\n    textTransform: \"none\",\n})\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n\n    const [showSelectRoleDialog, setShowSelectRoleDialog] = useState(false)\n    const roleManager = useRoleManagerClient()\n    const role = useServiceRole(service)\n    const handleOpen = () => setShowSelectRoleDialog(true)\n    const handleClose = () => setShowSelectRoleDialog(false)\n\n    const hasRoleForService = useChange(\n        roleManager,\n        _ => _?.hasRoleForService(service),\n        [service]\n    )\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService) return null\n\n    const name = isDeviceId(role)\n        ? shortDeviceId(role)\n        : ellipse(escapeRoleName(role), MAX_NAME_LENGTH) || \"...\"\n    return (\n        <>\n            <RoleButton\n                title={role || \"Choose role for service\"}\n                size=\"small\"\n                onClick={handleOpen}\n            >\n                {name}\n            </RoleButton>\n            {showSelectRoleDialog && (\n                <Suspense>\n                    <SelectRoleDialog service={service} onClose={handleClose} />\n                </Suspense>\n            )}\n        </>\n    )\n}\n","import { Grid, SvgIconProps, Tooltip, Typography } from \"@mui/material\"\nimport React, { createElement, Suspense } from \"react\"\nimport {\n    dashboardServiceIcon,\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport useInstanceName from \"../services/useInstanceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport EditIcon from \"@mui/icons-material/Edit\"\nimport { serviceName } from \"../../../jacdac-ts/src/jdom/pretty\"\n\nexport default function DashboardServiceWidgetItemHeader(\n    props: {\n        toggleExpanded: () => void\n    } & React.Attributes &\n        DashboardServiceProps\n): JSX.Element {\n    const { service, expanded, toggleExpanded, ...rest } = props\n    const { serviceClass } = service\n    const instanceName = useInstanceName(service, rest)\n    const icon = dashboardServiceIcon(serviceClass)\n    const iconProps: SvgIconProps = {\n        titleAccess: serviceName(serviceClass),\n        color: \"disabled\",\n    }\n    return (\n        <Grid container spacing={1} alignItems=\"center\">\n            {icon && (\n                <Grid item>\n                    <Tooltip title={serviceName(serviceClass)}>\n                        <Suspense fallback={null}>\n                            {createElement(icon, iconProps)}\n                        </Suspense>\n                    </Tooltip>\n                </Grid>\n            )}\n            <Grid item xs>\n                <ServiceRole service={service} />\n            </Grid>\n            {instanceName && (\n                <Grid item>\n                    <Typography\n                        className=\"no-pointer-events\"\n                        variant=\"caption\"\n                        component=\"span\"\n                        style={{ float: \"right\" }}\n                    >\n                        {instanceName}\n                    </Typography>\n                </Grid>\n            )}\n            {expanded !== undefined && (\n                <Grid item>\n                    <Grid item>\n                        <IconButtonWithTooltip\n                            size=\"small\"\n                            title={\n                                expanded\n                                    ? \"Hide configuration\"\n                                    : \"Show configuration\"\n                            }\n                            onClick={toggleExpanded}\n                        >\n                            <EditIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useEffect, useState } from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n    isExpandableView,\n} from \"./DashboardServiceWidget\"\nimport StatusCodeAlert from \"../services/StatusCodeAlert\"\nimport DashboardServiceWidgetItemHeader from \"./DashboardServiceWidgetItemHeader\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service, controlled, ...rest } = props\n    const { serviceClass } = service\n    const expandable = props.expandable || isExpandableView(serviceClass)\n    const [expanded, setExpanded] = useState<boolean>(\n        !controlled && expandable ? false : undefined\n    )\n    const statusCodeAlert = <StatusCodeAlert service={service} {...rest} />\n    const toggleExpanded = () => setExpanded(e => !e)\n    useEffect(() => {\n        setExpanded(!controlled && expandable ? false : undefined)\n    }, [controlled, expandable])\n\n    return (\n        <Grid item>\n            <DashboardServiceWidgetItemHeader\n                {...props}\n                expanded={expanded}\n                toggleExpanded={toggleExpanded}\n            />\n            {statusCodeAlert}\n            <DashboardServiceWidget {...props} expanded={expanded} />\n        </Grid>\n    )\n}\n","import { useEffect, useState, RefObject } from \"react\"\n\nexport interface Args extends IntersectionObserverInit {\n    freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n    elementRef: RefObject<Element>,\n    options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n    const [entry, setEntry] = useState<IntersectionObserverEntry>()\n    const {\n        threshold = 0,\n        root = null,\n        rootMargin = \"0%\",\n        freezeOnceVisible,\n    } = options || {}\n\n    const frozen = entry?.isIntersecting && freezeOnceVisible\n\n    const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n        setEntry(entry)\n    }\n\n    useEffect(() => {\n        const node = elementRef?.current // DOM Ref\n        const hasIOSupport = !!window.IntersectionObserver\n\n        if (!hasIOSupport || frozen || !node) return\n\n        const observerParams = { threshold, root, rootMargin }\n        const observer = new IntersectionObserver(updateEntry, observerParams)\n\n        //console.log(`observe`, { node })\n        observer.observe(node)\n\n        return () => observer.disconnect()\n    }, [elementRef, threshold, root, rootMargin, frozen])\n\n    return entry\n}\n","import { CardHeader, Typography } from \"@mui/material\"\nimport React from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport DeviceName from \"../devices/DeviceName\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DeviceActions from \"../devices/DeviceActions\"\nimport useDeviceDescription from \"../../jacdac/useDeviceDescription\"\n\nexport default function DashboardDeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showReset?: boolean\n}) {\n    const { device, showAvatar, showReset } = props\n    const description = useDeviceDescription(device)\n\n    return (\n        <CardHeader\n            style={{ paddingBottom: 0 }}\n            avatar={showAvatar && <DeviceAvatar device={device} />}\n            action={\n                <DeviceActions\n                    device={device}\n                    showStop={true}\n                    hideIdentity={true}\n                    showReset={showReset}\n                    showSettings={false}\n                />\n            }\n            title={<DeviceName showShortId={false} device={device} />}\n            subheader={\n                <>\n                    {description && (\n                        <Typography variant=\"caption\" gutterBottom>\n                            {description}\n                        </Typography>\n                    )}\n                </>\n            }\n        />\n    )\n}\n","import { Card, CardContent, Grid, Paper } from \"@mui/material\"\nimport React, { useCallback, useRef, lazy } from \"react\"\nimport {\n    SRV_CONTROL,\n    SRV_INFRASTRUCTURE,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_PROXY,\n    SRV_SETTINGS,\n    SRV_UNIQUE_BRAIN,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/eventsource\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport Suspense from \"../ui/Suspense\"\nimport DashboardDeviceCardHeader from \"./DashboardDeviceCardHeader\"\nconst DeviceProxyAlert = lazy(() => import(\"../alert/DeviceProxyAlert\"))\nconst DeviceBootloaderAlert = lazy(\n    () => import(\"../alert/DeviceBootloaderAlert\")\n)\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_SETTINGS,\n    SRV_PROTO_TEST,\n    SRV_PROXY,\n    SRV_INFRASTRUCTURE,\n    SRV_UNIQUE_BRAIN,\n]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        serviceFilter,\n        variant,\n        showAvatar,\n        showHeader,\n        showReset,\n        showDeviceProxyAlert,\n        alwaysVisible,\n        controlled,\n    } = props\n\n    const name = useDeviceName(device)\n    const services = useChange(device, _ =>\n        _?.services({ specification: true }).filter(\n            service =>\n                ignoredServices.indexOf(service.serviceClass) < 0 &&\n                !service.isMixin &&\n                (!serviceFilter || serviceFilter(service))\n        )\n    )\n\n    // refresh when visible\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible =\n        alwaysVisible || !intersection || !!intersection.isIntersecting\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justifyContent=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services?.map(service => (\n                    <DashboardServiceWidgetItem\n                        key={service.nodeId}\n                        service={service}\n                        services={services}\n                        variant={variant}\n                        visible={visible}\n                        controlled={controlled}\n                    />\n                ))}\n            </Grid>\n        ),\n        [dependencyId(services), variant, visible, controlled]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <DashboardDeviceCardHeader\n                device={device}\n                showAvatar={showAvatar}\n                showReset={showReset}\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <DeviceLostAlert device={device} />\n                <Suspense fallback={null}>\n                    <DeviceBootloaderAlert device={device} />\n                </Suspense>\n                {showDeviceProxyAlert && (\n                    <Suspense>\n                        <DeviceProxyAlert device={device} />\n                    </Suspense>\n                )}\n                <ServiceWidgets />\n            </CardContent>\n        </Card>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport DashboardDevice from \"./DashboardDevice\"\nimport { GridBreakpoints } from \"../useGridBreakpoints\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useChange from \"../../jacdac/useChange\"\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\"\nimport AppContext, { DrawerType } from \"../AppContext\"\n\nexport default function DashboardDeviceItem(\n    props: {\n        device: JDDevice\n        alwaysVisible?: boolean\n    } & DashboardDeviceProps\n) {\n    const { device, ...other } = props\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(\n        device,\n        () => {\n            const breakpointWeight = device\n                .services()\n                .map(srv => {\n                    return (\n                        dashboardServiceWeight(srv) ||\n                        (srv.readingRegister ||\n                        srv.valueRegister ||\n                        srv.intensityRegister\n                            ? 1\n                            : 0)\n                    )\n                })\n                .reduce((c: number, v) => c + v, 0)\n\n            if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n                return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 }\n            else if (breakpointWeight == 3)\n                return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 }\n            else if (breakpointWeight == 2)\n                return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 }\n            else\n                return {\n                    xs: 6,\n                    sm: 4,\n                    md: 3,\n                    lg: 2,\n                    xl: \"auto\",\n                }\n        },\n        [drawerType],\n        (a, b) =>\n            a.xs == b.xs &&\n            a.sm == b.sm &&\n            a.md == b.md &&\n            a.sm == b.sm &&\n            a.lg == b.lg &&\n            a.xl == b.xl\n    )\n\n    // based on size, expanded or reduce widget size\n    return (\n        <Grid item {...breakpoints}>\n            <DashboardDevice device={device} {...other} />\n        </Grid>\n    )\n}\n","import { useEffect } from \"react\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport useBus from \"../../jacdac/useBus\"\n\nexport default function useServiceProviderFromServiceClass(\n    serviceClass: number\n): void {\n    const bus = useBus()\n\n    // run once\n    useEffect(() => {\n        const devices = bus.devices({ serviceClass })\n        const def =\n            !devices.length &&\n            serviceProviderDefinitionFromServiceClass(serviceClass)\n        const provider = def && addServiceProvider(bus, def)\n        return () => bus.removeServiceProvider(provider)\n    }, [serviceClass])\n}\n","import { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    RegisterOptions,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function useInstanceName(\n    service: JDService,\n    options?: RegisterOptions\n) {\n    const instanceNameRegister = useRegister(service, SystemReg.InstanceName)\n    const [instanceName] = useRegisterUnpackedValue<[string]>(\n        instanceNameRegister,\n        options\n    )\n    return instanceName\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/clients/rolemanagerclient\"\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useBus from \"../../jacdac/useBus\"\n\nexport default function useRoleManagerClient(): RoleManagerClient {\n    const bus = useBus()\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(\n        () => bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager)),\n        [bus]\n    )\n    return mgr\n}\n","import { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    RegisterOptions,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function useStatusCode(\n    service: JDService,\n    options?: RegisterOptions\n) {\n    const register = useRegister(service, SystemReg.StatusCode)\n    const [code = 0, vendorCode = 0] = useRegisterUnpackedValue<[number, number]>(\n        register,\n        options\n    )\n    return { code, vendorCode }\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@mui/material\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length) return <></>\n\n    return (\n        <Fragment>\n            <h2>Enums</h2>\n            {enums.map(e => (\n                <Fragment key={e.name}>\n                    <h3>\n                        {e.name}{\" \"}\n                        {e.isFlags && <Chip label=\"flags\" size=\"small\" />}\n                    </h3>\n                    <ul>\n                        {Object.keys(e.members).map(en => (\n                            <li key={en}>\n                                {en}:{\" \"}\n                                <code>0x{e.members[en].toString(16)}</code>\n                            </li>\n                        ))}\n                    </ul>\n                </Fragment>\n            ))}\n        </Fragment>\n    )\n}\n","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"./PacketSpecification\"\nimport IDChip from \"../IDChip\"\nimport Markdown from \"../ui/Markdown\"\nimport EnumSpecification from \"../EnumSpecification\"\nimport { Box, Grid, Typography } from \"@mui/material\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useServiceProviderFromServiceClass from \"../hooks/useServiceProviderFromServiceClass\"\nimport DashbardDeviceItem from \"../dashboard/DashboardDeviceItem\"\nimport useDevices from \"../hooks/useDevices\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const devices = useDevices({ serviceClass })\n    return (\n        <Grid container spacing={1}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showDerived?: boolean\n}) {\n    const { service: node, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            {node.notes.short && (\n                <Typography variant=\"body2\">{node.notes.short}</Typography>\n            )}\n            {!!node.extends?.length && (\n                <div>\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </div>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map(pkt => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.identifier}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </>\n    )\n}\n"],"names":["codes","SystemStatusCodes","severities","rest","useStatusCode","code","vendorCode","severity","humanify","useEventRaised","_","SelectRoleDialog","lazy","MAX_NAME_LENGTH","RoleButton","styled","textTransform","useState","roleManager","useRoleManagerClient","role","useServiceRole","handleOpen","setShowSelectRoleDialog","handleClose","hasRoleForService","useChange","name","isDeviceId","shortDeviceId","ellipse","escapeRoleName","showSelectRoleDialog","instanceName","useInstanceName","icon","dashboardServiceIcon","iconProps","titleAccess","serviceName","color","createElement","float","expanded","expandable","props","isExpandableView","statusCodeAlert","toggleExpanded","setExpanded","e","useEffect","threshold","root","rootMargin","options","frozen","updateEntry","setEntry","node","elementRef","hasIOSupport","window","observerParams","observer","description","useDeviceDescription","paddingBottom","showAvatar","DeviceProxyAlert","DeviceBootloaderAlert","ignoredServices","useDeviceName","services","specification","service","serviceFilter","serviceGridRef","useRef","intersection","useIntersectionObserver","visible","alwaysVisible","ServiceWidgets","useCallback","dependencyId","padding","paddingTop","showDeviceProxyAlert","other","useContext","breakpoints","breakpointWeight","device","srv","dashboardServiceWeight","c","drawerType","DrawerType","xs","sm","md","lg","xl","a","b","bus","useBus","devices","def","serviceProviderDefinitionFromServiceClass","provider","addServiceProvider","instanceNameRegister","useRegister","SystemReg","useRegisterUnpackedValue","setMgr","register","meta","useStaticQuery","metaTitle","title","pageContext","site","metaDescription","data","content","spec","serviceSpecificationFromClassIdentifier","enums","Object","en","useDevices","packets","pkt","showDerived","registers","events","commands","reports","r","pipeReports","others","useServiceProviderFromServiceClass","reportOf","rep","isReportOf","pipeReportOf","isPipeReportOf","i","serviceSpecificationFromName","note","group","l"],"sourceRoot":""}