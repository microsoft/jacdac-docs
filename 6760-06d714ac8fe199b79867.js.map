{"version":3,"file":"6760-06d714ac8fe199b79867.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardMatrixKeypad.tsx","webpack://jacdac-docs/./src/components/hooks/useArrowKeys.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigation.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigationProps.ts"],"sourcesContent":["import React, { SVGProps, useRef } from \"react\"\nimport { MatrixKeypadReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useFireKey from \"../hooks/useFireKey\"\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\"\nimport { MatrixKeypadServer } from \"../../../jacdac-ts/src/servers/matrixkeypadserver\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport useRegister from \"../hooks/useRegister\"\nimport DashboardRegisterValueFallback from \"./DashboardRegisterValueFallback\"\n\nexport default function DashboardMatrixKeypad(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n\n    const widgetRef = useRef<SVGGElement>()\n    const pressedRegister = useRegister(service, MatrixKeypadReg.Pressed)\n    const labelsRegister = useRegister(service, MatrixKeypadReg.Labels)\n    const rowsRegister = useRegister(service, MatrixKeypadReg.Rows)\n    const columnsRegister = useRegister(service, MatrixKeypadReg.Columns)\n\n    const [pressed] = useRegisterUnpackedValue<[[number][]]>(\n        pressedRegister,\n        props\n    )\n    const [labels] = useRegisterUnpackedValue<[[string][]]>(\n        labelsRegister,\n        props\n    )\n    const [rows] = useRegisterUnpackedValue<[number]>(rowsRegister, props)\n    const [columns] = useRegisterUnpackedValue<[number]>(columnsRegister, props)\n    const server = useServiceServer<MatrixKeypadServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, controlBackground, active, textProps } =\n        useWidgetTheme(color)\n    const widgetSize = useWidgetSize(variant, services?.length)\n\n    // no data about layout\n    if (rows === undefined || columns === undefined)\n        return (\n            <DashboardRegisterValueFallback\n                register={rows === undefined ? rowsRegister : columnsRegister}\n            />\n        )\n\n    const clickeable = !!server\n    // compute size\n    const pw = 8\n    const ph = 8\n    const ps = 0.5\n    const pr = 1\n    const m = 2\n    const w = columns * pw + (columns + 1) * m\n    const h = rows * ph + (rows + 1) * m\n\n    const handleButtonUp = (index: number) => () => {\n        server.up(index)\n        pressedRegister.refresh()\n    }\n    const handleButtonDown = (index: number) => () => {\n        server.down(index)\n        pressedRegister.refresh()\n    }\n\n    // add leds\n    const render = () => {\n        const ledEls: JSX.Element[] = []\n        const ledProps: SVGProps<SVGRectElement> = {\n            className: clickeable ? \"clickeable\" : undefined,\n            role: clickeable ? \"button\" : \"\",\n            tabIndex: clickeable ? 0 : undefined,\n        }\n\n        let y = m\n        for (let row = 0; row < rows; row++) {\n            let x = m\n            for (let col = 0; col < columns; col++) {\n                const index = row * columns + col\n                const on = pressed?.findIndex(p => p[0] === index) > -1\n                const label = labels?.[index]?.[0]\n\n                const handleUp = clickeable ? handleButtonUp(index) : undefined\n                const handleDown = clickeable\n                    ? handleButtonDown(index)\n                    : undefined\n                const fireUp = useFireKey(handleUp)\n                const fireDown = useFireKey(handleDown)\n\n                ledEls.push(\n                    <rect\n                        key={`l${row}-${col}`}\n                        x={x}\n                        y={y}\n                        width={pw}\n                        height={ph}\n                        rx={pr}\n                        ry={pr}\n                        fill={on ? active : controlBackground}\n                        stroke={\"none\"}\n                        strokeWidth={ps}\n                        {...ledProps}\n                        aria-label={label || `key ${row},${col}`}\n                        onKeyDown={fireDown}\n                        onKeyUp={fireUp}\n                        onPointerDown={handleDown}\n                        onPointerUp={handleUp}\n                    />\n                )\n                if (label) {\n                    ledEls.push(\n                        <text\n                            key={`t${row}-${col}`}\n                            fontSize={(ph * 2) / 3}\n                            {...textProps}\n                            x={x + pw / 2}\n                            y={y + ph / 2}\n                        >\n                            {label}\n                        </text>\n                    )\n                }\n                x += pw + m\n            }\n            y += ph + m\n        }\n        return { ledEls }\n    }\n\n    const { ledEls } = render()\n    const navProps = useKeyboardNavigationProps(widgetRef.current)\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <rect\n                x={0}\n                y={0}\n                width={w}\n                height={h}\n                rx={pr}\n                ry={pr}\n                fill={background}\n            />\n            <g ref={widgetRef} {...navProps}>\n                {ledEls}\n            </g>\n        </SvgWidget>\n    )\n}\n","import { KeyboardEvent } from \"react\"\nimport { keyCodeFromEvent } from \"./useFireKey\"\n\nconst PAGE_DOWN = 34\nconst PAGE_UP = 33\nconst HOME = 36\nconst END = 35\nconst LEFT_KEY = 37\nconst UP_KEY = 38\nconst RIGHT_KEY = 39\nconst DOWN_KEY = 40\n\nexport default function useArrowKeys(options: {\n    onLeft?: (offset: number) => void\n    onRight?: (offset: number) => void\n    onUp?: (offset: number) => void\n    onDown?: (offset: number) => void\n    symmetric?: boolean\n}) {\n    const { onLeft, onUp, onRight, onDown, symmetric } = options\n\n    if (!onLeft && !onUp && !onRight && !onDown) return undefined\n\n    const handlers = {\n        [LEFT_KEY]: onLeft,\n        [RIGHT_KEY]: onRight,\n        [UP_KEY]: onUp || (symmetric && onRight),\n        [DOWN_KEY]: onDown || (symmetric && onLeft),\n    }\n\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e)\n        const handler = handlers[charCode]\n        if (handler) {\n            e.preventDefault()\n            handler()\n        }\n    }\n}\n","export default function useKeyboardNavigation(\n    parentRef: Element,\n    wrap = false\n) {\n    const query = '[tabindex=\"0\"]'\n    const onMove = (offset: number) => () => {\n        const focusable = Array.from<SVGElement>(\n            parentRef?.querySelectorAll(query) || []\n        )\n        if (focusable.length) {\n            const me = focusable.findIndex(f => f === document.activeElement)\n            // don't wrap\n            if (\n                !wrap &&\n                ((me === 0 && offset < 0) ||\n                    (me === focusable.length - 1 && offset > 0))\n            )\n                return\n            const next = (me + offset + focusable.length) % focusable.length\n            focusable[next].focus()\n        }\n    }\n    return onMove\n}\n","import useArrowKeys from \"./useArrowKeys\"\nimport useKeyboardNavigation from \"./useKeyboardNavigation\"\n\nexport default function useKeyboardNavigationProps(\n    parentRef: Element,\n    vertical?: boolean\n) {\n    const onMove = useKeyboardNavigation(parentRef)\n\n    const onKeyDown = useArrowKeys({\n        onLeft: !vertical && onMove(-1),\n        onRight: !vertical && onMove(1),\n        onDown: vertical && onMove(1),\n        onUp: vertical && onMove(-1),\n    })\n\n    return {\n        onKeyDown: parentRef && onKeyDown,\n    }\n}\n"],"names":["widgetRef","useRef","pressedRegister","useRegister","MatrixKeypadReg","labelsRegister","rowsRegister","columnsRegister","useRegisterUnpackedValue","server","useServiceServer","color","useWidgetTheme","widgetSize","useWidgetSize","services","rows","columns","clickeable","pw","ph","ps","pr","m","w","h","handleButtonUp","index","handleButtonDown","render","ledEls","ledProps","className","role","tabIndex","y","row","x","col","on","p","label","labels","handleUp","handleDown","fireUp","useFireKey","fireDown","navProps","useKeyboardNavigationProps","PAGE_DOWN","PAGE_UP","HOME","END","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","handlers","onUp","symmetric","onDown","e","charCode","keyCodeFromEvent","handler","wrap","query","onMove","offset","focusable","Array","me","f","document","next","useKeyboardNavigation","onKeyDown","useArrowKeys","onLeft","onRight","vertical","parentRef"],"sourceRoot":""}