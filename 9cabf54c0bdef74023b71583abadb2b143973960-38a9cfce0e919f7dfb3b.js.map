{"version":3,"file":"9cabf54c0bdef74023b71583abadb2b143973960-38a9cfce0e919f7dfb3b.js","mappings":"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ACA;AACA;AACA,SAAS,iCAAc,QAAQ,wBAAwB;AACvD;AACA,sBAAsB,0BAAM,CAAC,0BAAW;AACxC;AACA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,MAAM,KAAqC,EAAE,EAI1C;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAK;AAClB,6CAA6C,GAAG;AAChD,wCAAwC,GAAG;AAC3C;AACA,oCAAoC,mBAAI,iBAAiB,8BAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,oBAAK,gBAAgB,8BAAQ;AACnD,eAAe,yBAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,6DAA6D,mBAAI,CAAC,yBAAU,EAAE,8BAAQ;AACtF;AACA;AACA,KAAK;AACL;AACA,KAAK,0BAA0B,mBAAI,CAAC,qBAAM,EAAE,8BAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,8CAA8C,mBAAI,CAAC,6BAAc,EAAE,8BAAQ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","sources":["webpack://jacdac-docs/./node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/MenuItem/menuItemClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/MenuItem/MenuItem.js","webpack://jacdac-docs/./node_modules/@mui/material/TextField/textFieldClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/TextField/TextField.js","webpack://jacdac-docs/./src/components/FieldDataSet.ts","webpack://jacdac-docs/./src/components/hooks/useRegisterServer.ts","webpack://jacdac-docs/./src/components/hooks/useReadingAuxilliaryValue.ts","webpack://jacdac-docs/./src/components/RegisterInput.tsx","webpack://jacdac-docs/./src/components/RegisterTrend.tsx","webpack://jacdac-docs/./src/components/Trend.tsx","webpack://jacdac-docs/./src/components/widgets/ValueWithUnitWidget.tsx","webpack://jacdac-docs/./src/components/hooks/useUnitIcon.tsx","webpack://jacdac-docs/./src/components/fields/MemberInput.tsx","webpack://jacdac-docs/./src/components/fields/MembersInput.tsx","webpack://jacdac-docs/./src/components/hooks/useFireKey.ts","webpack://jacdac-docs/./src/components/hooks/useServiceServer.ts","webpack://jacdac-docs/./src/components/hooks/useSvgButtonProps.ts","webpack://jacdac-docs/./src/components/icons/HumidityIcon.tsx","webpack://jacdac-docs/./src/components/icons/TemperatureIcon.tsx","webpack://jacdac-docs/./src/components/ui/LoadingProgress.tsx","webpack://jacdac-docs/./src/components/ui/useUnitConverter.ts","webpack://jacdac-docs/./src/components/useChartPalette.ts","webpack://jacdac-docs/./src/components/widgets/ButtonWidget.tsx","webpack://jacdac-docs/./src/components/widgets/GaugeWidget.tsx","webpack://jacdac-docs/./src/components/widgets/PowerButton.tsx","webpack://jacdac-docs/./src/components/widgets/SvgWidget.tsx","webpack://jacdac-docs/./src/components/widgets/svgutils.ts","webpack://jacdac-docs/./src/components/widgets/useWidgetSize.ts","webpack://jacdac-docs/./src/components/widgets/useWidgetTheme.ts"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import { JDBus } from \"../../jacdac-ts/src/jdom/bus\"\nimport { CHANGE } from \"../../jacdac-ts/src/jdom/constants\"\nimport { JDEventSource } from \"../../jacdac-ts/src/jdom/eventsource\"\nimport { JDField } from \"../../jacdac-ts/src/jdom/field\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport {\n    arrayConcatMany,\n    roundWithPrecision,\n} from \"../../jacdac-ts/src/jdom/utils\"\n\nexport class Example {\n    label: string\n    constructor(\n        public readonly timestamp: number,\n        public readonly data: number[]\n    ) {}\n\n    toVector(startTimestamp?: number): number[] {\n        const t = this.timestamp - (startTimestamp || 0)\n        const s = roundWithPrecision(t / 1000, 3)\n        return [s].concat(this.data)\n    }\n}\n\nexport class Recording {\n    constructor(\n        public readonly name: string,\n        public readonly colors: string[],\n        public readonly headers: string[],\n        public readonly rows: Example[],\n        public readonly units: string[]\n    ) {}\n}\n\nexport default class FielddataSet extends JDEventSource {\n    readonly id = Math.random().toString()\n    readonly rows: Example[]\n    headers: string[]\n    units: string[]\n    interval: number\n    maxRows = -1\n\n    // maintain computed min/max/rms/sd to avoid recomputation\n    mins: number[]\n    maxs: number[]\n    rms: number[] // rms is the root mean squared, or average value of the sample\n    sd: number[] // sd is the standard deviation of the sample, a measure of volatility\n\n    static create(\n        bus: JDBus,\n        registers: JDRegister[],\n        name: string,\n        palette: string[],\n        maxRows?: number\n    ): FielddataSet {\n        const fields = arrayConcatMany(registers.map(reg => reg.fields))\n        const colors = fields.map((f, i) => palette[i % palette.length])\n        const set = new FielddataSet(bus, name, fields, colors)\n        if (maxRows !== undefined) set.maxRows = maxRows\n        return set\n    }\n\n    static createFromFile(dataSet: {\n        name: string\n        rows: Example[]\n        headers: string[]\n        units: string[]\n        colors?: string[]\n    }): FielddataSet {\n        const set = new FielddataSet(null, dataSet.name, null, dataSet.colors)\n\n        dataSet.rows.forEach(row => {\n            const { timestamp, data } = row\n            set.addExample(timestamp, data)\n        })\n        set.units = dataSet.units\n        set.headers = dataSet.headers\n        set.colors = dataSet.colors\n\n        return set\n    }\n\n    constructor(\n        public readonly bus: JDBus,\n        public readonly name: string,\n        public readonly fields?: JDField[],\n        public colors: string[] = [\"#000\"]\n    ) {\n        super()\n        this.rows = []\n        if (fields !== undefined && fields !== null) {\n            this.headers = fields.map(field => field.name)\n            this.units = fields.map(field => field.unit)\n        }\n    }\n\n    get startTimestamp() {\n        const row = this.rows[0]\n        return row?.timestamp\n    }\n\n    get duration() {\n        const first = this.rows[0]\n        const last = this.rows[this.rows.length - 1]\n        return (first && last && last.timestamp - first.timestamp) || 0\n    }\n\n    get length() {\n        return this.rows.length\n    }\n\n    get width() {\n        return this.headers.length\n    }\n\n    data(flatten?: boolean) {\n        if (flatten && this.headers.length == 1)\n            return this.rows.map(row => row.data[0])\n        else return this.rows.map(row => row.data)\n    }\n\n    indexOf(field: JDField) {\n        return this.fields.indexOf(field)\n    }\n\n    colorOf(field?: JDField, header?: string) {\n        if (field) return this.colors[this.indexOf(field)]\n        if (header) return this.colors[this.headers.indexOf(header)]\n        return [\"#000\"]\n    }\n\n    addRow(data?: number[]) {\n        const timestamp = this.bus.timestamp\n        if (!data) data = this.fields.map(f => f.value)\n        this.addExample(timestamp, data)\n    }\n\n    addData(data: number[]) {\n        this.addExample(Date.now(), data)\n    }\n\n    private addExample(timestamp: number, data: number[]) {\n        this.rows.push(new Example(timestamp, data))\n\n        // drop rows if needed\n        let refreshminmax = false\n        while (this.maxRows > 0 && this.rows.length > this.maxRows * 1.1) {\n            this.rows.shift()\n            refreshminmax = true\n        }\n\n        if (refreshminmax) {\n            // refresh entire mins/max\n            for (let r = 0; r < this.rows.length; ++r) {\n                const row = this.rows[r]\n                if (r == 0) {\n                    this.mins = row.data.slice(0)\n                    this.maxs = row.data.slice(0)\n                    this.rms = row.data.slice(0)\n                    this.sd = new Array(row.data.length).fill(0)\n                } else {\n                    const n = r\n                    for (let i = 0; i < row.data.length; ++i) {\n                        this.mins[i] = Math.min(this.mins[i], row.data[i])\n                        this.maxs[i] = Math.max(this.maxs[i], row.data[i])\n                        this.rms[i] = Math.sqrt(\n                            (Math.pow(this.rms[i], 2) * (n - 1) +\n                                Math.pow(row.data[i], 2)) /\n                                n\n                        )\n                        this.sd[i] = Math.sqrt(\n                            (Math.pow(this.sd[i], 2) * (n - 1) +\n                                Math.pow(this.rms[i] - row.data[i], 2)) /\n                                n\n                        )\n                    }\n                }\n            }\n        } else {\n            // incremental update\n            if (!this.mins) {\n                this.mins = data.slice(0)\n                this.maxs = data.slice(0)\n                this.rms = data.slice(0)\n                this.sd = new Array(data.length).fill(0)\n            } else {\n                const n = this.rows.length\n                for (let i = 0; i < data.length; ++i) {\n                    this.mins[i] = Math.min(this.mins[i], data[i])\n                    this.maxs[i] = Math.max(this.maxs[i], data[i])\n                    this.rms[i] = Math.sqrt(\n                        (Math.pow(this.rms[i], 2) * (n - 1) +\n                            Math.pow(data[i], 2)) /\n                            n\n                    )\n                    this.sd[i] = Math.sqrt(\n                        (Math.pow(this.sd[i], 2) * (n - 1) +\n                            Math.pow(this.rms[i] - data[i], 2)) /\n                            n\n                    )\n                }\n            }\n        }\n\n        this.emit(CHANGE)\n    }\n\n    toCSV(sep = \",\", options?: { units?: boolean }) {\n        const allheaders = [\"time\", ...this.headers].join(sep)\n        const start = this.startTimestamp\n        const csv: string[] = [allheaders]\n        if (options?.units) csv.push([\"s\", ...this.units].join(sep))\n        this.rows.forEach(row =>\n            csv.push(\n                row\n                    .toVector(start)\n                    .map(cell => (cell !== undefined ? cell.toString() : \"\"))\n                    .join(sep)\n            )\n        )\n        return csv.join(\"\\n\")\n    }\n\n    toJSON() {\n        return {\n            name: this.name,\n            rows: this.rows,\n            headers: this.headers,\n            units: this.units,\n            colors: this.colors,\n        }\n    }\n}\n","import { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport useServiceServer from \"./useServiceServer\"\n\nexport default function useRegisterServer(register: JDRegister) {\n    const server = useServiceServer(register?.service)\n    return server?.register(register?.code)\n}\n","import { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"./useRegister\"\n\nexport default function useReadingAuxilliaryValue(\n    register: JDRegister,\n    identifier: number = SystemReg.ReadingError |\n        SystemReg.ReadingResolution |\n        SystemReg.MaxReading |\n        SystemReg.MinReading |\n        SystemReg.MinValue |\n        SystemReg.MaxValue |\n        SystemReg.StreamingInterval |\n        SystemReg.StreamingPreferredInterval,\n    options?: { visible?: boolean }\n): number[] {\n    const { service, code } = register || {}\n    const { visible } = options || { visible: true }\n    const reading = code === SystemReg.Reading || code === SystemReg.Value\n    const auxilliaryRegister = useRegister(reading ? service : undefined, identifier)\n    return useRegisterUnpackedValue<[number]>(auxilliaryRegister, { visible })\n}\n","import { Box, Typography } from \"@mui/material\"\nimport DeviceName from \"./devices/DeviceName\"\nimport Alert from \"./ui/Alert\"\nimport React, { useEffect, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport { REPORT_UPDATE, SystemReg } from \"../../jacdac-ts/src/jdom/constants\"\nimport MembersInput from \"./fields/MembersInput\"\nimport RegisterTrend from \"./RegisterTrend\"\nimport IconButtonWithProgress from \"./ui/IconButtonWithProgress\"\nimport useRegisterServer from \"./hooks/useRegisterServer\"\nimport useReadingAuxilliaryValue from \"./hooks/useReadingAuxilliaryValue\"\nimport useChange from \"../jacdac/useChange\"\nimport { isReadOnlyRegister } from \"../../jacdac-ts/src/jdom/spec\"\nimport useSnackbar from \"./hooks/useSnackbar\"\nimport { humanify } from \"../../jacdac-ts/jacdac-spec/spectool/jdspec\"\n\nexport type RegisterInputVariant = \"widget\" | \"\"\n\nexport default function RegisterInput(props: {\n    register: JDRegister\n    showDeviceName?: boolean\n    showServiceName?: boolean\n    showRegisterName?: boolean\n    hideMissingValues?: boolean\n    showTrend?: boolean\n    showDataType?: boolean\n    variant?: RegisterInputVariant\n    off?: boolean\n    toggleOff?: () => void\n    visible?: boolean\n    controlled?: boolean\n}) {\n    const {\n        register,\n        showRegisterName,\n        showDeviceName,\n        showServiceName,\n        hideMissingValues,\n        showTrend,\n        showDataType,\n        variant,\n        off,\n        toggleOff,\n        visible,\n        controlled,\n    } = props\n    const { service, specification } = register\n    const { device } = service\n    const { fields, code } = register\n    const { setError: setAppError } = useSnackbar()\n    const [working, setWorking] = useState(false)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [args, setArgs] = useState<any[]>(register.unpackedValue || [])\n    const server = useRegisterServer(register)\n    const hasSet =\n        specification.kind === \"rw\" ||\n        (server && specification.kind !== \"const\")\n    const hasData = useChange(register, _ => !!_.data)\n    const color = hasSet ? \"secondary\" : \"primary\"\n    const regProps = visible !== undefined ? { visible } : undefined\n    const isReading = code === SystemReg.Reading\n    const isValue = !isReading && code === SystemReg.Value\n    const min = useReadingAuxilliaryValue(\n        register,\n        isReading\n            ? SystemReg.MinReading\n            : isValue\n            ? SystemReg.MinValue\n            : undefined,\n        regProps\n    )\n    const max = useReadingAuxilliaryValue(\n        register,\n        isReading\n            ? SystemReg.MaxReading\n            : isValue\n            ? SystemReg.MaxValue\n            : undefined,\n        regProps\n    )\n    const readingError = useReadingAuxilliaryValue(\n        register,\n        SystemReg.ReadingError,\n        regProps\n    )\n    const resolution = useReadingAuxilliaryValue(\n        register,\n        SystemReg.ReadingResolution,\n        regProps\n    )\n\n    useEffect(() => {\n        const vs = register.unpackedValue\n        if (vs !== undefined) setArgs(vs)\n        return visible\n            ? register.subscribe(REPORT_UPDATE, () => {\n                  const vs = register.unpackedValue\n                  if (vs !== undefined) setArgs(vs)\n              })\n            : undefined\n    }, [register, visible])\n    const handleRefresh = () => {\n        register.refresh(true)\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const sendArgs = async (values: any[]) => {\n        if (working) return\n        try {\n            setWorking(true)\n            if (server) server.setValues(values)\n            // don't send set commands to rw registers\n            if (!isReadOnlyRegister(register.specification))\n                await register.sendSetPackedAsync(values, true)\n            // force refresh in any case\n            register.scheduleRefresh()\n        } catch (e) {\n            setAppError(e)\n        } finally {\n            setWorking(false)\n        }\n    }\n\n    if (!specification)\n        return (\n            <Alert severity=\"error\">{`Unknown member ${register.service}:${register.code}`}</Alert>\n        )\n\n    if (!fields.length) return null // nothing to see here\n\n    if (hideMissingValues && !hasData) return null\n\n    const serviceName = register.service.name\n        .toLocaleLowerCase()\n        .replace(/_/g, \" \")\n    const registerName = humanify(specification.name)\n    return (\n        <>\n            {showDeviceName && (\n                <Typography component=\"span\" key=\"devicenamename\">\n                    <DeviceName device={device} />/\n                </Typography>\n            )}\n            {showServiceName && specification && (\n                <Typography\n                    variant=\"caption\"\n                    key=\"servicename\"\n                    aria-label={serviceName}\n                >\n                    {serviceName}\n                </Typography>\n            )}\n            {showRegisterName &&\n                specification &&\n                serviceName !== registerName && (\n                    <Typography\n                        variant=\"caption\"\n                        key=\"registername\"\n                        aria-label={registerName}\n                    >\n                        {\" \" + registerName}\n                    </Typography>\n                )}\n            {!hasData && (\n                <Box>\n                    <IconButtonWithProgress\n                        title={`refresh ${registerName}`}\n                        indeterminate={true}\n                        onClick={handleRefresh}\n                    />\n                </Box>\n            )}\n            {showTrend && hasData && (\n                <RegisterTrend register={register} mini={false} horizon={24} />\n            )}\n            {hasData && (\n                <MembersInput\n                    color={color}\n                    serviceSpecification={service.specification}\n                    serviceMemberSpecification={specification}\n                    specifications={fields.map(f => f.specification)}\n                    values={args}\n                    setValues={hasSet && sendArgs}\n                    showDataType={showDataType}\n                    variant={variant}\n                    min={min}\n                    max={max}\n                    resolution={resolution}\n                    error={readingError}\n                    off={off}\n                    toggleOff={toggleOff}\n                    controlled={controlled}\n                />\n            )}\n        </>\n    )\n}\n","import React, { useCallback, useContext, useEffect, useMemo } from \"react\"\nimport { REPORT_RECEIVE } from \"../../jacdac-ts/src/jdom/constants\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport FieldDataSet from \"./FieldDataSet\"\nimport Trend from \"./Trend\"\nimport useChartPalette from \"./useChartPalette\"\nimport useInterval from \"./hooks/useInterval\"\n\nconst DEFAULT_HORIZON = 255\nconst DEFAULT_HEIGHT = 12\n\nexport default function RegisterTrend(props: {\n    register: JDRegister\n    showName?: boolean\n    horizon?: number\n    height?: number\n    mini?: boolean\n    interval?: number\n}) {\n    const {\n        register,\n        mini,\n        horizon = DEFAULT_HORIZON,\n        height,\n        interval,\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const palette = useChartPalette()\n    const dataSet = useMemo(\n        () =>\n            FieldDataSet.create(\n                bus,\n                [register],\n                \"output\",\n                palette,\n                horizon * 1.2\n            ),\n        [register, palette]\n    )\n    const addRow = useCallback(() => dataSet.addRow(), [dataSet])\n    // register on change if no intervals\n    useEffect(\n        () =>\n            interval ? undefined : register?.subscribe(REPORT_RECEIVE, addRow),\n        [interval, register, addRow]\n    )\n    useInterval(!!interval, addRow, interval)\n\n    return (\n        <Trend\n            dataSet={dataSet}\n            horizon={horizon}\n            gradient={true}\n            height={height || DEFAULT_HEIGHT}\n            mini={mini}\n            yAxis={true}\n        />\n    )\n}\n","import React from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport FieldDataSet, { Example } from \"./FieldDataSet\"\nimport { roundWithPrecision, unique } from \"../../jacdac-ts/src/jdom/utils\"\nimport { Paper } from \"@mui/material\"\nimport useWidgetTheme from \"./widgets/useWidgetTheme\"\nimport useUnitConverter from \"./ui/useUnitConverter\"\nimport useChange from \"../jacdac/useChange\"\n\nconst PREFIX = \"Trend\"\n\nconst classes = {\n    graph: `${PREFIX}graph`,\n    mini: `${PREFIX}mini`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.graph}`]: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n\n    [`& .${classes.mini}`]: {\n        display: \"inline-block\",\n        width: \"10rem\",\n    },\n}))\n\nexport interface TrendProps {\n    dataSet: FieldDataSet\n    dot?: boolean\n    gradient?: boolean\n}\n\nfunction UnitTrendChart(\n    props: {\n        data: Example[]\n        useGradient: boolean\n        unit: string\n        vpw: number\n        vph: number\n        yAxis?: boolean\n    } & TrendProps\n) {\n    const { dataSet, useGradient, data, unit, vpw, vph, dot, yAxis } = props\n    const { name: unitName, converter: unitConverter } = useUnitConverter(unit)\n    const { textPrimary } = useWidgetTheme(\"primary\")\n    const shape = unit == \"#\" ? \"step\" : \"line\"\n    const symmetric = unit == \"g\" ? true : false\n\n    useChange(dataSet)\n    const indexes = dataSet.units\n        .map((u, index) => ((u || \"/\") === unit ? index : undefined))\n        .filter(index => index !== undefined)\n    const colors = indexes.map(i => dataSet.colors[i])\n    const times = data.map(ex => ex.timestamp)\n    const maxt = Math.max.apply(null, times)\n    const mint = Math.min.apply(null, times)\n    let minv = unitConverter(\n        unit == \"/\"\n            ? 0\n            : Math.min.apply(\n                  null,\n                  indexes.map(i => dataSet.mins[i])\n              )\n    )\n    let maxv = unitConverter(\n        unit == \"/\"\n            ? 1\n            : Math.max.apply(\n                  null,\n                  indexes.map(i => dataSet.maxs[i])\n              )\n    )\n    const opposite = unit != \"/\" && Math.sign(minv) != Math.sign(maxv)\n    if (isNaN(minv) && isNaN(maxv)) {\n        minv = 0\n        maxv = 1\n    }\n    if (symmetric) {\n        maxv = Math.max(Math.abs(minv), Math.abs(maxv))\n        minv = -maxv\n    }\n\n    const step = undefined\n    const precision =\n        step === undefined ? 1 : step < 1 ? Math.ceil(-Math.log10(step)) : 0\n    minv = roundWithPrecision(minv, precision, Math.floor)\n    maxv = roundWithPrecision(maxv, precision, Math.ceil)\n    const rv = maxv - minv\n\n    const margin = 2\n    const h = maxv - minv || 10\n    const w = maxt - mint || 10\n\n    const strokeWidth = 0.25\n    const axisWidth = 0.2\n    const axisColor = \"#ccc\"\n    const pointRadius = strokeWidth * 1.5\n    const toffset = -pointRadius * 3\n    const fontSize = \"0.3rem\"\n\n    const x = (t: number) => {\n        return ((t - mint) / w) * vpw\n    }\n    const y = (v: number) => {\n        if (v === undefined || isNaN(v)) v = minv\n        // adding random for lineragradient bug workaround\n        // which does not render perfectly\n        // horizontal lines\n        return (\n            ((Math.random() * 0.0001 * rv - (unitConverter(v) - minv)) / h) *\n            (vph - 2 * margin)\n        )\n    }\n    const lastRow = data[data.length - 1]\n\n    return (\n        <>\n            {useGradient && (\n                <defs>\n                    <linearGradient\n                        key={`gradaxis`}\n                        id={`gradientaxis`}\n                        x1=\"0%\"\n                        y1=\"0%\"\n                        x2=\"100%\"\n                        y2=\"0%\"\n                    >\n                        <stop\n                            offset=\"0%\"\n                            stopOpacity=\"0\"\n                            stopColor={axisColor}\n                        />\n                        <stop\n                            offset=\"5%\"\n                            stopOpacity=\"0\"\n                            stopColor={axisColor}\n                        />\n                        <stop\n                            offset=\"40%\"\n                            stopOpacity=\"1\"\n                            stopColor={axisColor}\n                        />\n                        <stop\n                            offset=\"100%\"\n                            stopOpacity=\"1\"\n                            stopColor={axisColor}\n                        />\n                    </linearGradient>\n                    {indexes.map((index, i) => (\n                        <linearGradient\n                            key={`grad${i}`}\n                            id={`gradient${index}`}\n                            x1=\"0%\"\n                            y1=\"0%\"\n                            x2=\"100%\"\n                            y2=\"0%\"\n                        >\n                            <stop\n                                offset=\"0%\"\n                                stopOpacity=\"0\"\n                                stopColor={colors[i]}\n                            />\n                            <stop\n                                offset=\"5%\"\n                                stopOpacity=\"0\"\n                                stopColor={colors[i]}\n                            />\n                            <stop\n                                offset=\"40%\"\n                                stopOpacity=\"1\"\n                                stopColor={colors[i]}\n                            />\n                            <stop\n                                offset=\"100%\"\n                                stopOpacity=\"1\"\n                                stopColor={colors[i]}\n                            />\n                        </linearGradient>\n                    ))}\n                </defs>\n            )}\n            <g transform={`translate(${toffset}, ${vph - margin})`}>\n                {yAxis && (\n                    <g>\n                        <text\n                            x={margin}\n                            y={-vph + margin + margin / 2}\n                            dominantBaseline=\"hanging\"\n                            fontSize={fontSize}\n                            fill={textPrimary}\n                        >\n                            {maxv}\n                            {unitName}\n                        </text>\n                        <text\n                            x={margin}\n                            y={margin - margin / 2}\n                            fontSize={fontSize}\n                            fill={textPrimary}\n                        >\n                            {minv}\n                            {unitName}\n                        </text>\n                    </g>\n                )}\n                {opposite && (\n                    <line\n                        x1={x(mint)}\n                        x2={x(maxt)}\n                        y1={y(0)}\n                        y2={y(0)}\n                        strokeWidth={axisWidth}\n                        stroke={useGradient ? `url(#gradientaxis)` : axisColor}\n                    />\n                )}\n                {indexes.map((index, i) => {\n                    const color = colors[i]\n                    const path =\n                        shape == \"step\"\n                            ? data\n                                  .map((row, ri) =>\n                                      ri == 0\n                                          ? `M ${x(row.timestamp)} ${y(\n                                                row.data[index]\n                                            )}`\n                                          : `H ${x(row.timestamp)} V ${y(\n                                                row.data[index]\n                                            )}`\n                                  )\n                                  .join(\" \")\n                            : data\n                                  .map(\n                                      (row, ri) =>\n                                          `${ri == 0 ? `M` : `L`} ${x(\n                                              row.timestamp\n                                          )} ${y(row.data[index])}`\n                                  )\n                                  .join(\" \")\n                    return (\n                        <g key={`line${index}`}>\n                            <path\n                                d={path}\n                                fill=\"none\"\n                                stroke={\n                                    useGradient\n                                        ? `url(#gradient${index})`\n                                        : color\n                                }\n                                strokeWidth={strokeWidth}\n                                strokeLinejoin=\"round\"\n                            />\n                            {dot && (\n                                <circle\n                                    cx={x(lastRow.timestamp)}\n                                    cy={y(lastRow.data[index])}\n                                    r={pointRadius}\n                                    fill={color}\n                                />\n                            )}\n                        </g>\n                    )\n                })}\n            </g>\n        </>\n    )\n}\n\nfunction UnitTrend(\n    props: {\n        unit: string\n        horizon?: number\n        width?: number\n        height?: number\n        mini?: boolean\n        yAxis?: boolean\n    } & TrendProps\n) {\n    const { dataSet, horizon, width, height, mini, gradient, yAxis } = props\n    const rows = useChange(dataSet, _ => _?.rows)\n\n    const vpw = width || 80\n    const vph = height || 15\n    const data = rows.slice(-horizon)\n    const useGradient = gradient || data.length < rows.length\n    return (\n        <Paper\n            className={classes.graph}\n            variant=\"outlined\"\n            elevation={0}\n            square\n        >\n            <svg\n                viewBox={`0 0 ${vpw} ${vph}`}\n                style={{ maxHeight: mini ? \"5vh\" : \"10vh\", maxWidth: \"100%\" }}\n            >\n                {data.length > 1 && (\n                    <UnitTrendChart\n                        data={data}\n                        useGradient={useGradient}\n                        vpw={vpw}\n                        vph={vph}\n                        dot={true}\n                        yAxis={yAxis}\n                        {...props}\n                    />\n                )}\n            </svg>\n        </Paper>\n    )\n}\n\nexport default function Trend(\n    props: {\n        horizon?: number\n        width?: number\n        height?: number\n        mini?: boolean\n        yAxis?: boolean\n    } & TrendProps\n) {\n    const { dataSet, mini, yAxis } = props\n\n    const units = useChange(dataSet, _ => unique(_?.units.filter(u => !!u)))\n    return (\n        <Root className={mini ? classes.mini : undefined}>\n            {units.map(unit => (\n                <UnitTrend\n                    key={`graph${unit}`}\n                    mini={mini}\n                    yAxis={yAxis}\n                    unit={unit}\n                    {...props}\n                />\n            ))}\n        </Root>\n    )\n}\n","import React, { CSSProperties, useRef } from \"react\"\nimport { Grid, Slider, Typography } from \"@mui/material\"\nimport { renderWithPrecision } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useWidgetTheme from \"./useWidgetTheme\"\nimport useUnitConverter from \"../ui/useUnitConverter\"\n/// <reference path=\"../../../jacdac-ts/jacdac-spec/spectool/jdspec.d.ts\" />\n\nfunction useDebouncedValueTextLength(valueText: string) {\n    const valueTextLength = valueText.length\n    const debouncedRef = useRef(valueTextLength)\n    const alpha = 0.05\n    if (debouncedRef.current < valueTextLength)\n        debouncedRef.current = valueTextLength\n    else\n        debouncedRef.current =\n            debouncedRef.current * (1 - alpha) + valueTextLength * alpha\n    return Math.ceil(debouncedRef.current)\n}\n\nexport default function ValueWithUnitWidget(props: {\n    value: number\n    unit: jdspec.Unit\n    min?: number\n    max?: number\n    step?: number\n    icon?: JSX.Element\n    secondaryLabel?: string\n    tabIndex?: number\n    color?: \"primary\" | \"secondary\"\n    size?: string\n    onChange?: (newValue: number) => void\n}) {\n    const { step, secondaryLabel, icon, unit, tabIndex, color, onChange } =\n        props\n    const {\n        name: unitName,\n        converter: unitConverter,\n        inverter: unitInverter,\n    } = useUnitConverter(unit)\n\n    // map all values with unit converters\n    const { value, min, max } = {\n        value: unitConverter(props.value),\n        min: unitConverter(props.min),\n        max: unitConverter(props.max),\n    }\n\n    const precision =\n        step === undefined ? 1 : step < 1 ? Math.ceil(-Math.log10(step)) : 0\n    const hasValue = !isNaN(value)\n    const valueText = hasValue ? renderWithPrecision(value, precision) : \"--\"\n    const valueTextLength = useDebouncedValueTextLength(valueText)\n    const { textPrimary } = useWidgetTheme(color)\n    const valueVariant =\n        valueTextLength < 7\n            ? \"h2\"\n            : valueTextLength < 9\n            ? \"h3\"\n            : valueTextLength < 12\n            ? \"h4\"\n            : \"h6\"\n    const valueStyle: CSSProperties = {\n        color: textPrimary,\n        minWidth: `${valueTextLength / 2}em`,\n        fontVariantNumeric: \"tabular-nums\",\n    }\n    const unitStyle: CSSProperties = {\n        color: textPrimary,\n    }\n    const captionStyle: CSSProperties = {\n        color: textPrimary,\n    }\n\n    const handleChange = (event: unknown, newValue: number | number[]) => {\n        const v = newValue as number\n        const iv = unitInverter(v)\n        onChange(iv)\n    }\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            tabIndex={tabIndex}\n            aria-label={`${valueText} ${unitName || \"\"}`}\n        >\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" alignContent=\"flex-end\">\n                    <Grid item>\n                        <Typography\n                            role=\"timer\"\n                            align=\"right\"\n                            variant={valueVariant}\n                            style={valueStyle}\n                        >\n                            {icon}\n                            {valueText}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Grid\n                            container\n                            direction=\"column\"\n                            alignContent=\"space-between\"\n                        >\n                            {unitName && (\n                                <Grid item>\n                                    <Typography\n                                        style={unitStyle}\n                                        variant={\"caption\"}\n                                    >\n                                        {unitName}\n                                    </Typography>\n                                </Grid>\n                            )}\n                            {secondaryLabel && (\n                                <Grid item>\n                                    <Typography\n                                        style={captionStyle}\n                                        variant={\"caption\"}\n                                    >\n                                        {secondaryLabel}\n                                    </Typography>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {onChange && value !== undefined && (\n                <Grid item xs={12}>\n                    <Slider\n                        valueLabelDisplay=\"off\"\n                        color=\"secondary\"\n                        min={min}\n                        max={max}\n                        step={step}\n                        value={value}\n                        onChange={handleChange}\n                        aria-label={unitName || secondaryLabel}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport HumidityIcon from \"../icons/HumidityIcon\"\nimport TemperatureIcon from \"../icons/TemperatureIcon\"\nimport { resolveUnit } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport { SvgIconProps } from \"@mui/material\"\n\nexport default (unit: string, props?: SvgIconProps) => {\n    const { unit: runit } = resolveUnit(unit) || {}\n    switch (runit) {\n        case \"%RH\":\n            return <HumidityIcon {...props} />\n        case \"°C\":\n        case \"K\":\n            return <TemperatureIcon {...props} />\n        default:\n            return null\n    }\n}\n","import React, { useEffect, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { FormControlLabel, Slider, SelectChangeEvent } from \"@mui/material\"\nimport { MenuItem, Select, Switch, TextField } from \"@mui/material\"\nimport {\n    flagsToValue,\n    prettyMemberUnit,\n    prettyUnit,\n    valueToFlags,\n} from \"../../../jacdac-ts/src/jdom/pretty\"\nimport {\n    isIntegerType,\n    isValueOrIntensity,\n    memberValueToString,\n    tryParseMemberValue,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport {\n    isSet,\n    pick,\n    roundWithPrecision,\n} from \"../../../jacdac-ts/src/jdom/utils\"\nimport { RegisterInputVariant } from \"../RegisterInput\"\nimport ButtonWidget from \"../widgets/ButtonWidget\"\nimport GaugeWidget from \"../widgets/GaugeWidget\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport ValueWithUnitWidget from \"../widgets/ValueWithUnitWidget\"\nimport useUnitIcon from \"../hooks/useUnitIcon\"\nimport { PackedSimpleValue } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { useId } from \"react\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\n\nexport default function MemberInput(props: {\n    specification: jdspec.PacketMember\n    serviceSpecification: jdspec.ServiceSpec\n    serviceMemberSpecification: jdspec.PacketInfo\n    value: PackedSimpleValue\n    setValue?: (v: PackedSimpleValue) => void\n    showDataType?: boolean\n    color?: \"primary\" | \"secondary\"\n    variant?: RegisterInputVariant\n    min?: number\n    max?: number\n    resolution?: number\n    error?: number\n    showLoading?: boolean\n    off?: boolean\n    toggleOff?: () => void\n    controlled?: boolean\n}) {\n    const {\n        specification,\n        serviceSpecification,\n        serviceMemberSpecification,\n        value,\n        setValue,\n        showDataType,\n        color,\n        variant,\n        min,\n        max,\n        resolution,\n        error,\n        showLoading,\n        off,\n        toggleOff,\n        controlled,\n    } = props\n    const { typicalMin, typicalMax, absoluteMin, absoluteMax, type } =\n        specification\n    const { kind } = serviceMemberSpecification\n    const enumInfo = serviceSpecification.enums?.[specification.type]\n    const disabled = !setValue\n    const readOnly = disabled || (controlled && kind !== \"ro\")\n    const [errorText, setErrorText] = useState(\"\")\n    const [textValue, setTextValue] = useState(\"\")\n    const valueString = memberValueToString(value, specification)\n    const name =\n        specification.name === \"_\"\n            ? serviceMemberSpecification.name\n            : specification.name\n    const label = name\n    const isWidget = variant === \"widget\"\n    const widgetSize = useWidgetSize()\n    const unitIcon = useUnitIcon(specification.unit, { \"aria-label\": label })\n    const { textPrimary } = useWidgetTheme(color)\n\n    const minValue = pick(\n        min,\n        typicalMin,\n        absoluteMin,\n        /^u/.test(type) ? 0 : undefined\n    )\n    const maxValue = pick(max, typicalMax, absoluteMax)\n    const errorValue = error\n        ? \"±\" +\n          roundWithPrecision(\n              error,\n              1 - Math.floor(Math.log10(error))\n          ).toLocaleString()\n        : undefined\n    const unit = prettyUnit(specification.unit)\n    const helperText =\n        errorText ||\n        [prettyMemberUnit(specification, showDataType), errorValue]\n            .filter(v => v !== undefined)\n            .join(\", \")\n    const inputId = useId()\n\n    const inputType =\n        specification.type === \"string\" || specification.type === \"string0\"\n            ? \"string\"\n            : specification.isSimpleType || isIntegerType(specification.type)\n            ? \"number\"\n            : \"\"\n\n    // update coming from device\n    useEffect(() => {\n        setTextValue(valueString)\n    }, [valueString])\n\n    const handleChecked = (ev, checked: boolean) => {\n        setValue(checked)\n    }\n    const handleChange = ev => {\n        const newValue = ev.target.value\n        setTextValue(newValue)\n        const r = tryParseMemberValue(newValue, specification)\n        if (r.value !== undefined) setValue(r.value)\n        setErrorText(r.error)\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleEnumChange = (event: SelectChangeEvent<number | number[]>) => {\n        const v = enumInfo.isFlags\n            ? flagsToValue(event.target.value as number[])\n            : (event.target.value as number)\n        setValue(v)\n    }\n    const handleSliderChange = (ev: unknown, newValue: number | number[]) =>\n        setValue(newValue as number)\n    const handleSliderWidgetChange = (newValue: number) => setValue(newValue)\n\n    const percentValueFormat = (value: number) => {\n        // avoid super long floats\n        return ((value * 100) >> 0) + \"%\"\n    }\n\n    const valueLabelFormat = (value: number) => {\n        // avoid super long floats\n        return roundWithPrecision(value, 1) + (unit || \"\")\n    }\n    const percentValueLabelFormat = (v: number) => {\n        return `${Math.round(v * 100)}%`\n    }\n    const offFormat = () => \"off\"\n\n    // value hasn't been loaded yet\n    if (serviceMemberSpecification.kind !== \"command\" && value === undefined) {\n        if (showLoading) return <LoadingProgress />\n        else return null\n    }\n\n    //\n    if (specification.type === \"pipe\") {\n        return (\n            <>\n                pipe <code>{specification.name}</code>\n            </>\n        )\n    } else if (specification.type === \"bool\") {\n        if (isWidget && !isValueOrIntensity(serviceMemberSpecification)) {\n            return (\n                <ButtonWidget\n                    label={!isWidget && label}\n                    checked={!!value}\n                    color={color}\n                    size={widgetSize}\n                />\n            )\n        }\n\n        return (\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={!!value}\n                        onChange={readOnly ? undefined : handleChecked}\n                        color={color}\n                    />\n                }\n                label={<span style={{ color: textPrimary }}>{label}</span>}\n            />\n        )\n    } else if (enumInfo !== undefined) {\n        return (\n            <Select\n                aria-label={label}\n                disabled={disabled}\n                multiple={enumInfo.isFlags}\n                value={\n                    enumInfo.isFlags\n                        ? valueToFlags(enumInfo, value as number)\n                        : (value as number)\n                }\n                onChange={!controlled ? handleEnumChange : undefined}\n            >\n                {Object.keys(enumInfo.members).map(n => (\n                    <MenuItem key={n} value={enumInfo.members[n]}>\n                        {n}\n                    </MenuItem>\n                ))}\n            </Select>\n        )\n    } else if (specification.unit === \"/\") {\n        const signed = specification.storage < 0\n        const min = signed ? -1 : 0\n        const max = 1\n        const step = resolution !== undefined ? resolution : 0.01\n        const digits = Math.ceil(-Math.log10(step))\n        const nvalue = roundWithPrecision(value as number, digits)\n        if (isWidget) {\n            const size = `clamp(6rem, 12vw, 12vh)`\n            return (\n                <GaugeWidget\n                    tabIndex={0}\n                    label={label}\n                    size={size}\n                    value={nvalue}\n                    color={color}\n                    variant={signed ? \"fountain\" : undefined}\n                    min={min}\n                    max={max}\n                    step={step}\n                    valueLabel={percentValueLabelFormat}\n                    onChange={readOnly ? undefined : handleSliderWidgetChange}\n                    off={off}\n                    toggleOff={readOnly ? undefined : toggleOff}\n                />\n            )\n        }\n\n        return (\n            <Slider\n                aria-label={label}\n                color={color}\n                value={nvalue}\n                valueLabelFormat={percentValueFormat}\n                onChange={readOnly ? undefined : handleSliderChange}\n                min={min}\n                max={max}\n                step={step}\n                valueLabelDisplay=\"auto\"\n            />\n        )\n    } else if (isSet(minValue) && isSet(maxValue)) {\n        const hasTypicalRange = isSet(typicalMin) && isSet(typicalMax)\n        let step =\n            resolution !== undefined\n                ? resolution\n                : hasTypicalRange\n                ? (specification.typicalMax - specification.typicalMin) / 100\n                : (maxValue - minValue) / 100\n        if (step === 0 || isNaN(step))\n            // edge case\n            step = undefined\n        const marks =\n            hasTypicalRange &&\n            (typicalMin !== minValue || typicalMax !== maxValue)\n                ? [\n                      {\n                          value: typicalMin,\n                      },\n                      {\n                          value: typicalMax,\n                      },\n                  ]\n                : undefined\n        if (isWidget)\n            return (\n                <ValueWithUnitWidget\n                    tabIndex={0}\n                    unit={specification.unit}\n                    value={value as number}\n                    min={minValue}\n                    max={maxValue}\n                    icon={unitIcon}\n                    step={step}\n                    secondaryLabel={errorValue}\n                    color={color}\n                    onChange={readOnly ? undefined : handleSliderWidgetChange}\n                />\n            )\n\n        return (\n            <Slider\n                value={value as number}\n                color={color}\n                valueLabelFormat={off ? offFormat : valueLabelFormat}\n                onChange={readOnly ? undefined : handleSliderChange}\n                min={minValue}\n                max={maxValue}\n                step={step}\n                marks={marks}\n                valueLabelDisplay=\"auto\"\n            />\n        )\n    } else if (specification.type === \"bytes\") {\n        return (\n            <TextField\n                id={inputId}\n                spellCheck={false}\n                value={textValue}\n                label={label}\n                inputProps={{\n                    [\"aria-label\"]: label,\n                    [\"aria-readonly\"]: disabled,\n                    readOnly: disabled,\n                }}\n                helperText={helperText}\n                onChange={readOnly ? undefined : handleChange}\n                required={value === undefined}\n                error={!!errorText}\n                type={\"text\"}\n            />\n        )\n    } else {\n        // numbers or string or uintarrays\n        if (isWidget)\n            // we need min/max to support a slider\n            return (\n                <ValueWithUnitWidget\n                    tabIndex={0}\n                    value={roundWithPrecision(value as number, 1)}\n                    unit={specification.unit}\n                    color={color}\n                    size={widgetSize}\n                />\n            )\n\n        return (\n            <TextField\n                id={inputId}\n                spellCheck={false}\n                value={textValue}\n                label={label}\n                inputProps={{\n                    \"aria-label\": label,\n                    \"aria-readonly\": disabled,\n                    readOnly: disabled,\n                }}\n                helperText={helperText}\n                onChange={readOnly ? undefined : handleChange}\n                required={value === undefined}\n                error={!!errorText}\n                type={inputType}\n            />\n        )\n    }\n}\n","import { Grid } from \"@mui/material\"\nimport React from \"react\"\nimport { PackedSimpleValue } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { RegisterInputVariant } from \"../RegisterInput\"\nimport MemberInput from \"./MemberInput\"\n\nexport default function MembersInput(props: {\n    serviceSpecification: jdspec.ServiceSpec\n    serviceMemberSpecification?: jdspec.PacketInfo\n    specifications: jdspec.PacketMember[]\n    values?: PackedSimpleValue[]\n    setValues?: (values: PackedSimpleValue[]) => void\n    showDataType?: boolean\n    color?: \"primary\" | \"secondary\"\n    variant?: RegisterInputVariant\n    min?: number[]\n    max?: number[]\n    resolution?: number[]\n    error?: number[]\n    off?: boolean\n    toggleOff?: () => void\n    controlled?: boolean\n}) {\n    const {\n        serviceSpecification,\n        serviceMemberSpecification,\n        specifications,\n        values,\n        setValues,\n        showDataType,\n        color,\n        variant,\n        min,\n        max,\n        resolution,\n        error,\n        off,\n        toggleOff,\n        controlled,\n    } = props\n    const setValue = (index: number) => (value: PackedSimpleValue) => {\n        const c = values.slice(0)\n        c[index] = value\n        setValues(c)\n    }\n\n    return (\n        <Grid container spacing={1} direction=\"column\">\n            {specifications.map((field, fieldi) => {\n                const value = values?.[fieldi]\n                return (\n                    <Grid item key={fieldi} xs={12}>\n                        <MemberInput\n                            serviceSpecification={serviceSpecification}\n                            serviceMemberSpecification={\n                                serviceMemberSpecification\n                            }\n                            specification={field}\n                            showDataType={showDataType}\n                            value={value}\n                            color={color}\n                            setValue={values && setValues && setValue(fieldi)}\n                            variant={variant}\n                            min={min?.[fieldi]}\n                            max={max?.[fieldi]}\n                            resolution={resolution?.[fieldi]}\n                            error={error?.[fieldi]}\n                            off={off}\n                            toggleOff={toggleOff}\n                            controlled={controlled}\n                        />\n                    </Grid>\n                )\n            })}\n        </Grid>\n    )\n}\n","import { KeyboardEvent, PointerEvent } from \"react\"\n\nconst ENTER_KEY = 13\nconst SPACE_KEY = 32\n\nexport function keyCodeFromEvent(e: KeyboardEvent) {\n    return typeof e.which == \"number\" ? e.which : e.keyCode\n}\n\nexport default function useFireKey<TElement extends Element>(\n    handler: (ev?: PointerEvent<TElement>) => void\n): (e: KeyboardEvent<TElement>) => void {\n    if (!handler) return undefined\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e)\n        if (charCode === ENTER_KEY || charCode === SPACE_KEY) {\n            e.preventDefault()\n            handler()\n        }\n    }\n}\n","import { DependencyList, useMemo } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { JDServiceServer } from \"../../../jacdac-ts/src/jdom/servers/serviceserver\"\nimport useServiceProvider from \"./useServiceProvider\"\n\nexport default function useServiceServer<T extends JDServiceServer>(\n    service: JDService,\n    createTwin?: () => T,\n    deps?: DependencyList\n) {\n    const device = service?.device\n    const provider = useServiceProvider(device)\n    const twin = useMemo<T>(() => {\n        if (provider) return undefined\n        let twin = service?.twin as T\n        if (!twin && service && createTwin) {\n            twin = createTwin()\n            if (twin) service.twin = twin\n        }\n        return twin\n    }, [device, provider, service?.changeId, ...(deps || [])])\n    return (provider?.service(service?.serviceIndex) as T) || twin\n}\n","import { SVGProps } from \"react\"\nimport useFireKey from \"./useFireKey\"\n\nexport default function useSvgButtonProps<T extends SVGElement>(\n    label: string,\n    onDown?: (event: React.PointerEvent<T>) => void,\n    onUp?: (event: React.PointerEvent<T>) => void\n): SVGProps<T> {\n    const disabled = !onDown && !onUp\n    const fireDownOnEnter = useFireKey(onDown)\n    const fireUpOnEnter = useFireKey(onUp)\n\n    const preventify = (handler: (event: React.PointerEvent<T>) => void) => {\n        if (handler)\n            return (event: React.PointerEvent<T>) => {\n                event.preventDefault()\n                handler(event)\n            }\n        else return undefined\n    }\n\n    return {\n        className: disabled ? undefined : \"clickeable\",\n        role: disabled ? undefined : \"button\",\n        tabIndex: disabled ? undefined : 0,\n        [\"aria-label\"]: label,\n        onPointerDown: preventify(onDown),\n        onPointerUp: preventify(onUp),\n        onPointerLeave: preventify(onUp),\n        onKeyDown: fireDownOnEnter,\n        onKeyUp: fireUpOnEnter,\n    }\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\"\nimport React from \"react\"\n\nexport default (props: SvgIconProps) => (\n    <SvgIcon titleAccess=\"humidity logo\" {...props}>\n        <path d=\"M8.8-.03A49.327 49.327 0 00.956 11.112a8.824 8.824 0 1015.693 0A49.327 49.327 0 008.801-.029zm0 3.132a47.244 47.244 0 015.995 8.962 6.74 6.74 0 11-11.986 0A47.243 47.243 0 018.8 3.102z\" />\n    </SvgIcon>\n)\n","import { SvgIcon, SvgIconProps } from \"@mui/material\"\nimport React from \"react\"\n\nexport default (props: SvgIconProps) => (\n    <SvgIcon titleAccess=\"Temperature icon\" {...props}>\n        <path d=\"M11.365 14.761a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM11.365 12.062a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM11.365 9.363a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM11.365 6.663a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM11.365 3.964a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM4.04 3.26v14.207a1.979 1.978 0 101.284-.004V3.26a.642.642 0 00-1.285 0z\" />\n        <path d=\"M4.699 0a3.302 3.301 0 00-3.323 3.3v12.726a4.668 4.666 0 106.605.022V3.3A3.302 3.301 0 004.7 0zm-.047 1.303a2.01 2.008 0 012.041 2.009v13.37a3.354 3.352 0 11-4.017-.027V3.312a2.01 2.008 0 011.976-2.01z\" />\n    </SvgIcon>\n)\n","import { CircularProgress } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function LoadingProgress(props: { size?: string }) {\n    const { size } = props\n    return (\n        <CircularProgress\n            disableShrink\n            variant=\"indeterminate\"\n            size={size || \"1em\"}\n            aria-label=\"loading\"\n        />\n    )\n}\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../../../jacdac-ts/jacdac-spec/spectool/jdspec.d.ts\" />\nimport { prettyUnit } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\n\nconst adapters: Record<string, Record<string, (v: number) => number>> = {\n    \"°C\": {\n        \"°C\": v => v,\n        \"°F\": v => (9 / 5) * v + 32,\n    },\n    \"/\": {\n        \"/\": v => v,\n        \"%\": v => v * 100,\n    },\n    A: {\n        A: v => v,\n        mA: v => 1000 * v,\n    },\n}\nconst inverters: Record<string, Record<string, (v: number) => number>> = {\n    \"°F\": {\n        \"°C\": v => ((v - 32) * 5) / 9,\n    },\n    \"%\": {\n        \"/\": v => v / 100,\n    },\n    mA: {\n        A: v => v / 1000,\n    },\n}\n\nexport function useUnitConverters() {\n    const [settings, setSettings] = useLocalStorage(\"jacdac:unitconverters\", {})\n    return {\n        converters: Object.keys(adapters).map(unit => ({\n            unit,\n            name: settings[unit] || unit,\n            names: Object.keys(adapters[unit]),\n        })),\n        setConverter: (unit: string, name: string) => {\n            const newSettings = { ...settings }\n            newSettings[unit] = name\n            setSettings(newSettings)\n        },\n    }\n}\nconst identity = (v: number) => v\n\nexport default function useUnitConverter(unit: jdspec.Unit | string): {\n    name?: string\n    converter: (v: number) => number\n    inverter: (v: number) => number\n    names?: string[]\n} {\n    if (!unit)\n        return {\n            converter: v => v,\n            inverter: v => v,\n        }\n\n    const [settings] = useLocalStorage(\"jacdac:unitconverters\", {\n        \"/\": \"%\",\n        A: \"mA\",\n    })\n\n    const adapter = adapters[unit]\n    if (!adapter)\n        return {\n            name: prettyUnit(unit),\n            converter: v => v,\n            inverter: v => v,\n        }\n\n    const names = Object.keys(adapter)\n    const name = settings[unit] || names[0]\n    const converter = adapter[name] || identity\n    const inverter = inverters[name]?.[unit] || identity\n\n    return {\n        name,\n        converter,\n        inverter,\n        names,\n    }\n}\n","import { useContext, useMemo } from \"react\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\n\nexport default function useChartPalette(): string[] {\n    const { darkMode } = useContext(DarkModeContext)\n    const palette = useMemo(() => {\n        if (darkMode == \"light\")\n            return [\n                \"#003f5c\",\n                \"#ffa600\",\n                \"#665191\",\n                \"#a05195\",\n                \"#ff7c43\",\n                \"#d45087\",\n                \"#f95d6a\",\n                \"#2f4b7c\",\n            ]\n        else\n            return [\n                \"#60ccfe\",\n                \"#ffdd9e\",\n                \"#c3b9d8\",\n                \"#dcbbd7\",\n                \"#fecdb7\",\n                \"#eebcd1\",\n                \"#fcc1c6\",\n                \"#a1b6db\",\n            ]\n    }, [darkMode])\n    return palette\n}\n","import React from \"react\"\nimport SvgWidget from \"./SvgWidget\"\nimport useWidgetTheme from \"./useWidgetTheme\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\n\nexport default function ButtonWidget(props: {\n    checked?: boolean\n    label?: string\n    color?: \"primary\" | \"secondary\"\n    size?: string\n    onDown?: () => void\n    onUp?: () => void\n}) {\n    const { checked, label, color, size, onDown, onUp } = props\n    const { background, controlBackground, active } = useWidgetTheme(color)\n\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(label, onDown, onUp)\n    const w = 64\n    const mo = checked ? 3 : 5\n    const r = w / 2\n    const cx = r\n    const cy = r\n    const ri = r - mo\n    const rn = 8\n    return (\n        <SvgWidget width={w} size={size}>\n            <rect\n                x={0}\n                y={0}\n                rx={2}\n                ry={2}\n                width={w}\n                height={w}\n                fill={background}\n            />\n            <circle cx={rn} cy={rn} r={rn >> 1} fill={controlBackground} />\n            <circle cx={w - rn} cy={rn} r={rn >> 1} fill={controlBackground} />\n            <circle\n                cx={w - rn}\n                cy={w - rn}\n                r={rn >> 1}\n                fill={controlBackground}\n            />\n            <circle cx={rn} cy={w - rn} r={rn >> 1} fill={controlBackground} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={ri}\n                fill={checked ? active : controlBackground}\n                {...buttonProps}\n            />\n        </SvgWidget>\n    )\n}\n","import React, { CSSProperties, SVGAttributes, useRef } from \"react\"\nimport useWidgetTheme from \"./useWidgetTheme\"\nimport SvgWidget from \"./SvgWidget\"\nimport { closestPoint, describeArc, svgPointerPoint } from \"./svgutils\"\nimport PowerButton from \"./PowerButton\"\nimport { Grid, Slider } from \"@mui/material\"\n\nexport default function GaugeWidget(props: {\n    value: number\n    min: number\n    max: number\n    step?: number\n    label?: string\n    color?: \"primary\" | \"secondary\"\n    size?: string\n    variant?: \"fountain\"\n    tabIndex?: number\n    valueLabel?: (v: number) => string\n    onChange?: (newValue: number) => void\n    off?: boolean\n    toggleOff?: () => void\n}) {\n    const {\n        value,\n        color,\n        size,\n        min,\n        max,\n        step,\n        variant,\n        valueLabel,\n        off,\n        toggleOff,\n        onChange,\n        tabIndex,\n        label,\n    } = props\n    const { active, textProps, controlBackground } =\n        useWidgetTheme(color)\n\n    const sliderPathRef = useRef<SVGPathElement>()\n    const w = 120\n    const h = 120\n    const m = 8\n    const roff = 20\n    const riff = 10\n    const sw = m << 1\n    const cx = w >> 1\n    const cy = h >> 1\n    const r = (w >> 1) - m\n    const sa = -135\n    const ea = 135\n    const _step = step || (max - min) / 10\n    const displayValue = value //useThrottledValue(value, (max - min) * 10)\n\n    const computeArc = (v: number) => {\n        if (variant === \"fountain\") {\n            const mid = (ea + sa) / 2\n            const fraction = (v / (max - min)) * (ea - sa)\n            if (fraction < 0) return describeArc(cx, cy, r, mid + fraction, mid)\n            else return describeArc(cx, cy, r, mid, mid + fraction)\n        } else {\n            const fraction = (v - min) / (max - min)\n            const va = sa + fraction * (ea - sa)\n            return describeArc(cx, cy, r, sa, va)\n        }\n    }\n\n    const db = describeArc(cx, cy, r, sa, ea)\n    const dvalue = computeArc(value)\n    const dactual = computeArc(displayValue)\n    const lineCap = \"round\"\n    const tvalue =\n        valueLabel !== undefined\n            ? valueLabel(value)\n            : value === undefined\n            ? \"\"\n            : value + \"\"\n    const clickeable = !!onChange\n\n    const handlePointerDown = (ev: React.PointerEvent<SVGPathElement>) => {\n        ev.preventDefault()\n        if (!ev.buttons) return\n        const svg = sliderPathRef.current.ownerSVGElement\n        const pos = svgPointerPoint(svg, ev)\n        const closest = closestPoint(sliderPathRef.current, _step, pos)\n        onChange(min + (1 - closest) * (max - min))\n    }\n    const pointerStyle: CSSProperties = clickeable && {\n        cursor: \"pointer\",\n    }\n    const pathProps: SVGAttributes<SVGPathElement> = {\n        onPointerDown: clickeable ? handlePointerDown : undefined,\n        onPointerMove: clickeable ? handlePointerDown : undefined,\n        style: clickeable ? pointerStyle : undefined,\n    }\n    const handleSliderChange = (ev: unknown, newValue: number | number[]) =>\n        onChange(newValue as number)\n\n    return (\n        <Grid container direction=\"column\">\n            <Grid item>\n                <SvgWidget tabIndex={tabIndex} width={w} height={h} size={size}>\n                    <path\n                        ref={sliderPathRef}\n                        strokeWidth={sw}\n                        stroke={controlBackground}\n                        d={db}\n                        strokeLinecap={lineCap}\n                        fill=\"transparent\"\n                        {...pathProps}\n                    />\n                    {!off && (\n                        <path\n                            strokeWidth={sw}\n                            stroke={active}\n                            strokeLinecap={lineCap}\n                            d={dvalue}\n                            opacity={0.2}\n                            fill=\"transparent\"\n                            {...pathProps}\n                        />\n                    )}\n                    {!off && (\n                        <path\n                            strokeWidth={sw}\n                            stroke={active}\n                            strokeLinecap={lineCap}\n                            d={dactual}\n                            fill=\"transparent\"\n                            {...pathProps}\n                        />\n                    )}\n                    {off !== undefined ? (\n                        <PowerButton\n                            off={off}\n                            label={tvalue}\n                            cx={cx}\n                            cy={cy}\n                            r={roff}\n                            ri={riff}\n                            color={color}\n                            onClick={toggleOff}\n                        />\n                    ) : (\n                        <text {...textProps} x={cx} y={cy} aria-label={tvalue}>\n                            {tvalue}\n                        </text>\n                    )}\n                </SvgWidget>\n            </Grid>\n            {clickeable && (\n                <Grid item>\n                    <Slider\n                        aria-label={label}\n                        disabled={off}\n                        color={color}\n                        min={min}\n                        max={max}\n                        step={_step}\n                        valueLabelDisplay=\"off\"\n                        value={value}\n                        onChange={onChange ? handleSliderChange : undefined}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport { describeArc } from \"./svgutils\"\nimport useWidgetTheme from \"./useWidgetTheme\"\n\nexport default function PowerButton(props: {\n    cx: number\n    cy: number\n    r: number\n    ri: number\n    strokeWidth?: number\n    label?: string\n    color?: \"primary\" | \"secondary\"\n    off?: boolean\n    borderStroke?: string\n    onClick?: () => void\n}) {\n    const {\n        cx,\n        cy,\n        r,\n        ri,\n        onClick,\n        off,\n        color,\n        label,\n        strokeWidth,\n        borderStroke,\n    } = props\n    const { background, active, controlBackground, textProps } =\n        useWidgetTheme(color)\n    const a = 135\n    const d = describeArc(cx, cy, ri, -a, a, true)\n    const btnlabel = off ? \"turn on\" : \"turn off\"\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(btnlabel, onClick)\n    const sw = strokeWidth || 3\n    const iconStroke = off ? background : active\n\n    return (\n        <g aria-label={label}>\n            <title>{btnlabel}</title>\n            <circle\n                cx={cx}\n                cy={cy}\n                r={r}\n                fill={controlBackground}\n                strokeWidth={sw}\n                stroke={borderStroke || background}\n                {...buttonProps}\n            />\n            <g transform={`rotate(180, ${cx}, ${cy})`}>\n                <path\n                    d={d}\n                    strokeLinecap=\"round\"\n                    fill=\"none\"\n                    strokeWidth={sw}\n                    stroke={iconStroke}\n                    style={{ userSelect: \"none\", pointerEvents: \"none\" }}\n                />\n                <line\n                    strokeLinecap=\"round\"\n                    x1={cx}\n                    y1={cy + ri / 4}\n                    x2={cx}\n                    y2={cy + ri}\n                    stroke={iconStroke}\n                    strokeWidth={sw}\n                    style={{ userSelect: \"none\", pointerEvents: \"none\" }}\n                />\n            </g>\n            <text\n                aria-label={label}\n                x={cx}\n                y={cy + r + 8}\n                {...textProps}\n                fontSize={\"80%\"}\n            >\n                {label}\n            </text>\n        </g>\n    )\n}\n","import React, { ReactNode } from \"react\"\n\nexport default function SvgWidget(props: {\n    width: number\n    height?: number\n    size?: string\n    role?: string\n    title?: string\n    viewBox?: string\n    tabIndex?: number\n    background?: string\n    svgRef?: React.MutableRefObject<SVGSVGElement>\n    children: ReactNode\n}) {\n    const {\n        width,\n        height,\n        size = \"100%\",\n        background,\n        children,\n        role,\n        title,\n        viewBox,\n        tabIndex,\n        svgRef,\n    } = props\n    const h = height || width\n    const aspectRatio = width / height\n    const vertical = aspectRatio < 1\n\n    return (\n        <div\n            style={{\n                position: \"relative\",\n                height: vertical ? size : undefined,\n                width: vertical ? undefined : size,\n            }}\n        >\n            <svg\n                ref={svgRef}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                tabIndex={tabIndex}\n                viewBox={viewBox || `0 0 ${width} ${h}`}\n                aria-label={title}\n                style={{\n                    height: vertical ? \"100%\" : undefined,\n                    width: vertical ? undefined : \"100%\",\n                }}\n                role={role || \"group\"}\n            >\n                {background && (\n                    <rect\n                        x={0}\n                        y={0}\n                        width={width}\n                        height={height}\n                        fill={background}\n                        rx={1}\n                        ry={1}\n                    />\n                )}\n                {children}\n            </svg>\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport function svgPointerPoint(\n    svg: SVGSVGElement,\n    event: React.PointerEvent\n): DOMPoint {\n    const point = svg.createSVGPoint()\n    point.x = event.clientX\n    point.y = event.clientY\n    const res = point.matrixTransform(svg.getScreenCTM().inverse())\n    return res\n}\n\nexport function closestPoint(\n    pathNode: SVGPathElement,\n    step: number,\n    point: DOMPoint\n): number {\n    const pathLength = pathNode.getTotalLength()\n\n    const distance2 = (p: DOMPoint) => {\n        const dx = p.x - point.x\n        const dy = p.y - point.y\n        return dx * dx + dy * dy\n    }\n\n    let bestLength = 0\n    let bestDistance = Infinity\n    for (let scanLength = 0; scanLength <= pathLength; scanLength += step) {\n        const scan = pathNode.getPointAtLength(scanLength)\n        const scanDistance = distance2(scan)\n        if (scanDistance < bestDistance) {\n            bestLength = scanLength\n            bestDistance = scanDistance\n        }\n    }\n    return bestLength / pathLength\n}\n\nexport function polarToCartesian(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    angleInDegrees: number\n) {\n    const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0\n\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    }\n}\n\nexport function describeArc(\n    x: number,\n    y: number,\n    radius: number,\n    startAngle: number,\n    endAngle: number,\n    large?: boolean\n) {\n    const start = polarToCartesian(x, y, radius, endAngle)\n    const end = polarToCartesian(x, y, radius, startAngle)\n\n    const largeArcFlag =\n        large !== true && endAngle - startAngle <= 180 ? \"0\" : \"1\"\n\n    const d = [\n        \"M\",\n        start.x,\n        start.y,\n        \"A\",\n        radius,\n        radius,\n        0,\n        largeArcFlag,\n        0,\n        end.x,\n        end.y,\n    ].join(\" \")\n\n    return d\n}\n","export default function useWidgetSize(\n    variant?: \"icon\" | \"\",\n    widgetCount?: number\n) {\n    const icon = variant === \"icon\"\n\n    const mini = icon\n    let widgetSize: string\n    switch (widgetCount || 1) {\n        case 1:\n        case 2:\n            widgetSize = mini ? \"12em\" : \"16em\"\n            break\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n            widgetSize = mini ? \"10em\" : \"14em\"\n            break\n        default:\n            widgetSize = mini ? \"4em\" : \"5em\"\n            break\n    }\n    return widgetSize\n}\n","import { useTheme } from \"@mui/material\"\nimport { SVGProps, useContext } from \"react\"\nimport DarkModeContext from \"../ui/DarkModeContext\"\n\nexport default function useWidgetTheme(color?: \"primary\" | \"secondary\") {\n    const theme = useTheme()\n    const { palette } = theme\n    const { background } = palette\n    const { darkMode } = useContext(DarkModeContext)\n\n    const active: string =\n        color === \"primary\"\n            ? palette.primary.main\n            : color === \"secondary\"\n            ? palette.secondary.main\n            : palette.info.main\n    const backgroundColor =\n        darkMode === \"dark\" ? background.default : palette.grey[800]\n    const controlBackground =\n        darkMode === \"dark\" ? palette.grey[800] : palette.grey[400]\n    const textPrimary = palette.text.primary\n    const textProps: SVGProps<SVGTextElement> = {\n        fill: textPrimary,\n        alignmentBaseline: \"central\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"middle\",\n        pointerEvents: \"none\",\n        letterSpacing: 0,\n        style: {\n            userSelect: \"none\",\n            pointerEvents: \"none\",\n        },\n    }\n\n    return {\n        background: backgroundColor,\n        controlBackground,\n        active,\n        textPrimary,\n        textProps,\n    }\n}\n"],"names":["Example","timestamp","data","toVector","t","startTimestamp","s","roundWithPrecision","Recording","name","colors","headers","rows","units","FielddataSet","JDEventSource","id","Math","maxRows","create","fields","arrayConcatMany","registers","reg","palette","i","set","createFromFile","dataSet","row","bus","field","first","last","flatten","indexOf","colorOf","addRow","f","addData","Date","addExample","refreshminmax","r","n","toCSV","sep","allheaders","start","csv","options","cell","toJSON","server","useServiceServer","register","identifier","SystemReg","StreamingPreferredInterval","visible","reading","code","auxilliaryRegister","useRegister","useRegisterUnpackedValue","setError","useSnackbar","useState","useRegisterServer","hasSet","specification","hasData","useChange","_","color","regProps","isReading","isValue","min","useReadingAuxilliaryValue","max","readingError","resolution","useEffect","vs","setArgs","handleRefresh","sendArgs","setWorking","isReadOnlyRegister","setAppError","hideMissingValues","serviceName","registerName","humanify","showDeviceName","showServiceName","showRegisterName","showTrend","service","DEFAULT_HORIZON","DEFAULT_HEIGHT","horizon","useContext","useChartPalette","useMemo","FieldDataSet","useCallback","interval","useInterval","height","PREFIX","classes","graph","mini","Root","styled","marginTop","theme","marginBottom","display","width","converter","useUnitConverter","useWidgetTheme","shape","unit","symmetric","indexes","u","index","times","ex","maxt","mint","minv","unitConverter","maxv","opposite","isNaN","step","precision","rv","margin","h","w","strokeWidth","axisWidth","axisColor","pointRadius","toffset","fontSize","x","y","v","vph","lastRow","useGradient","yAxis","path","ri","dot","vpw","gradient","maxHeight","maxWidth","unique","valueTextLength","valueText","debouncedRef","useRef","alpha","inverter","value","props","hasValue","renderWithPrecision","useDebouncedValueTextLength","valueVariant","valueStyle","minWidth","fontVariantNumeric","unitStyle","captionStyle","handleChange","iv","unitInverter","onChange","unitName","secondaryLabel","resolveUnit","enumInfo","serviceSpecification","disabled","readOnly","controlled","kind","valueString","memberValueToString","serviceMemberSpecification","label","isWidget","variant","widgetSize","useWidgetSize","unitIcon","useUnitIcon","minValue","pick","maxValue","errorValue","error","prettyUnit","helperText","errorText","prettyMemberUnit","inputId","useId","inputType","isIntegerType","setTextValue","handleChecked","setValue","ev","newValue","tryParseMemberValue","setErrorText","handleEnumChange","event","flagsToValue","handleSliderChange","handleSliderWidgetChange","percentValueFormat","valueLabelFormat","percentValueLabelFormat","offFormat","isValueOrIntensity","valueToFlags","Object","signed","digits","nvalue","size","isSet","hasTypicalRange","marks","typicalMin","typicalMax","off","c","values","setValues","specifications","ENTER_KEY","SPACE_KEY","e","charCode","keyCodeFromEvent","handler","device","provider","useServiceProvider","twin","createTwin","deps","fireDownOnEnter","useFireKey","fireUpOnEnter","preventify","className","role","tabIndex","onPointerDown","onPointerUp","onPointerLeave","onKeyDown","onKeyUp","adapters","A","mA","inverters","useLocalStorage","converters","settings","names","setConverter","newSettings","setSettings","identity","adapter","darkMode","buttonProps","useSvgButtonProps","mo","checked","cx","cy","rn","sliderPathRef","m","roff","riff","sw","sa","ea","_step","displayValue","computeArc","mid","fraction","describeArc","va","db","dvalue","dactual","lineCap","tvalue","valueLabel","clickeable","handlePointerDown","svg","pos","svgPointerPoint","closest","closestPoint","pointerStyle","cursor","pathProps","onPointerMove","style","a","d","btnlabel","iconStroke","borderStroke","userSelect","pointerEvents","aspectRatio","vertical","position","viewBox","background","point","res","pathLength","pathNode","distance2","p","dx","dy","bestLength","bestDistance","scanLength","scan","scanDistance","angleInRadians","angleInDegrees","centerX","radius","centerY","polarToCartesian","end","largeArcFlag","large","endAngle","icon","widgetCount","useTheme","active","backgroundColor","controlBackground","textPrimary","textProps","fill","alignmentBaseline","dominantBaseline","textAnchor","letterSpacing"],"sourceRoot":""}